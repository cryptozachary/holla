{"version":3,"file":"static/js/main.b357edb5.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/automation-events/build/es5/bundle.js","../node_modules/broker-factory/src/helpers/port-map.ts","../node_modules/broker-factory/src/module.ts","../node_modules/broker-factory/src/helpers/extend-broker-implementation.ts","../node_modules/broker-factory/src/guards/message-port.ts","../node_modules/compilerr/build/es5/bundle.js","../node_modules/dashify/index.js","../node_modules/extendable-media-recorder-wav-encoder-broker/src/module.ts","../node_modules/extendable-media-recorder-wav-encoder/src/module.ts","../node_modules/extendable-media-recorder-wav-encoder/src/worker/worker.ts","../node_modules/media-encoder-host-broker/src/module.ts","../node_modules/media-encoder-host/src/module.ts","../node_modules/media-encoder-host/src/worker/worker.ts","../node_modules/extendable-media-recorder/src/factories/invalid-modification-error.ts","../node_modules/extendable-media-recorder/src/factories/not-supported-error.ts","../node_modules/rxjs-interop/source/symbols.ts","../node_modules/rxjs-interop/source/to-observer.ts","../node_modules/subscribable-things/src/factories/animation-frame.ts","../node_modules/subscribable-things/src/functions/emit-not-supported-error.ts","../node_modules/subscribable-things/src/module.ts","../node_modules/subscribable-things/src/factories/window.ts","../node_modules/subscribable-things/src/factories/wrap-subscribe-function.ts","../node_modules/rxjs-interop/source/patch.ts","../node_modules/subscribable-things/src/factories/mutations.ts","../node_modules/subscribable-things/src/factories/map-subscribable-thing.ts","../node_modules/subscribable-things/src/factories/prepend-subscribable-thing.ts","../node_modules/subscribable-things/src/factories/attribute.ts","../node_modules/subscribable-things/src/factories/geolocation.ts","../node_modules/subscribable-things/src/factories/intersections.ts","../node_modules/subscribable-things/src/factories/media-devices.ts","../node_modules/subscribable-things/src/factories/media-query-match.ts","../node_modules/subscribable-things/src/factories/metrics.ts","../node_modules/subscribable-things/src/factories/midi-inputs.ts","../node_modules/subscribable-things/src/factories/midi-outputs.ts","../node_modules/subscribable-things/src/factories/on.ts","../node_modules/subscribable-things/src/factories/online.ts","../node_modules/subscribable-things/src/factories/permission-state.ts","../node_modules/subscribable-things/src/factories/reports.ts","../node_modules/subscribable-things/src/factories/resizes.ts","../node_modules/subscribable-things/src/factories/unhandled-rejection.ts","../node_modules/subscribable-things/src/factories/video-frame.ts","../node_modules/subscribable-things/src/factories/wake-lock.ts","../node_modules/worker-factory/src/helpers/error-renderers.ts","../node_modules/recorder-audio-worklet/src/module.ts","../node_modules/worker-factory/src/helpers/extend-worker-implementation.ts","../node_modules/recorder-audio-worklet/src/factories/add-recorder-audio-worklet-module.ts","../node_modules/recorder-audio-worklet/src/worklet/worklet.ts","../node_modules/recorder-audio-worklet/src/factories/recorder-audio-worklet-node-factory.ts","../node_modules/recorder-audio-worklet/src/factories/listener.ts","../node_modules/recorder-audio-worklet/src/factories/post-message-factory.ts","../node_modules/recorder-audio-worklet/src/functions/validate-state.ts","../node_modules/extendable-media-recorder/src/factories/web-audio-media-recorder.ts","../node_modules/extendable-media-recorder/src/module.ts","../node_modules/extendable-media-recorder/src/factories/window.ts","../node_modules/extendable-media-recorder/src/factories/blob-event-factory.ts","../node_modules/extendable-media-recorder/src/factories/native-blob-event-constructor.ts","../node_modules/extendable-media-recorder/src/factories/invalid-state-error.ts","../node_modules/extendable-media-recorder/src/factories/read-variable-size-integer.ts","../node_modules/extendable-media-recorder/src/functions/read-variable-size-integer-length.ts","../node_modules/extendable-media-recorder/src/factories/read-element-content.ts","../node_modules/extendable-media-recorder/src/factories/read-element-type.ts","../node_modules/extendable-media-recorder/src/factories/decode-web-m-chunk.ts","../node_modules/extendable-media-recorder/src/factories/webm-pcm-media-recorder.ts","../node_modules/extendable-media-recorder/src/factories/event-target-factory.ts","../node_modules/extendable-media-recorder/src/factories/native-media-recorder-constructor.ts","../node_modules/extendable-media-recorder/src/factories/native-media-recorder.ts","../node_modules/extendable-media-recorder/src/factories/media-recorder-constructor.ts","../node_modules/extendable-media-recorder/src/factories/event-target-constructor.ts","../node_modules/extendable-media-recorder/src/functions/wrap-event-listener.ts","../node_modules/extendable-media-recorder/src/factories/is-supported-promise.ts","../node_modules/fast-unique-numbers/build/es5/bundle.js","../node_modules/indefinite-article/indefinite-article.js","../node_modules/multi-buffer-data-view/build/es5/bundle.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-media-recorder/index.js","../node_modules/react-media-recorder/lib/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/standardized-audio-context/src/globals.ts","../node_modules/standardized-audio-context/src/helpers/is-constructible.ts","../node_modules/standardized-audio-context/src/helpers/split-import-statements.ts","../node_modules/standardized-audio-context/src/factories/add-audio-worklet-module.ts","../node_modules/standardized-audio-context/src/helpers/get-value-for-key.ts","../node_modules/standardized-audio-context/src/helpers/pick-element-from-set.ts","../node_modules/standardized-audio-context/src/helpers/delete-passive-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-event-listeners-of-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-active.ts","../node_modules/standardized-audio-context/src/guards/audio-worklet-node.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-passive.ts","../node_modules/standardized-audio-context/src/helpers/set-internal-state-to-passive-when-necessary.ts","../node_modules/standardized-audio-context/src/factories/analyser-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/is-owned-by-context.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.ts","../node_modules/standardized-audio-context/src/factories/index-size-error.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-get-channel-data-method.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-constructor.ts","../node_modules/standardized-audio-context/src/constants.ts","../node_modules/standardized-audio-context/src/helpers/is-active-audio-node.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-source-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-node-connections.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-param-connections.ts","../node_modules/standardized-audio-context/src/helpers/deactivate-active-audio-node-input-connections.ts","../node_modules/standardized-audio-context/src/guards/audio-buffer-source-node.ts","../node_modules/standardized-audio-context/src/guards/biquad-filter-node.ts","../node_modules/standardized-audio-context/src/guards/constant-source-node.ts","../node_modules/standardized-audio-context/src/guards/gain-node.ts","../node_modules/standardized-audio-context/src/guards/oscillator-node.ts","../node_modules/standardized-audio-context/src/guards/stereo-panner-node.ts","../node_modules/standardized-audio-context/src/helpers/deactivate-audio-graph.ts","../node_modules/standardized-audio-context/src/helpers/is-valid-latency-hint.ts","../node_modules/standardized-audio-context/src/guards/audio-node.ts","../node_modules/standardized-audio-context/src/guards/audio-node-output-connection.ts","../node_modules/standardized-audio-context/src/helpers/insert-element-in-set.ts","../node_modules/standardized-audio-context/src/helpers/add-active-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/add-passive-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/guards/native-audio-node-faker.ts","../node_modules/standardized-audio-context/src/helpers/connect-native-audio-node-to-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/delete-active-input-connection.ts","../node_modules/standardized-audio-context/src/helpers/delete-event-listeners-of-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/delete-passive-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/disconnect-native-audio-node-from-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/get-native-audio-param.ts","../node_modules/standardized-audio-context/src/helpers/is-part-of-a-cycle.ts","../node_modules/standardized-audio-context/src/helpers/is-passive-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-node-disconnect-method-support.ts","../node_modules/standardized-audio-context/src/helpers/visit-each-audio-node-once.ts","../node_modules/standardized-audio-context/src/guards/native-audio-node.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-node-disconnect-method.ts","../node_modules/standardized-audio-context/src/factories/audio-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/delete-active-input-connection-to-audio-param.ts","../node_modules/standardized-audio-context/src/read-only-map.ts","../node_modules/standardized-audio-context/src/factories/audio-worklet-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/copy-from-channel.ts","../node_modules/standardized-audio-context/src/helpers/copy-to-channel.ts","../node_modules/standardized-audio-context/src/helpers/create-nested-arrays.ts","../node_modules/standardized-audio-context/src/helpers/get-audio-worklet-processor.ts","../node_modules/standardized-audio-context/src/factories/audio-worklet-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/biquad-filter-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/channel-merger-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/channel-splitter-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/constant-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/convolver-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/detach-array-buffer.ts","../node_modules/standardized-audio-context/src/factories/delay-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/disconnect-multiple-outputs.ts","../node_modules/standardized-audio-context/src/factories/dynamics-compressor-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/gain-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/invalid-state-error.ts","../node_modules/standardized-audio-context/src/factories/invalid-access-error.ts","../node_modules/standardized-audio-context/src/factories/iir-filter-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/filter-buffer.ts","../node_modules/standardized-audio-context/src/factories/iir-filter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/media-stream-audio-destination-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/test-promise-support.ts","../node_modules/standardized-audio-context/src/factories/minimal-offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-option.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-options.ts","../node_modules/standardized-audio-context/src/helpers/test-analyser-node-get-float-time-domain-data-method-support.ts","../node_modules/standardized-audio-context/src/helpers/assign-native-audio-node-audio-param-value.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.ts","../node_modules/standardized-audio-context/src/helpers/compute-buffer-size.ts","../node_modules/standardized-audio-context/src/helpers/clone-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/helpers/create-audio-worklet-processor-promise.ts","../node_modules/standardized-audio-context/src/factories/native-biquad-filter-node.ts","../node_modules/standardized-audio-context/src/factories/native-channel-splitter-node.ts","../node_modules/standardized-audio-context/src/helpers/wrap-channel-splitter-node.ts","../node_modules/standardized-audio-context/src/helpers/intercept-connections.ts","../node_modules/standardized-audio-context/src/factories/native-delay-node.ts","../node_modules/standardized-audio-context/src/factories/native-gain-node.ts","../node_modules/standardized-audio-context/src/factories/native-iir-filter-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/cache-test-result.ts","../node_modules/standardized-audio-context/src/factories/get-native-context.ts","../node_modules/standardized-audio-context/src/factories/add-audio-node-connections.ts","../node_modules/standardized-audio-context/src/factories/convert-number-to-unsigned-long.ts","../node_modules/standardized-audio-context/src/factories/add-audio-param-connections.ts","../node_modules/standardized-audio-context/src/factories/native-script-processor-node.ts","../node_modules/standardized-audio-context/src/factories/not-supported-error.ts","../node_modules/standardized-audio-context/src/factories/offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/oscillator-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/panner-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/periodic-wave-constructor.ts","../node_modules/standardized-audio-context/src/factories/stereo-panner-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/unknown-error.ts","../node_modules/standardized-audio-context/src/factories/wave-shaper-node-constructor.ts","../node_modules/standardized-audio-context/src/helpers/get-first-sample.ts","../node_modules/standardized-audio-context/src/helpers/is-dc-curve.ts","../node_modules/standardized-audio-context/src/helpers/overwrite-accessors.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.ts","../node_modules/standardized-audio-context/src/helpers/wrap-event-listener.ts","../node_modules/standardized-audio-context/src/module.ts","../node_modules/standardized-audio-context/src/factories/add-active-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/add-passive-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/delete-active-input-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/get-audio-node-tail-time.ts","../node_modules/standardized-audio-context/src/factories/window.ts","../node_modules/standardized-audio-context/src/factories/native-analyser-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-analyser-node-get-float-time-domain-data-method.ts","../node_modules/standardized-audio-context/src/factories/get-audio-node-renderer.ts","../node_modules/standardized-audio-context/src/factories/render-inputs-of-audio-node.ts","../node_modules/standardized-audio-context/src/factories/analyser-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-offline-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/is-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/event-target-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-context.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-node.ts","../node_modules/standardized-audio-context/src/factories/is-native-audio-param.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/add-connection-to-audio-node.ts","../node_modules/standardized-audio-context/src/factories/increment-cycle-counter-factory.ts","../node_modules/standardized-audio-context/src/factories/decrement-cycle-counter.ts","../node_modules/standardized-audio-context/src/factories/detect-cycles.ts","../node_modules/standardized-audio-context/src/guards/delay-node.ts","../node_modules/standardized-audio-context/src/factories/native-audio-buffer-constructor.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-copy-channel-methods.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.ts","../node_modules/standardized-audio-context/src/factories/test-audio-buffer-constructor-support.ts","../node_modules/standardized-audio-context/src/factories/add-silent-connection.ts","../node_modules/standardized-audio-context/src/factories/render-inputs-of-audio-param.ts","../node_modules/standardized-audio-context/src/factories/connect-audio-param.ts","../node_modules/standardized-audio-context/src/factories/native-audio-buffer-source-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.ts","../node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.ts","../node_modules/standardized-audio-context/src/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.ts","../node_modules/standardized-audio-context/src/factories/render-automation.ts","../node_modules/standardized-audio-context/src/factories/get-audio-param-renderer.ts","../node_modules/standardized-audio-context/src/factories/audio-buffer-source-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/audio-param-factory.ts","../node_modules/standardized-audio-context/src/factories/audio-param-renderer.ts","../node_modules/standardized-audio-context/src/helpers/set-value-at-time-until-possible.ts","../node_modules/standardized-audio-context/src/factories/audio-destination-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/audio-destination-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-audio-destination-node.ts","../node_modules/standardized-audio-context/src/factories/biquad-filter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/set-audio-node-tail-time.ts","../node_modules/standardized-audio-context/src/factories/monitor-connections.ts","../node_modules/standardized-audio-context/src/factories/wrap-channel-merger-node.ts","../node_modules/standardized-audio-context/src/factories/native-channel-merger-node-factory.ts","../node_modules/standardized-audio-context/src/factories/channel-merger-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/channel-splitter-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-channel-splitter-options.ts","../node_modules/standardized-audio-context/src/factories/native-constant-source-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-constant-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/constant-source-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-convolver-node-factory.ts","../node_modules/standardized-audio-context/src/factories/convolver-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/delay-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-dynamics-compressor-node-factory.ts","../node_modules/standardized-audio-context/src/factories/dynamics-compressor-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/gain-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/render-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/test-offline-audio-context-current-time-support.ts","../node_modules/standardized-audio-context/src/factories/native-iir-filter-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/wrap-iir-filter-node-get-frequency-response-method.ts","../node_modules/standardized-audio-context/src/factories/audio-listener-factory.ts","../node_modules/standardized-audio-context/src/factories/minimal-base-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-oscillator-node-factory.ts","../node_modules/standardized-audio-context/src/factories/oscillator-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/connected-native-audio-buffer-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/native-wave-shaper-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-wave-shaper-node-factory.ts","../node_modules/standardized-audio-context/src/factories/native-panner-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-panner-node-factory.ts","../node_modules/standardized-audio-context/src/factories/panner-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/native-periodic-wave-factory.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-periodic-wave-options.ts","../node_modules/standardized-audio-context/src/factories/native-stereo-panner-node-faker-factory.ts","../node_modules/standardized-audio-context/src/factories/native-stereo-panner-node-factory.ts","../node_modules/standardized-audio-context/src/factories/stereo-panner-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/wave-shaper-node-renderer-factory.ts","../node_modules/standardized-audio-context/src/factories/is-secure-context.ts","../node_modules/standardized-audio-context/src/factories/expose-current-frame-and-current-time.ts","../node_modules/standardized-audio-context/src/factories/get-or-create-backup-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/evaluate-source.ts","../node_modules/standardized-audio-context/src/factories/fetch-source.ts","../node_modules/standardized-audio-context/src/factories/abort-error.ts","../node_modules/standardized-audio-context/src/factories/test-audio-worklet-processor-post-message-support.ts","../node_modules/standardized-audio-context/src/factories/is-native-context.ts","../node_modules/standardized-audio-context/src/factories/decode-audio-data.ts","../node_modules/standardized-audio-context/src/factories/data-clone-error.ts","../node_modules/standardized-audio-context/src/factories/encoding-error.ts","../node_modules/standardized-audio-context/src/factories/base-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/media-element-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-media-element-audio-source-node.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-audio-destination-node.ts","../node_modules/standardized-audio-context/src/factories/media-stream-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-audio-source-node.ts","../node_modules/standardized-audio-context/src/factories/native-media-stream-track-audio-source-node-factory.ts","../node_modules/standardized-audio-context/src/factories/media-stream-track-audio-source-node-constructor.ts","../node_modules/standardized-audio-context/src/factories/audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/get-unrendered-audio-worklet-nodes.ts","../node_modules/standardized-audio-context/src/factories/add-unrendered-audio-worklet-node.ts","../node_modules/standardized-audio-context/src/factories/connect-multiple-outputs.ts","../node_modules/standardized-audio-context/src/factories/delete-unrendered-audio-worklet-node.ts","../node_modules/standardized-audio-context/src/factories/get-active-audio-worklet-node-inputs.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-faker-factory.ts","../node_modules/standardized-audio-context/src/helpers/create-audio-worklet-processor.ts","../node_modules/standardized-audio-context/src/factories/native-audio-worklet-node-factory.ts","../node_modules/standardized-audio-context/src/helpers/test-clonability-of-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/factories/get-backup-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/set-active-audio-worklet-node-inputs.ts","../node_modules/standardized-audio-context/src/helpers/sanitize-audio-worklet-node-options.ts","../node_modules/standardized-audio-context/src/helpers/test-audio-worklet-node-options-clonability.ts","../node_modules/standardized-audio-context/src/factories/minimal-audio-context-constructor.ts","../node_modules/standardized-audio-context/src/factories/create-native-offline-audio-context.ts","../node_modules/standardized-audio-context/src/factories/start-rendering.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-context.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-node.ts","../node_modules/standardized-audio-context/src/factories/is-any-audio-param.ts","../node_modules/standardized-audio-context/src/factories/is-any-offline-audio-context.ts","../WaveSurfer/webpack/universalModuleDefinition","../WaveSurfer/src/drawer.canvasentry.js","../WaveSurfer/src/drawer.js","../WaveSurfer/src/drawer.multicanvas.js","../WaveSurfer/src/mediaelement-webaudio.js","../WaveSurfer/src/mediaelement.js","../WaveSurfer/src/peakcache.js","../WaveSurfer/src/util/absMax.js","../WaveSurfer/src/util/clamp.js","../WaveSurfer/src/util/fetch.js","../WaveSurfer/src/util/frame.js","../WaveSurfer/src/util/get-id.js","../WaveSurfer/src/util/index.js","../WaveSurfer/src/util/max.js","../WaveSurfer/src/util/min.js","../WaveSurfer/src/util/observer.js","../WaveSurfer/src/util/orientation.js","../WaveSurfer/src/util/prevent-click.js","../WaveSurfer/src/util/request-animation-frame.js","../WaveSurfer/src/util/silence-mode.js","../WaveSurfer/src/util/style.js","../WaveSurfer/src/wavesurfer.js","../WaveSurfer/src/webaudio.js","../WaveSurfer/node_modules/debounce/index.js","../WaveSurfer/webpack/bootstrap","../WaveSurfer/webpack/startup","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","components/effects.js","components/header.js","components/buttons.js","images/mic.svg","../node_modules/tone/Tone/version.ts","../node_modules/tone/Tone/core/util/Debug.ts","../node_modules/tone/Tone/core/util/TypeCheck.ts","../node_modules/tone/Tone/core/context/AudioContext.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/tslib/tslib.es6.js","../node_modules/tone/Tone/core/clock/Ticker.ts","../node_modules/tone/Tone/core/util/AdvancedTypeCheck.ts","../node_modules/tone/Tone/core/util/Defaults.ts","../node_modules/tone/Tone/core/Tone.ts","../node_modules/tone/Tone/core/util/Math.ts","../node_modules/tone/Tone/core/util/Timeline.ts","../node_modules/tone/Tone/core/context/ContextInitialization.ts","../node_modules/tone/Tone/core/util/Emitter.ts","../node_modules/tone/Tone/core/context/BaseContext.ts","../node_modules/tone/Tone/core/context/Context.ts","../node_modules/tone/Tone/core/context/DummyContext.ts","../node_modules/tone/Tone/core/util/Interface.ts","../node_modules/tone/Tone/core/context/ToneAudioBuffer.ts","../node_modules/tone/Tone/core/context/OfflineContext.ts","../node_modules/tone/Tone/core/Global.ts","../node_modules/tone/Tone/core/type/Conversions.ts","../node_modules/tone/Tone/core/type/TimeBase.ts","../node_modules/tone/Tone/core/type/Time.ts","../node_modules/tone/Tone/core/type/Frequency.ts","../node_modules/tone/Tone/core/type/TransportTime.ts","../node_modules/tone/Tone/core/context/ToneWithContext.ts","../node_modules/tone/Tone/core/util/StateTimeline.ts","../node_modules/tone/Tone/core/context/Param.ts","../node_modules/tone/Tone/core/context/ToneAudioNode.ts","../node_modules/tone/Tone/core/context/Gain.ts","../node_modules/tone/Tone/source/OneShotSource.ts","../node_modules/tone/Tone/signal/ToneConstantSource.ts","../node_modules/tone/Tone/signal/Signal.ts","../node_modules/tone/Tone/core/clock/TickParam.ts","../node_modules/tone/Tone/core/clock/TickSignal.ts","../node_modules/tone/Tone/core/clock/TickSource.ts","../node_modules/tone/Tone/core/clock/Clock.ts","../node_modules/tone/Tone/core/context/Delay.ts","../node_modules/tone/Tone/core/context/ToneAudioBuffers.ts","../node_modules/tone/Tone/core/type/Ticks.ts","../node_modules/tone/Tone/core/util/Draw.ts","../node_modules/tone/Tone/core/util/IntervalTimeline.ts","../node_modules/tone/Tone/component/channel/Volume.ts","../node_modules/tone/Tone/core/context/Destination.ts","../node_modules/tone/Tone/core/util/TimelineValue.ts","../node_modules/tone/Tone/core/clock/TransportEvent.ts","../node_modules/tone/Tone/core/clock/TransportRepeatEvent.ts","../node_modules/tone/Tone/core/clock/Transport.ts","../node_modules/tone/Tone/source/Source.ts","../node_modules/tone/Tone/source/buffer/ToneBufferSource.ts","../node_modules/tone/Tone/source/Noise.ts","../node_modules/tone/Tone/source/oscillator/OscillatorInterface.ts","../node_modules/tone/Tone/source/oscillator/ToneOscillatorNode.ts","../node_modules/tone/Tone/source/oscillator/Oscillator.ts","../node_modules/tone/Tone/signal/SignalOperator.ts","../node_modules/tone/Tone/signal/WaveShaper.ts","../node_modules/tone/Tone/signal/AudioToGain.ts","../node_modules/tone/Tone/signal/Multiply.ts","../node_modules/tone/Tone/source/oscillator/AMOscillator.ts","../node_modules/tone/Tone/source/oscillator/FMOscillator.ts","../node_modules/tone/Tone/source/oscillator/PulseOscillator.ts","../node_modules/tone/Tone/source/oscillator/FatOscillator.ts","../node_modules/tone/Tone/source/oscillator/PWMOscillator.ts","../node_modules/tone/Tone/source/oscillator/OmniOscillator.ts","../node_modules/tone/Tone/signal/Add.ts","../node_modules/tone/Tone/signal/Scale.ts","../node_modules/tone/Tone/signal/Zero.ts","../node_modules/tone/Tone/source/oscillator/LFO.ts","../node_modules/tone/Tone/core/util/Decorator.ts","../node_modules/tone/Tone/source/buffer/Player.ts","../node_modules/tone/Tone/source/buffer/Players.ts","../node_modules/tone/Tone/signal/GainToAudio.ts","../node_modules/tone/Tone/signal/Negate.ts","../node_modules/tone/Tone/signal/Subtract.ts","../node_modules/tone/Tone/component/envelope/Envelope.ts","../node_modules/tone/Tone/instrument/Instrument.ts","../node_modules/tone/Tone/instrument/Monophonic.ts","../node_modules/tone/Tone/component/envelope/AmplitudeEnvelope.ts","../node_modules/tone/Tone/instrument/Synth.ts","../node_modules/tone/Tone/instrument/MembraneSynth.ts","../node_modules/tone/Tone/instrument/NoiseSynth.ts","../node_modules/tone/Tone/core/worklet/WorkletGlobalScope.ts","../node_modules/tone/Tone/core/worklet/ToneAudioWorklet.ts","../node_modules/tone/Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","../node_modules/tone/Tone/core/worklet/SingleIOProcessor.worklet.ts","../node_modules/tone/Tone/core/worklet/DelayLine.worklet.ts","../node_modules/tone/Tone/component/filter/FeedbackCombFilter.worklet.ts","../node_modules/tone/Tone/component/filter/FeedbackCombFilter.ts","../node_modules/tone/Tone/instrument/Sampler.ts","../node_modules/tone/Tone/event/Pattern.ts","../node_modules/tone/Tone/component/channel/CrossFade.ts","../node_modules/tone/Tone/effect/Effect.ts","../node_modules/tone/Tone/component/channel/Panner.ts","../node_modules/tone/Tone/effect/BitCrusher.worklet.ts","../node_modules/tone/Tone/effect/BitCrusher.ts","../node_modules/tone/Tone/component/channel/Split.ts","../node_modules/tone/Tone/component/channel/Merge.ts","../node_modules/tone/Tone/effect/StereoEffect.ts","../node_modules/tone/Tone/effect/StereoFeedbackEffect.ts","../node_modules/tone/Tone/effect/Chorus.ts","../node_modules/tone/Tone/effect/Distortion.ts","../node_modules/tone/Tone/effect/FeedbackEffect.ts","../node_modules/tone/Tone/effect/FeedbackDelay.ts","../node_modules/tone/Tone/effect/Phaser.ts","../node_modules/tone/Tone/effect/Reverb.ts","../node_modules/tone/Tone/component/channel/MidSideSplit.ts","../node_modules/tone/Tone/component/channel/MidSideMerge.ts","../node_modules/tone/Tone/effect/MidSideEffect.ts","../node_modules/tone/Tone/effect/StereoWidener.ts","../node_modules/tone/Tone/component/channel/Solo.ts","../node_modules/tone/Tone/component/channel/PanVol.ts","../node_modules/tone/Tone/component/channel/Channel.ts","../node_modules/tone/Tone/component/channel/Mono.ts","../node_modules/tone/Tone/core/context/Listener.ts","../node_modules/tone/Tone/index.ts","images/left.svg","images/right.svg","components/octaves.js","../node_modules/wavesurfer.js/src/plugin/microphone/index.js","components/loadbutton.js","components/micbutton.js","components/display.js","components/EffectsData.js","App.js","index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default[\"default\"](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default[\"default\"](AutomationEventList, [{\n        key: _Symbol$iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default[\"default\"](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }(Symbol.iterator);\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","export const PORT_MAP: WeakMap<MessagePort, number> = new WeakMap();\n","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IWorkerDefinition, IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\nimport { IBrokerDefinition, IDefaultBrokerDefinition, IWorkerEvent } from './interfaces';\nimport { TBrokerImplementation } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst ONGOING_REQUESTS = new WeakMap<MessagePort | Worker, Map<number, { reject: Function; resolve: Function }>>();\n\nconst createOrGetOngoingRequests = (sender: MessagePort | Worker): Map<number, { reject: Function; resolve: Function }> => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return <Map<number, { reject: Function; resolve: Function }>>ONGOING_REQUESTS.get(sender);\n    }\n\n    const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n\n    return ongoingRequests;\n};\n\nexport const createBroker = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    brokerImplementation: TBrokerImplementation<T, U>\n): ((sender: MessagePort | Worker) => T & IDefaultBrokerDefinition) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n\n    return (sender: MessagePort | Worker) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n\n        sender.addEventListener('message', <EventListener>(({ data: message }: IWorkerEvent) => {\n            const { id } = message;\n\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = <{ reject: Function; resolve: Function }>ongoingRequests.get(id);\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }));\n\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n\n        const call = <V extends keyof U>(method: V, params: U[V]['params'] = null, transferables: U[V]['transferables'] = []) => {\n            return new Promise<U[V]['response']['result']>((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                if (params === null) {\n                    sender.postMessage({ id, method }, <Transferable[]>transferables);\n                } else {\n                    sender.postMessage({ id, method, params }, <Transferable[]>transferables);\n                }\n            });\n        };\n        const notify = <V extends keyof U>(method: V, params: U[V]['params'], transferables: U[V]['transferables'] = []) => {\n            sender.postMessage({ id: null, method, params }, <Transferable[]>transferables);\n        };\n\n        let functions: object = {};\n\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n\n        return <T & IDefaultBrokerDefinition>{ ...functions };\n    };\n};\n","import { IWorkerDefinition } from 'worker-factory';\nimport { IBrokerDefinition, IDefaultBrokerDefinition } from '../interfaces';\nimport { TBrokerImplementation } from '../types';\nimport { PORT_MAP } from './port-map';\n\nexport const extendBrokerImplementation = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    partialBrokerImplementation: TBrokerImplementation<T, U>\n): TBrokerImplementation<T & IDefaultBrokerDefinition, U> =>\n    <TBrokerImplementation<T & IDefaultBrokerDefinition, U>>{\n        ...partialBrokerImplementation,\n        connect: ({ call }) => {\n            return async (): Promise<MessagePort> => {\n                const { port1, port2 } = new MessageChannel();\n\n                const portId = <number>await call('connect', { port: port1 }, [port1]);\n\n                PORT_MAP.set(port2, portId);\n\n                return port2;\n            };\n        },\n        disconnect: ({ call }) => {\n            return async (port: MessagePort): Promise<void> => {\n                const portId = PORT_MAP.get(port);\n\n                if (portId === undefined) {\n                    throw new Error('The given port is not connected.');\n                }\n\n                await call('disconnect', { portId });\n            };\n        },\n        isSupported: ({ call }) => {\n            return () => call('isSupported');\n        }\n    };\n","export const isMessagePort = (sender: MessagePort | Worker): sender is MessagePort => {\n    return typeof (<MessagePort>sender).start === 'function';\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/toConsumableArray'), require('dashify'), require('indefinite-article')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/toConsumableArray', 'dashify', 'indefinite-article'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.compilerr = {}, global._toConsumableArray, global.dashify, global.indefiniteArticle));\n})(this, (function (exports, _toConsumableArray, dashify, indefiniteArticle) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);\n    var dashify__default = /*#__PURE__*/_interopDefaultLegacy(dashify);\n    var indefiniteArticle__default = /*#__PURE__*/_interopDefaultLegacy(indefiniteArticle);\n\n    var applyModifiers = function applyModifiers(name, modifiers) {\n      if (modifiers === undefined) {\n        return name;\n      }\n\n      return modifiers.reduce(function (modifiedName, modifier) {\n        if (modifier === 'capitalize') {\n          var head = modifiedName.charAt(0).toUpperCase();\n          var tail = modifiedName.slice(1);\n          return \"\".concat(head).concat(tail);\n        }\n\n        if (modifier === 'dashify') {\n          return dashify__default[\"default\"](modifiedName);\n        }\n\n        if (modifier === 'prependIndefiniteArticle') {\n          return \"\".concat(indefiniteArticle__default[\"default\"](modifiedName), \" \").concat(modifiedName);\n        }\n\n        return modifiedName;\n      }, name);\n    };\n\n    var buildRegex = function buildRegex(variable) {\n      var expression = variable.name + variable.modifiers.map(function (modifier) {\n        return \"\\\\.\".concat(modifier, \"\\\\(\\\\)\");\n      }).join('');\n      return new RegExp(\"\\\\$\\\\{\".concat(expression, \"}\"), 'g');\n    };\n\n    var preRenderString = function preRenderString(string, parameters) {\n      var expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n      var variables = [];\n      var expressionResult = expressionRegex.exec(string);\n\n      while (expressionResult !== null) {\n        var variable = {\n          modifiers: [],\n          name: expressionResult[1]\n        };\n\n        if (expressionResult[3] !== undefined) {\n          var modifiersRegex = /\\.[^(]+\\(\\)/g;\n          var modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n\n          while (modifiersRegexResult !== null) {\n            variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n            modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          }\n        }\n\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n      }\n\n      var preRenderedParts = variables.reduce(function (parts, variable) {\n        return parts.map(function (part) {\n          if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce(function (prts, prt, index) {\n              if (index === 0) {\n                return [prt];\n              }\n\n              if (variable.name in parameters) {\n                return [].concat(_toConsumableArray__default[\"default\"](prts), [applyModifiers(parameters[variable.name], variable.modifiers), prt]);\n              }\n\n              return [].concat(_toConsumableArray__default[\"default\"](prts), [function (prmtrs) {\n                return applyModifiers(prmtrs[variable.name], variable.modifiers);\n              }, prt]);\n            }, []);\n          }\n\n          return [part];\n        }).reduce(function (prts, part) {\n          return [].concat(_toConsumableArray__default[\"default\"](prts), _toConsumableArray__default[\"default\"](part));\n        }, []);\n      }, [string]);\n      return function (missingParameters) {\n        return preRenderedParts.reduce(function (renderedParts, preRenderedPart) {\n          if (typeof preRenderedPart === 'string') {\n            return [].concat(_toConsumableArray__default[\"default\"](renderedParts), [preRenderedPart]);\n          }\n\n          return [].concat(_toConsumableArray__default[\"default\"](renderedParts), [preRenderedPart(missingParameters)]);\n        }, []).join('');\n      };\n    };\n\n    var compile = function compile(template) {\n      var knownParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n      var renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n\n      function render() {\n        var causeOrMissingParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionalCause = arguments.length > 1 ? arguments[1] : undefined;\n        var hasNoOptionalCause = optionalCause === undefined && (causeOrMissingParameters instanceof Error || causeOrMissingParameters.code !== undefined && causeOrMissingParameters.code.slice(-9) === 'Exception');\n\n        var _ref = hasNoOptionalCause ? {\n          cause: causeOrMissingParameters,\n          missingParameters: {}\n        } : {\n          cause: optionalCause,\n          missingParameters: causeOrMissingParameters\n        },\n            cause = _ref.cause,\n            missingParameters = _ref.missingParameters;\n\n        var err = renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters));\n\n        if (cause !== null) {\n          err.cause = cause;\n        }\n\n        if (renderCode !== undefined) {\n          err.code = renderCode(missingParameters);\n        }\n\n        if (template.status !== undefined) {\n          err.status = template.status;\n        }\n\n        return err;\n      }\n\n      return render;\n    };\n\n    exports.compile = compile;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","import { createBroker } from 'broker-factory';\nimport { TExtendableMediaRecorderWavEncoderWorkerDefinition } from 'extendable-media-recorder-wav-encoder-worker';\nimport { IExtendableMediaRecorderWavEncoderBrokerDefinition } from './interfaces';\nimport { TExtendableMediaRecorderWavEncoderBrokerLoader, TExtendableMediaRecorderWavEncoderBrokerWrapper } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nexport const wrap: TExtendableMediaRecorderWavEncoderBrokerWrapper = createBroker<\n    IExtendableMediaRecorderWavEncoderBrokerDefinition,\n    TExtendableMediaRecorderWavEncoderWorkerDefinition\n>({\n    characterize: ({ call }) => {\n        return () => call('characterize');\n    },\n    encode: ({ call }) => {\n        return (recordingId, timeslice) => {\n            return call('encode', { recordingId, timeslice });\n        };\n    },\n    record: ({ call }) => {\n        return async (recordingId, sampleRate, typedArrays) => {\n            await call(\n                'record',\n                { recordingId, sampleRate, typedArrays },\n                typedArrays.map(({ buffer }) => buffer)\n            );\n        };\n    }\n});\n\nexport const load: TExtendableMediaRecorderWavEncoderBrokerLoader = (url: string) => {\n    const worker = new Worker(url);\n\n    return wrap(worker);\n};\n","import { load } from 'extendable-media-recorder-wav-encoder-broker';\nimport { worker } from './worker/worker';\n\nconst blob: Blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\n\nconst url: string = URL.createObjectURL(blob);\n\nconst extendableMediaRecorderWavEncoder = load(url);\n\nexport const characterize = extendableMediaRecorderWavEncoder.characterize;\n\nexport const connect = extendableMediaRecorderWavEncoder.connect;\n\nexport const disconnect = extendableMediaRecorderWavEncoder.disconnect;\n\nexport const encode = extendableMediaRecorderWavEncoder.encode;\n\nexport const isSupported = extendableMediaRecorderWavEncoder.isSupported;\n\nexport const record = extendableMediaRecorderWavEncoder.record;\n\nURL.revokeObjectURL(url);\n","// This is the minified and stringified code of the extendable-media-recorder-wav-encoder-worker package.\nexport const worker = `(()=>{var e={834:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},640:(e,t,r)=>{var n=r(834);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},942:e=>{e.exports=function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},841:e=>{e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},e.exports.__esModule=!0,e.exports.default=e.exports},545:(e,t,r)=>{var n=r(640),o=r(942),s=r(798),a=r(841);e.exports=function(e){return n(e)||o(e)||s(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},798:(e,t,r)=>{var n=r(834);e.exports=function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},775:function(e,t,r){!function(e,t,r,n){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var s=o(t),a=o(r),i=o(n),u=function(e,t){return void 0===t?e:t.reduce((function(e,t){if(\"capitalize\"===t){var r=e.charAt(0).toUpperCase(),n=e.slice(1);return\"\".concat(r).concat(n)}return\"dashify\"===t?a.default(e):\"prependIndefiniteArticle\"===t?\"\".concat(i.default(e),\" \").concat(e):e}),e)},c=function(e){var t=e.name+e.modifiers.map((function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")})).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")},l=function(e,t){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[],o=r.exec(e);null!==o;){var a={modifiers:[],name:o[1]};if(void 0!==o[3])for(var i=/\\\\.[^(]+\\\\(\\\\)/g,l=i.exec(o[2]);null!==l;)a.modifiers.push(l[0].slice(1,-2)),l=i.exec(o[2]);n.push(a),o=r.exec(e)}var d=n.reduce((function(e,r){return e.map((function(e){return\"string\"==typeof e?e.split(c(r)).reduce((function(e,n,o){return 0===o?[n]:r.name in t?[].concat(s.default(e),[u(t[r.name],r.modifiers),n]):[].concat(s.default(e),[function(e){return u(e[r.name],r.modifiers)},n])}),[]):[e]})).reduce((function(e,t){return[].concat(s.default(e),s.default(t))}),[])}),[e]);return function(e){return d.reduce((function(t,r){return[].concat(s.default(t),\"string\"==typeof r?[r]:[r(e)])}),[]).join(\"\")}},d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:l(e.code,t),n=void 0===e.message?void 0:l(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,s=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},a=s.cause,i=s.missingParameters,u=void 0===n?new Error:new Error(n(i));return null!==a&&(u.cause=a),void 0!==r&&(u.code=r(i)),void 0!==e.status&&(u.status=e.status),u}return o};e.compile=d,Object.defineProperty(e,\"__esModule\",{value:!0})}(t,r(545),r(881),r(507))},881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},107:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),i=void 0===a?r.size:a<s?a+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*s);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,u=r(i),c=a(u,i),l=t(c);e.addUniqueNumber=l,e.generateUniqueNumber=c,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),s=[\"honest\",\"hour\",\"hono\"];for(t in s)if(0==o.indexOf(s[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var a=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{\"use strict\";var e=r(775);const t=-32603,n=-32602,o=-32601,s=(0,e.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:o}),a=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:t}),i=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:t}),u=(0,e.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:n}),c=(e,t)=>async r=>{let{data:{id:n,method:o,params:u}}=r;const c=t[o];try{if(void 0===c)throw s({method:o});const t=void 0===u?c():c(u);if(void 0===t)throw a({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}};var l=r(107);const d=new Map,f=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),s=(0,l.generateUniqueNumber)(d);return d.set(s,(()=>{o(),n.close(),d.delete(s)})),{result:s}},disconnect:e=>{let{portId:t}=e;const r=d.get(t);if(void 0===r)throw u({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),p=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const n=f(p,t,r),o=c(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},m=e=>e.reduce(((e,t)=>e+t.length),0),h=(e,t)=>{const r=[];let n=0;e:for(;n<t;){const t=e.length;for(let o=0;o<t;o+=1){const t=e[o];void 0===r[o]&&(r[o]=[]);const s=t.shift();if(void 0===s)break e;r[o].push(s),0===o&&(n+=s.length)}}if(n>t){const o=n-t;r.forEach(((t,r)=>{const n=t.pop(),s=n.length-o;t.push(n.subarray(0,s)),e[r].unshift(n.subarray(s))}))}return r},v=new Map,g=(e=>(t,r,n)=>{const o=e.get(t);if(void 0===o){const o={channelDataArrays:n.map((e=>[e])),isComplete:!0,sampleRate:r};return e.set(t,o),o}return o.channelDataArrays.forEach(((e,t)=>e.push(n[t]))),o})(v),x=((e,t)=>(r,n,o,s)=>{const a=o>>3,i=\"subsequent\"===n?0:44,u=r.length,c=e(r[0]),l=new ArrayBuffer(c*u*a+i),d=new DataView(l);return\"subsequent\"!==n&&t(d,o,u,\"complete\"===n?c:Number.POSITIVE_INFINITY,s),r.forEach(((e,t)=>{let r=i+t*a;e.forEach((e=>{const t=e.length;for(let n=0;n<t;n+=1){const t=e[n];d.setInt16(r,t<0?32768*Math.max(-1,t):32767*Math.min(1,t),!0),r+=u*a}}))})),[l]})(m,((e,t,r,n,o)=>{const s=t>>3,a=Math.min(n*r*s,4294967251);e.setUint32(0,1380533830),e.setUint32(4,a+36,!0),e.setUint32(8,1463899717),e.setUint32(12,1718449184),e.setUint32(16,16,!0),e.setUint16(20,1,!0),e.setUint16(22,r,!0),e.setUint32(24,o,!0),e.setUint32(28,o*r*s,!0),e.setUint16(32,r*s,!0),e.setUint16(34,t,!0),e.setUint32(36,1684108385),e.setUint32(40,a,!0)})),w=new Map;p(self,{characterize:()=>({result:/^audio\\\\/wav$/}),encode:e=>{let{recordingId:t,timeslice:r}=e;const n=w.get(t);void 0!==n&&(w.delete(t),n.reject(new Error(\"Another request was made to initiate an encoding.\")));const o=v.get(t);if(null!==r){if(void 0===o||m(o.channelDataArrays[0])*(1e3/o.sampleRate)<r)return new Promise(((e,n)=>{w.set(t,{reject:n,resolve:e,timeslice:r})}));const e=h(o.channelDataArrays,Math.ceil(r*(o.sampleRate/1e3))),n=x(e,o.isComplete?\"initial\":\"subsequent\",16,o.sampleRate);return o.isComplete=!1,{result:n,transferables:n}}if(void 0!==o){const e=x(o.channelDataArrays,o.isComplete?\"complete\":\"subsequent\",16,o.sampleRate);return v.delete(t),{result:e,transferables:e}}return{result:[],transferables:[]}},record:e=>{let{recordingId:t,sampleRate:r,typedArrays:n}=e;const o=g(t,r,n),s=w.get(t);if(void 0!==s&&m(o.channelDataArrays[0])*(1e3/r)>=s.timeslice){const e=h(o.channelDataArrays,Math.ceil(s.timeslice*(r/1e3))),n=x(e,o.isComplete?\"initial\":\"subsequent\",16,r);o.isComplete=!1,w.delete(t),s.resolve({result:n,transferables:n})}return{result:null}}})})()})();`; // tslint:disable-line:max-line-length\n","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\nimport { TMediaEncoderHostWorkerDefinition } from 'media-encoder-host-worker';\nimport { IMediaEncoderHostBrokerDefinition } from './interfaces';\nimport { TMediaEncoderHostBrokerLoader, TMediaEncoderHostBrokerWrapper } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst encoderIds: Set<number> = new Set();\n\nexport const wrap: TMediaEncoderHostBrokerWrapper = createBroker<IMediaEncoderHostBrokerDefinition, TMediaEncoderHostWorkerDefinition>({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n\n            encoderIds.delete(encoderId);\n\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\n\nexport const load: TMediaEncoderHostBrokerLoader = (url: string) => {\n    const worker = new Worker(url);\n\n    return wrap(worker);\n};\n","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\n\nconst blob: Blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\n\nconst url: string = URL.createObjectURL(blob);\n\nconst mediaEncoderHost = loadWorker(url);\n\nexport const connect = mediaEncoderHost.connect;\n\nexport const disconnect = mediaEncoderHost.disconnect;\n\nexport const encode = mediaEncoderHost.encode;\n\nexport const instantiate = mediaEncoderHost.instantiate;\n\nexport const isSupported = mediaEncoderHost.isSupported;\n\nexport const register = mediaEncoderHost.register;\n\nURL.revokeObjectURL(url);\n","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={834:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},640:(e,t,r)=>{var n=r(834);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},942:e=>{e.exports=function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},841:e=>{e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},e.exports.__esModule=!0,e.exports.default=e.exports},545:(e,t,r)=>{var n=r(640),o=r(942),a=r(798),s=r(841);e.exports=function(e){return n(e)||o(e)||a(e)||s()},e.exports.__esModule=!0,e.exports.default=e.exports},798:(e,t,r)=>{var n=r(834);e.exports=function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},775:function(e,t,r){!function(e,t,r,n){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var a=o(t),s=o(r),i=o(n),c=function(e,t){return void 0===t?e:t.reduce((function(e,t){if(\"capitalize\"===t){var r=e.charAt(0).toUpperCase(),n=e.slice(1);return\"\".concat(r).concat(n)}return\"dashify\"===t?s.default(e):\"prependIndefiniteArticle\"===t?\"\".concat(i.default(e),\" \").concat(e):e}),e)},u=function(e){var t=e.name+e.modifiers.map((function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")})).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")},l=function(e,t){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[],o=r.exec(e);null!==o;){var s={modifiers:[],name:o[1]};if(void 0!==o[3])for(var i=/\\\\.[^(]+\\\\(\\\\)/g,l=i.exec(o[2]);null!==l;)s.modifiers.push(l[0].slice(1,-2)),l=i.exec(o[2]);n.push(s),o=r.exec(e)}var d=n.reduce((function(e,r){return e.map((function(e){return\"string\"==typeof e?e.split(u(r)).reduce((function(e,n,o){return 0===o?[n]:r.name in t?[].concat(a.default(e),[c(t[r.name],r.modifiers),n]):[].concat(a.default(e),[function(e){return c(e[r.name],r.modifiers)},n])}),[]):[e]})).reduce((function(e,t){return[].concat(a.default(e),a.default(t))}),[])}),[e]);return function(e){return d.reduce((function(t,r){return[].concat(a.default(t),\"string\"==typeof r?[r]:[r(e)])}),[]).join(\"\")}},d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:l(e.code,t),n=void 0===e.message?void 0:l(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,a=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},s=a.cause,i=a.missingParameters,c=void 0===n?new Error:new Error(n(i));return null!==s&&(c.cause=s),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}return o};e.compile=d,Object.defineProperty(e,\"__esModule\",{value:!0})}(t,r(545),r(881),r(507))},881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},107:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,a=2*o,s=function(e,t){return function(r){var s=t.get(r),i=void 0===s?r.size:s<a?s+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*a);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),u=s(c,i),l=t(u);e.addUniqueNumber=l,e.generateUniqueNumber=u,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),a=[\"honest\",\"hour\",\"hono\"];for(t in a)if(0==o.indexOf(a[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var s=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<s.length;t++)if(o.match(s[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}(()=>{\"use strict\";var e=r(775);const t=-32603,n=-32602,o=-32601,a=(0,e.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:o}),s=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:t}),i=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:t}),c=(0,e.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:n}),u=(e,t)=>async r=>{let{data:{id:n,method:o,params:c}}=r;const u=t[o];try{if(void 0===u)throw a({method:o});const t=void 0===c?u():u(c);if(void 0===t)throw s({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:a=[]}=r;e.postMessage({id:n,result:t},a)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}};var l=r(107);const d=new Map,f=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),a=(0,l.generateUniqueNumber)(d);return d.set(a,(()=>{o(),n.close(),d.delete(a)})),{result:a}},disconnect:e=>{let{portId:t}=e;const r=d.get(t);if(void 0===r)throw c({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),p=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const n=f(p,t,r),o=u(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},m=e=>{e.onmessage=null,e.close()},h=new WeakMap,g=new WeakMap,v=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return h.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=h.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(g.has(e))return g.get(e);const t=new Map;return g.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((a,s)=>{const i=(0,l.generateUniqueNumber)(r);r.set(i,{reject:s,resolve:a}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let a={};for(const[e,r]of Object.entries(t))a={...a,[e]:r({call:n,notify:o})};return{...a}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),w=async(e,t)=>{const r=v(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},x=new Map,y=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(x),M=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(x,y),b=new Map,E=((e,t)=>r=>{const[n,o,a,s]=t(r);return a?new Promise((t=>{o.onmessage=a=>{let{data:i}=a;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,s,i)}})):n.encode(r,null)})(m,M),A=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(b),_=((e,t,r)=>(n,o,a)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const s=r(o),{port1:i,port2:c}=new MessageChannel,u=[s,i,!0,a];return t.set(n,u),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),u[2]=!1):s.record(n,a,r)},c})(m,x,A),I=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(y);p(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await E(t):await I(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=_(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await w(b,t)}}})})()})();`; // tslint:disable-line:max-line-length\n","import { TInvalidModificationErrorFactory } from '../types';\n\nexport const createInvalidModificationError: TInvalidModificationErrorFactory = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    } catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n\n        return err;\n    }\n};\n","import { TNotSupportedErrorFactory } from '../types';\n\nexport const createNotSupportedError: TNotSupportedErrorFactory = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    } catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n\n        return err;\n    }\n};\n","/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\nexport const observable = Symbol.observable || \"@@observable\";\n","/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\nimport { Observer, PartialObserver } from \"./types\";\n\nconst noop = () => {};\nconst rethrow = (error: unknown) => {\n  /* eslint-disable-next-line etc/throw-error */\n  throw error;\n};\n\nexport function toObserver<T>(observer?: PartialObserver<T>): Observer<T> {\n  if (observer) {\n    if (observer.next && observer.error && observer.complete) {\n      return observer as Observer<T>;\n    }\n    return {\n      complete: (observer.complete ?? noop).bind(observer),\n      error: (observer.error ?? rethrow).bind(observer),\n      next: (observer.next ?? noop).bind(observer),\n    };\n  }\n  return {\n    complete: noop,\n    error: rethrow,\n    next: noop,\n  };\n}\n","import { TAnimationFrameFactory } from '../types';\n\nexport const createAnimationFrame: TAnimationFrameFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            let animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp): void {\n                animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n\n                observer.next(timestamp);\n            });\n\n            return () => window.cancelAnimationFrame(animationFrameHandle);\n        });\n};\n","import { TEmitNotSupportedErrorFunction } from '../types';\n\nexport const emitNotSupportedError: TEmitNotSupportedErrorFunction = (observer) => {\n    observer.error(new Error('The required browser API seems to be not supported.'));\n\n    return () => {}; // tslint:disable-line:no-empty\n};\n","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\n\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\n\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\n\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\n\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\n\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\n\nexport const on = createOn(wrapSubscribeFunction);\n\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\n\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\n\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n","import { TWindow, TWindowFactory } from '../types';\n\n// @todo TypeScript does not include type definitions for the Reporting API yet.\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { Observer, Subscribable } from 'rxjs-interop';\nimport { TObserverParameters, TSubscribableThing, TSubscribeFunction, TWrapSubscribeFunctionFactory } from '../types';\n\nexport const createWrapSubscribeFunction: TWrapSubscribeFunctionFactory = (patch, toObserver) => {\n    const emptyFunction = () => {}; // tslint:disable-line:no-empty\n    const isNextFunction = <T>(args: TObserverParameters<T>): args is [Observer<T>['next']] => typeof args[0] === 'function';\n\n    return <T>(innerSubscribe: TSubscribeFunction<T>) => {\n        const subscribe = <TSubscribableThing<T>>((...args: TObserverParameters<T>) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n\n            return emptyFunction;\n        });\n\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args: Parameters<Subscribable<T>['subscribe']>) => ({ unsubscribe: subscribe(...args) })\n        });\n\n        return patch(subscribe);\n    };\n};\n","/**\n * @license Use of this source code is governed by an MIT-style license that\n * can be found in the LICENSE file at https://github.com/cartant/rxjs-interop\n */\n\nimport { observable } from \"./symbols\";\nimport { InteropObservable } from \"./types\";\n\nexport function patch<T extends InteropObservable<any>>(instance: T): T;\nexport function patch<T extends new (...args: any[]) => InteropObservable<any>>(\n  constructor: T\n): T;\nexport function patch(\n  arg: InteropObservable<any> | (new (...args: any[]) => InteropObservable<any>)\n): InteropObservable<any> | (new (...args: any[]) => InteropObservable<any>) {\n  if (!Symbol.observable) {\n    if (\n      typeof arg === \"function\" &&\n      arg.prototype &&\n      arg.prototype[Symbol.observable]\n    ) {\n      (arg.prototype as any)[observable] = arg.prototype[Symbol.observable];\n      delete arg.prototype[Symbol.observable];\n    } else {\n      (arg as any)[observable] = arg[Symbol.observable];\n      delete arg[Symbol.observable];\n    }\n  }\n  return arg;\n}\n","import { TMutationsFactory } from '../types';\n\nexport const createMutations: TMutationsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.MutationObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const mutationObserver = new window.MutationObserver((records) => observer.next(records));\n\n            try {\n                mutationObserver.observe(htmlElement, options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => mutationObserver.disconnect();\n        });\n};\n","import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createMapSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TMappedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        map: (value: TValue) => TMappedValue\n    ): TSubscribableThing<TMappedValue> =>\n        wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n","import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createPrependSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TPrependedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        prependedValue: TPrependedValue\n    ): TSubscribableThing<TPrependedValue | TValue> =>\n        wrapSubscribeFunction((observer) => {\n            observer.next(prependedValue);\n\n            return subscribableThing(observer);\n        });\n","import { TSubscribableThing } from '../types';\nimport type { createMapSubscribableThing } from './map-subscribable-thing';\nimport type { createMutations } from './mutations';\nimport type { createPrependSubscribableThing } from './prepend-subscribable-thing';\n\nexport const createAttribute = (\n    mapSubscribableThing: ReturnType<typeof createMapSubscribableThing>,\n    mutations: ReturnType<typeof createMutations>,\n    prependSubscribableThing: ReturnType<typeof createPrependSubscribableThing>\n) => {\n    return (htmlElement: HTMLElement, name: string): TSubscribableThing<null | string> => {\n        const getAttribute = () => htmlElement.getAttribute(name);\n\n        return prependSubscribableThing(\n            mapSubscribableThing(\n                mutations(htmlElement, {\n                    attributeFilter: [name],\n                    childList: false,\n                    subtree: false\n                }),\n                () => getAttribute()\n            ),\n            getAttribute()\n        );\n    };\n};\n","import { TEmitNotSupportedErrorFunction, TSubscribableThing, TWindow, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createGeolocation = (\n    emitNotSupportedError: TEmitNotSupportedErrorFunction,\n    window: null | TWindow,\n    wrapSubscribeFunction: TWrapSubscribeFunctionFunction\n) => {\n    return (options?: PositionOptions): TSubscribableThing<GeolocationPosition> =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.geolocation === undefined ||\n                window.navigator.geolocation.clearWatch === undefined ||\n                window.navigator.geolocation.watchPosition === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            const watchId = window.navigator.geolocation.watchPosition(\n                (position) => observer.next(position),\n                (err) => observer.error(err),\n                options\n            );\n\n            return () => window.navigator.geolocation.clearWatch(watchId);\n        });\n};\n","import { TIntersectionsFactory } from '../types';\n\nexport const createIntersections: TIntersectionsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.IntersectionObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n\n            try {\n                intersectionObserverObserver.observe(htmlElement);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => intersectionObserverObserver.disconnect();\n        });\n};\n","import { TMediaDevicesFactory } from '../types';\n\nexport const createMediaDevices: TMediaDevicesFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.mediaDevices === undefined ||\n                window.navigator.mediaDevices.enumerateDevices === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n\n            const enumerateDevices = () => {\n                window.navigator.mediaDevices.enumerateDevices().then(\n                    (mediaDevices) => {\n                        if (isActive) {\n                            observer.next(mediaDevices);\n                        }\n                    },\n                    (err) => {\n                        if (isActive) {\n                            unsubscribe();\n\n                            observer.error(err);\n                        }\n                    }\n                );\n            };\n            const unsubscribe = () => {\n                isActive = false;\n                window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n            };\n\n            enumerateDevices();\n            window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n\n            return unsubscribe;\n        });\n};\n","import { TMediaQueryMatchFactory } from '../types';\n\nexport const createMediaQueryMatch: TMediaQueryMatchFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.matchMedia === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const mediaQueryList = window.matchMedia(mediaQueryString);\n\n            observer.next(mediaQueryList.matches);\n\n            mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n\n            return () => {\n                mediaQueryList.onchange = null;\n            };\n        });\n};\n","import { TMetricsFactory } from '../types';\n\nexport const createMetrics: TMetricsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.PerformanceObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n\n            try {\n                performanceObserver.observe(options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => performanceObserver.disconnect();\n        });\n};\n","import { TMidiInputsFactory } from '../types';\n\nexport const createMidiInputs: TMidiInputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiInputs = Array.from(midiAccess.inputs.values());\n\n            const emitMidiInputs = () => {\n                const midiAccessInputs = midiAccess.inputs;\n\n                if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                    midiInputs = Array.from(midiAccessInputs.values());\n\n                    observer.next(midiInputs);\n                }\n            };\n\n            observer.next(midiInputs);\n            midiAccess.addEventListener('statechange', emitMidiInputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n        });\n};\n","import { TMidiOutputsFactory } from '../types';\n\nexport const createMidiOutputs: TMidiOutputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiOutputs = Array.from(midiAccess.outputs.values());\n\n            const emitMidiOutputs = () => {\n                const midiAccessOutputs = midiAccess.outputs;\n\n                if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                    midiOutputs = Array.from(midiAccessOutputs.values());\n\n                    observer.next(midiOutputs);\n                }\n            };\n\n            observer.next(midiOutputs);\n            midiAccess.addEventListener('statechange', emitMidiOutputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n        });\n};\n","import { TEventHandler, TEventType, TOnFactory } from '../types';\n\nexport const createOn: TOnFactory = (wrapSubscribeFunction) => {\n    return (target, type, options) =>\n        wrapSubscribeFunction((observer) => {\n            const listener: TEventHandler<typeof target> = (event) => observer.next(<TEventType<typeof target, typeof type>>event);\n\n            target.addEventListener(type, listener, options);\n\n            return () => target.removeEventListener(type, listener, options);\n        });\n};\n","import { TOnlineFactory } from '../types';\n\nexport const createOnline: TOnlineFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.navigator === undefined || window.navigator.onLine === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const emitFalse = () => observer.next(false);\n            const emitTrue = () => observer.next(true);\n\n            window.addEventListener('offline', emitFalse);\n            window.addEventListener('online', emitTrue);\n\n            observer.next(window.navigator.onLine);\n\n            return () => {\n                window.removeEventListener('offline', emitFalse);\n                window.removeEventListener('online', emitTrue);\n            };\n        });\n};\n","import { TPermissionStateFactory } from '../types';\n\nexport const createPermissionState: TPermissionStateFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (permissionDescriptor) =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.permissions === undefined ||\n                window.navigator.permissions.query === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            let isActive = true;\n            let unsubscribe = () => {\n                isActive = false;\n            };\n\n            window.navigator.permissions.query(permissionDescriptor).then(\n                (permissionStatus) => {\n                    if (isActive) {\n                        observer.next(permissionStatus.state);\n                    }\n\n                    if (isActive) {\n                        permissionStatus.onchange = () => observer.next(permissionStatus.state);\n\n                        unsubscribe = () => {\n                            permissionStatus.onchange = null;\n                        };\n                    }\n                },\n                (err) => {\n                    if (isActive) {\n                        observer.error(err);\n                    }\n                }\n            );\n\n            return () => unsubscribe();\n        });\n};\n","import { TReportsFactory } from '../types';\n\nexport const createReports: TReportsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.ReportingObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const reportingObserver = new window.ReportingObserver((reportList) => observer.next(reportList), options);\n\n            reportingObserver.observe();\n\n            return () => reportingObserver.disconnect();\n        });\n};\n","import { IResizeObserverEntry } from '../interfaces';\nimport { TResizesFactory } from '../types';\n\nexport const createResizes: TResizesFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.ResizeObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const resizeObserver = new window.ResizeObserver((entries) => observer.next(<IResizeObserverEntry[]>entries));\n\n            try {\n                resizeObserver.observe(htmlElement, options);\n            } catch (err) {\n                observer.error(err);\n            }\n\n            return () => resizeObserver.disconnect();\n        });\n};\n","import { TUnhandledRejectionFactory } from '../types';\n\nexport const createUnhandledRejection: TUnhandledRejectionFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (coolingOffPeriod) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const possiblyUnhandledRejections = new Map<Promise<any>, { reason: any; timestamp: number }>();\n\n            let intervalId: null | number = null;\n\n            const deletePossiblyUnhandledRejection = ({ promise }: PromiseRejectionEvent) => possiblyUnhandledRejections.delete(promise);\n            const emitUnhandledRejection = () => {\n                const latestTimestampToEmit = Date.now() - coolingOffPeriod;\n\n                possiblyUnhandledRejections.forEach(({ reason, timestamp }, promise) => {\n                    if (timestamp > latestTimestampToEmit) {\n                        return;\n                    }\n\n                    possiblyUnhandledRejections.delete(promise);\n                    observer.next(reason);\n                });\n\n                if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n                    window.clearInterval(intervalId);\n                    intervalId = null;\n                }\n            };\n            const registerPossiblyUnhandledRejection = (event: PromiseRejectionEvent) => {\n                event.preventDefault();\n\n                possiblyUnhandledRejections.set(event.promise, {\n                    reason: event.reason,\n                    timestamp: Date.now()\n                });\n\n                if (intervalId === null) {\n                    intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n                }\n            };\n\n            window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n            window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n\n            return () => {\n                if (intervalId !== null) {\n                    window.clearInterval(intervalId);\n                }\n\n                window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n                window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n            };\n        });\n};\n","import { TVideoFrameFactory } from '../types';\n\nexport const createVideoFrame: TVideoFrameFactory = (emitNotSupportedError, wrapSubscribeFunction) => {\n    return (videoElement) =>\n        wrapSubscribeFunction((observer) => {\n            if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            let videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata): void {\n                videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n\n                observer.next({ ...metadata, now });\n            });\n\n            return () => videoElement.cancelVideoFrameCallback(videoFrameHandle);\n        });\n};\n","import { IWakeLockSentinel } from '../interfaces';\nimport { TWakeLockFactory } from '../types';\n\nexport const createWakeLock: TWakeLockFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (type) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.navigator === undefined || window.navigator.wakeLock === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const releaseWakeLock = (wakeLockSentinel: IWakeLockSentinel) =>\n                wakeLockSentinel.release().catch(() => {\n                    // Ignore errors.\n                });\n            const removeReleaseEventListener = (wakeLockSentinel: IWakeLockSentinel) => {\n                wakeLockSentinel.onrelease = null;\n            };\n\n            let isActive = true;\n\n            const unsubscribeWhileRequesting = () => {\n                isActive = false;\n            };\n\n            let unsubscribe = unsubscribeWhileRequesting;\n\n            const requestWakeLock = () =>\n                window.navigator.wakeLock.request(type).then(\n                    (wakeLockSentinel) => {\n                        if (isActive) {\n                            observer.next(true);\n                        }\n\n                        if (isActive) {\n                            wakeLockSentinel.onrelease = () => {\n                                observer.next(false);\n\n                                unsubscribe = unsubscribeWhileRequesting;\n\n                                removeReleaseEventListener(wakeLockSentinel);\n                                requestWakeLock();\n                            };\n\n                            unsubscribe = () => {\n                                removeReleaseEventListener(wakeLockSentinel);\n                                releaseWakeLock(wakeLockSentinel);\n                            };\n                        } else {\n                            releaseWakeLock(wakeLockSentinel);\n                        }\n                    },\n                    (err) => {\n                        if (isActive) {\n                            observer.error(err);\n                        }\n                    }\n                );\n\n            requestWakeLock();\n\n            return () => unsubscribe();\n        });\n};\n","import { IAugmentedError, IParameterObject, compile } from 'compilerr';\n\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\n\nexport const renderMethodNotFoundError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\n\nexport const renderMissingResponseError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\n\nexport const renderUnexpectedResultError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\n\nexport const renderUnknownPortIdError: (missingParameters: IParameterObject) => IAugmentedError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\n\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(\n    createListener,\n    createPostMessageFactory(generateUniqueNumber),\n    on,\n    validateState\n);\n\nexport { isSupported };\n","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IDefaultWorkerDefinition, IReceiver, IWorkerDefinition } from '../interfaces';\nimport { TDestroyWorkerFunction, TWorkerImplementation } from '../types';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\n\nconst DESTROY_WORKER_FUNCTIONS: Map<number, TDestroyWorkerFunction> = new Map();\n\nexport const extendWorkerImplementation = <T extends IWorkerDefinition>(\n    createWorker: (receiver: IReceiver, workerImplementation: TWorkerImplementation<T>) => TDestroyWorkerFunction,\n    partialWorkerImplementation: TWorkerImplementation<T>,\n    isSupportedFunction: () => boolean | Promise<boolean>\n): TWorkerImplementation<T> & TWorkerImplementation<IDefaultWorkerDefinition> => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError({ portId: portId.toString() });\n        }\n\n        destroyWorker();\n\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n\n            return { result: synchronousResult };\n        }\n\n        return { result: false };\n    }\n});\n","export const createAddRecorderAudioWorkletModule = (blobConstructor: typeof Blob, urlConstructor: typeof URL, worklet: string) => {\n    return async (addAudioWorkletModule: (url: string) => Promise<void>) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n\n        try {\n            await addAudioWorkletModule(url);\n        } finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n","import type {\n    IAudioWorkletNode,\n    TAudioWorkletNodeConstructor,\n    TContext,\n    TNativeAudioWorkletNode,\n    TNativeAudioWorkletNodeConstructor,\n    TNativeContext\n} from 'standardized-audio-context';\nimport type { on as onFunction } from 'subscribable-things';\nimport type { validateState as validateStateFunction } from '../functions/validate-state';\nimport { INativeRecorderAudioWorkletNode, IRecorderAudioWorkletNode } from '../interfaces';\nimport { TAnyRecorderAudioWorkletNodeOptions, TState } from '../types';\nimport type { createListener as createListenerFunction } from './listener';\nimport type { createPostMessageFactory } from './post-message-factory';\n\nexport const createRecorderAudioWorkletNodeFactory = (\n    createListener: typeof createListenerFunction,\n    createPostMessage: ReturnType<typeof createPostMessageFactory>,\n    on: typeof onFunction,\n    validateState: typeof validateStateFunction\n) => {\n    return <T extends TContext | TNativeContext>(\n        audioWorkletNodeConstructor: T extends TContext ? TAudioWorkletNodeConstructor : TNativeAudioWorkletNodeConstructor,\n        context: T,\n        options: Partial<TAnyRecorderAudioWorkletNodeOptions<T>> = {}\n    ): T extends TContext ? IRecorderAudioWorkletNode<T> : INativeRecorderAudioWorkletNode => {\n        type TAnyAudioWorkletNode = T extends TContext ? IAudioWorkletNode<T> : TNativeAudioWorkletNode;\n        type TAnyRecorderAudioWorkletNode = T extends TContext ? IRecorderAudioWorkletNode<T> : INativeRecorderAudioWorkletNode;\n\n        const audioWorkletNode: TAnyAudioWorkletNode = new (<any>audioWorkletNodeConstructor)(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n\n        audioWorkletNode.port.start();\n\n        let state: TState = 'inactive';\n\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get(): TAnyRecorderAudioWorkletNode['pause'] {\n                    return async () => {\n                        validateState(['recording'], state);\n\n                        state = 'paused';\n\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get(): TAnyRecorderAudioWorkletNode['port'] {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get(): TAnyRecorderAudioWorkletNode['record'] {\n                    return async (encoderPort: MessagePort) => {\n                        validateState(['inactive'], state);\n\n                        state = 'recording';\n\n                        return postMessage(\n                            {\n                                method: 'record',\n                                params: { encoderPort }\n                            },\n                            [encoderPort]\n                        );\n                    };\n                }\n            },\n            resume: {\n                get(): TAnyRecorderAudioWorkletNode['resume'] {\n                    return async () => {\n                        validateState(['paused'], state);\n\n                        state = 'recording';\n\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get(): TAnyRecorderAudioWorkletNode['stop'] {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n\n                        state = 'stopped';\n\n                        try {\n                            await postMessage({ method: 'stop' });\n                        } finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n\n        return <TAnyRecorderAudioWorkletNode>audioWorkletNode;\n    };\n};\n","import type { IWorkerEvent } from 'broker-factory';\nimport type { IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\n\nexport const createListener = (ongoingRequests: Map<number, { reject: Function; resolve: Function }>) => {\n    return ({ data: message }: IWorkerEvent) => {\n        const { id } = message;\n\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }\n    };\n};\n","import type { generateUniqueNumber as generateUniqueNumberFunction } from 'fast-unique-numbers';\n\nexport const createPostMessageFactory = (generateUniqueNumber: typeof generateUniqueNumberFunction) => {\n    return (ongoingRequests: Map<number, { reject: Function; resolve: Function }>, port: MessagePort) => {\n        return (message: { method: string; params?: object }, transferables: Transferable[] = []): Promise<void> => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n","import { TState } from '../types';\n\nexport const validateState = (expectedStates: TState[], currentState: TState): void => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(\n            `Expected the state to be ${expectedStates\n                .map((expectedState) => `\"${expectedState}\"`)\n                .join(' or ')} but it was \"${currentState}\".`\n        );\n    }\n};\n","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport {\n    AudioBuffer,\n    AudioBufferSourceNode,\n    AudioWorkletNode,\n    IAudioBuffer,\n    IMinimalAudioContext,\n    MediaStreamAudioSourceNode,\n    MinimalAudioContext,\n    addAudioWorkletModule\n} from 'standardized-audio-context';\nimport { IAudioNodesAndEncoderId } from '../interfaces';\nimport { TRecordingState, TWebAudioMediaRecorderFactoryFactory } from '../types';\n\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (\n    audioBuffer: IAudioBuffer,\n    audioContext: IMinimalAudioContext,\n    channelCount: number,\n    mediaStream: MediaStream,\n    mimeType: string\n) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\n\nexport const createWebAudioMediaRecorderFactory: TWebAudioMediaRecorderFactoryFactory = (\n    createBlobEvent,\n    createInvalidModificationError,\n    createInvalidStateError,\n    createNotSupportedError\n) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        const sampleRate = mediaStream.getAudioTracks()[0]?.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers: ArrayBuffer[] = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url: string) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n\n            return addAudioWorkletModule(audioContext, url);\n        });\n\n        let abortRecording: null | (() => void) = null;\n        let intervalId: null | number = null;\n        let promisedAudioNodesAndEncoderId: null | Promise<IAudioNodesAndEncoderId> = null;\n        let promisedPartialRecording: null | Promise<void> = null;\n        let isAudioContextRunning = true;\n\n        const dispatchDataAvailableEvent = (arrayBuffers: ArrayBuffer[]): void => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n\n        const requestNextPartialRecording = async (encoderId: number, timeslice: number): Promise<void> => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            } else {\n                dispatchDataAvailableEvent(arrayBuffers);\n\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n\n        const resume = (): Promise<void> => {\n            isAudioContextRunning = true;\n\n            return audioContext.resume();\n        };\n\n        const stop = (): void => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n\n            promisedAudioNodesAndEncoderId.then(async ({ encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n\n                await recorderAudioWorkletNode.stop();\n\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n\n                const arrayBuffers = await encode(encoderId, null);\n\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n\n                bufferedArrayBuffers.length = 0;\n\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n\n            promisedAudioNodesAndEncoderId = null;\n        };\n\n        const suspend = (): Promise<void> => {\n            isAudioContextRunning = false;\n\n            return audioContext.suspend();\n        };\n\n        suspend();\n\n        return {\n            get mimeType(): string {\n                return mimeType;\n            },\n\n            get state(): TRecordingState {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n\n            pause(): void {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n\n            resume(): void {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n\n            start(timeslice?: number): void {\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n\n                eventTarget.dispatchEvent(new Event('start'));\n\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount =\n                    audioTracks.length === 0\n                        ? 2\n                        : (<MediaTrackSettings & { channelCount?: number }>audioTracks[0].getSettings()).channelCount ?? 2;\n\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() =>\n                        createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType)\n                    )\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n\n                    await recorderAudioWorkletNode.record(port);\n\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n\n                    return { encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n\n                const tracks = mediaStream.getTracks();\n\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n\n                    if (\n                        (currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null\n                    ) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n\n            stop\n        };\n    };\n};\n","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\nimport { IMediaRecorderConstructor } from './interfaces';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst encoderRegexes: RegExp[] = [];\n\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(\n    createBlobEvent,\n    createInvalidModificationError,\n    createInvalidStateError,\n    createNotSupportedError\n);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(\n    createBlobEvent,\n    createInvalidModificationError,\n    createNotSupportedError,\n    decodeWebMChunk,\n    readVariableSizeInteger\n);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\n\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor: IMediaRecorderConstructor = createMediaRecorderConstructor(\n    createNativeMediaRecorder,\n    createNotSupportedError,\n    createWebAudioMediaRecorder,\n    createWebmPcmMediaRecorder,\n    encoderRegexes,\n    createEventTargetConstructor(createEventTarget, wrapEventListener),\n    nativeMediaRecorderConstructor\n);\n\nexport { mediaRecorderConstructor as MediaRecorder };\n\nexport const isSupported = () => createIsSupportedPromise(window);\n\nexport const register = async (port: MessagePort): Promise<void> => {\n    encoderRegexes.push(await rgstr(port));\n};\n","import { TWindow, TWindowFactory } from '../types';\n\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { IBlobEvent } from '../interfaces';\nimport { TBlobEventFactoryFactory } from '../types';\n\nexport const createBlobEventFactory: TBlobEventFactoryFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        // Bug #14: Safari does not yet support the BlobEvent.\n        if (nativeBlobEventConstructor === null) {\n            const { data, ...eventInit } = blobEventInit;\n            const fakeBlobEvent = <IBlobEvent>new Event(type, eventInit);\n\n            (<Omit<IBlobEvent, 'data'> & { -readonly [P in 'data']: IBlobEvent[P] }>fakeBlobEvent).data = data;\n\n            return fakeBlobEvent;\n        }\n\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n","import { TNativeBlobEventConstructorFactory } from '../types';\n\nexport const createNativeBlobEventConstructor: TNativeBlobEventConstructorFactory = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n\n    return null;\n};\n","import { TInvalidStateErrorFactory } from '../types';\n\nexport const createInvalidStateError: TInvalidStateErrorFactory = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    } catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n\n        return err;\n    }\n};\n","import { TReadVariableSizeIntegerFactory } from '../types';\n\nexport const createReadVariableSizeInteger: TReadVariableSizeIntegerFactory = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n\n        if (length === null) {\n            return length;\n        }\n\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n\n        return { length, value };\n    };\n};\n","import { TReadVariableSizeIntegerLengthFunction } from '../types';\n\nexport const readVariableSizeIntegerLength: TReadVariableSizeIntegerLengthFunction = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n\n    const byte = dataView.getUint8(offset);\n\n    if (byte > 127) {\n        return 1;\n    }\n\n    if (byte > 63) {\n        return 2;\n    }\n\n    if (byte > 31) {\n        return 3;\n    }\n\n    if (byte > 15) {\n        return 4;\n    }\n\n    if (byte > 7) {\n        return 5;\n    }\n\n    if (byte > 3) {\n        return 6;\n    }\n\n    if (byte > 1) {\n        return 7;\n    }\n\n    if (byte > 0) {\n        return 8;\n    }\n\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n\n    return length === null ? null : length + 8;\n};\n","import { TReadElementContentFactory } from '../types';\n\nexport const createReadElementContent: TReadElementContentFactory = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n\n        const { length, value } = lengthAndValue;\n\n        if (type === 'master') {\n            return { content: null, length };\n        }\n\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n\n            return { content, length: length + value };\n        }\n\n        return { content: null, length: length + value };\n    };\n};\n","import { TReadElementTypeFactory } from '../types';\n\nexport const createReadElementType: TReadElementTypeFactory = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n\n        const { length, value } = lengthAndValue;\n\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n\n        if (\n            value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861\n        ) {\n            return { length, type: 'master' };\n        }\n\n        return { length, type: 'unknown' };\n    };\n};\n","import { TDecodeWebMChunkFactory } from '../types';\n\nexport const createDecodeWebMChunk: TDecodeWebMChunkFactory = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents: (readonly Float32Array[])[] = [];\n\n        let currentElementType = elementType;\n        let offset = 0;\n\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n\n                if (lengthAndType === null) {\n                    break;\n                }\n\n                const { length, type } = lengthAndType;\n\n                currentElementType = type;\n                offset += length;\n            } else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n\n                if (contentAndLength === null) {\n                    break;\n                }\n\n                const { content, length } = contentAndLength;\n\n                currentElementType = null;\n                offset += length;\n\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n\n        return { contents, currentElementType, offset };\n    };\n};\n","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nimport { TPromisedDataViewElementTypeEncoderIdAndPort, TRecordingState, TWebmPcmMediaRecorderFactoryFactory } from '../types';\n\nexport const createWebmPcmMediaRecorderFactory: TWebmPcmMediaRecorderFactoryFactory = (\n    createBlobEvent,\n    createInvalidModificationError,\n    createNotSupportedError,\n    decodeWebMChunk,\n    readVariableSizeInteger\n) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers: ArrayBuffer[] = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount =\n            audioTracks.length === 0\n                ? undefined\n                : (<MediaTrackSettings & { channelCount?: number }>audioTracks[0].getSettings()).channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n\n        let promisedPartialRecording: null | Promise<void> = null;\n        let stopRecording = () => {}; // tslint:disable-line:no-empty\n\n        const dispatchDataAvailableEvent = (arrayBuffers: ArrayBuffer[]): void => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n\n        const requestNextPartialRecording = async (encoderId: number, timeslice: number): Promise<void> => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            } else {\n                dispatchDataAvailableEvent(arrayBuffers);\n\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n\n        const stop = (): void => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n\n            stopRecording();\n            stopRecording = () => {}; // tslint:disable-line:no-empty\n\n            nativeMediaRecorder.stop();\n        };\n\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n\n        return {\n            get mimeType(): string {\n                return mimeType;\n            },\n\n            get state(): TRecordingState {\n                return nativeMediaRecorder.state;\n            },\n\n            pause(): void {\n                return nativeMediaRecorder.pause();\n            },\n\n            resume(): void {\n                return nativeMediaRecorder.resume();\n            },\n\n            start(timeslice?: number): void {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort: TPromisedDataViewElementTypeEncoderIdAndPort = instantiate(\n                        mimeType,\n                        sampleRate\n                    );\n\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n\n                    const removeEventListener = on(\n                        nativeMediaRecorder,\n                        'dataavailable'\n                    )(({ data }) => {\n                        pendingInvocations += 1;\n\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(\n                            async ({ dataView = null, elementType = null, encoderId, port }) => {\n                                const arrayBuffer = await data.arrayBuffer();\n\n                                pendingInvocations -= 1;\n\n                                const currentDataView =\n                                    dataView === null\n                                        ? new MultiBufferDataView([arrayBuffer])\n                                        : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n\n                                if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                    const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n\n                                    if (lengthAndValue === null) {\n                                        return { dataView: currentDataView, elementType, encoderId, port };\n                                    }\n\n                                    const { value } = lengthAndValue;\n\n                                    if (value !== 172351395) {\n                                        return { dataView, elementType, encoderId, port };\n                                    }\n\n                                    isRecording = true;\n                                }\n\n                                const { currentElementType, offset, contents } = decodeWebMChunk(\n                                    currentDataView,\n                                    elementType,\n                                    channelCount\n                                );\n                                const remainingDataView =\n                                    offset < currentDataView.byteLength\n                                        ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                        : null;\n\n                                contents.forEach((content) =>\n                                    port.postMessage(\n                                        content,\n                                        content.map(({ buffer }) => buffer)\n                                    )\n                                );\n\n                                if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                    encode(encoderId, null).then((arrayBuffers) => {\n                                        dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n\n                                        bufferedArrayBuffers.length = 0;\n\n                                        eventTarget.dispatchEvent(new Event('stop'));\n                                    });\n\n                                    port.postMessage([]);\n                                    port.close();\n\n                                    removeEventListener();\n                                }\n\n                                return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                            }\n                        );\n                    });\n\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(\n                            ({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice))\n                        );\n                    }\n                }\n\n                nativeMediaRecorder.start(100);\n            },\n\n            stop\n        };\n    };\n};\n","import { TEventTargetFactoryFactory } from '../types';\n\nexport const createEventTargetFactory: TEventTargetFactoryFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n\n        return window.document.createElement('p');\n    };\n};\n","import { TNativeMediaRecorderConstructorFactory } from '../types';\n\nexport const createNativeMediaRecorderConstructor: TNativeMediaRecorderConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n","import { IBlobEvent, IMediaRecorder } from '../interfaces';\nimport { TEventHandler, TNativeMediaRecorderFactoryFactory } from '../types';\n\nexport const createNativeMediaRecorderFactory: TNativeMediaRecorderFactoryFactory = (\n    createInvalidModificationError,\n    createNotSupportedError\n) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs: Blob[] = [];\n        const dataAvailableListeners = new WeakMap<EventListener, (this: IMediaRecorder, event: IBlobEvent) => void>();\n        const errorListeners = new WeakMap<EventListener, (this: IMediaRecorder, event: ErrorEvent) => void>();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap<EventListener, (this: IMediaRecorder, event: Event) => void>();\n\n        let isActive = true;\n\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (\n                type: string,\n                listener: null | TEventHandler<IMediaRecorder> | EventListenerOrEventListenerObject,\n                options?: boolean | AddEventListenerOptions\n            ) => {\n                let patchedEventListener = listener;\n\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event: IBlobEvent) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                } else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n\n                                        bufferedBlobs.length = 0;\n                                    }\n\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    } else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event: ErrorEvent | (Event & { error?: Error })) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            } else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n\n                                listener.call(\n                                    nativeMediaRecorder,\n                                    new ErrorEvent('error', { error: createInvalidModificationError(message) })\n                                );\n                            } else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            } else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n\n                        errorListeners.set(listener, patchedEventListener);\n                    } else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event: Event) => {\n                            isActive = false;\n\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event: Event) => {\n                let wasActive: boolean;\n\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n\n                setTimeout(() => (isActive = wasActive));\n\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (\n                type: string,\n                listener: null | TEventHandler<IMediaRecorder> | EventListenerOrEventListenerObject,\n                options?: boolean | EventListenerOptions\n            ) => {\n                let patchedEventListener = listener;\n\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    } else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    } else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice?: number) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (\n                    mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0\n                ) {\n                    throw createNotSupportedError();\n                }\n\n                isActive = timeslice !== undefined;\n\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n\n        return nativeMediaRecorder;\n    };\n};\n","import { IMediaRecorder, IMediaRecorderEventMap, IMediaRecorderOptions } from '../interfaces';\nimport {\n    TBlobEventHandler,\n    TErrorEventHandler,\n    TEventHandler,\n    TMediaRecorderConstructorFactory,\n    TNativeEventTarget,\n    TRecordingState\n} from '../types';\n\nexport const createMediaRecorderConstructor: TMediaRecorderConstructorFactory = (\n    createNativeMediaRecorder,\n    createNotSupportedError,\n    createWebAudioMediaRecorder,\n    createWebmPcmMediaRecorder,\n    encoderRegexes,\n    eventTargetConstructor,\n    nativeMediaRecorderConstructor\n) => {\n    return class MediaRecorder extends eventTargetConstructor<IMediaRecorderEventMap> implements IMediaRecorder {\n        private _internalMediaRecorder: Omit<\n            IMediaRecorder,\n            'ondataavailable' | 'onerror' | 'onpause' | 'onresume' | 'onstart' | 'onstop' | keyof TNativeEventTarget\n        >;\n\n        private _ondataavailable: null | [TBlobEventHandler<this>, TBlobEventHandler<this>];\n\n        private _onerror: null | [TErrorEventHandler<this>, TErrorEventHandler<this>];\n\n        private _onpause: null | [TEventHandler<this>, TEventHandler<this>];\n\n        private _onresume: null | [TEventHandler<this>, TEventHandler<this>];\n\n        private _onstart: null | [TEventHandler<this>, TEventHandler<this>];\n\n        private _onstop: null | [TEventHandler<this>, TEventHandler<this>];\n\n        constructor(stream: MediaStream, options: IMediaRecorderOptions = {}) {\n            const { mimeType } = options;\n\n            if (\n                nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))\n            ) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n\n                super(internalMediaRecorder);\n\n                this._internalMediaRecorder = internalMediaRecorder;\n            } else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (\n                    nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')\n                ) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                } else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            } else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n\n                throw createNotSupportedError();\n            }\n\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n\n        get mimeType(): string {\n            return this._internalMediaRecorder.mimeType;\n        }\n\n        get ondataavailable(): null | TBlobEventHandler<this> {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('dataavailable', boundListener);\n\n                this._ondataavailable = [value, boundListener];\n            } else {\n                this._ondataavailable = null;\n            }\n        }\n\n        get onerror(): null | TErrorEventHandler<this> {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('error', boundListener);\n\n                this._onerror = [value, boundListener];\n            } else {\n                this._onerror = null;\n            }\n        }\n\n        get onpause(): null | TEventHandler<this> {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('pause', boundListener);\n\n                this._onpause = [value, boundListener];\n            } else {\n                this._onpause = null;\n            }\n        }\n\n        get onresume(): null | TEventHandler<this> {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('resume', boundListener);\n\n                this._onresume = [value, boundListener];\n            } else {\n                this._onresume = null;\n            }\n        }\n\n        get onstart(): null | TEventHandler<this> {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('start', boundListener);\n\n                this._onstart = [value, boundListener];\n            } else {\n                this._onstart = null;\n            }\n        }\n\n        get onstop(): null | TEventHandler<this> {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n\n                this.addEventListener('stop', boundListener);\n\n                this._onstop = [value, boundListener];\n            } else {\n                this._onstop = null;\n            }\n        }\n\n        get state(): TRecordingState {\n            return this._internalMediaRecorder.state;\n        }\n\n        public pause(): void {\n            return this._internalMediaRecorder.pause();\n        }\n\n        public resume(): void {\n            return this._internalMediaRecorder.resume();\n        }\n\n        public start(timeslice?: number): void {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n\n        public stop(): void {\n            return this._internalMediaRecorder.stop();\n        }\n\n        public static isTypeSupported(mimeType: string): boolean {\n            return (\n                (nativeMediaRecorderConstructor !== null &&\n                    // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType))\n            );\n        }\n    };\n};\n","import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (createEventTarget, wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        private _nativeEventTarget: TNativeEventTarget;\n\n        constructor(nativeEventTarget: null | TNativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n","import { TWrapEventListenerFunction } from '../types';\n\nexport const wrapEventListener: TWrapEventListenerFunction = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n","import { TIsSupportedPromiseFactory } from '../types';\n\nexport const createIsSupportedPromise: TIsSupportedPromiseFactory = (window) => {\n    if (\n        window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)\n    ) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n\n            // @todo captureStream() is not defined yet.\n            const canvasElement: HTMLCanvasElement & { captureStream?(): MediaStream } = document.createElement('canvas');\n\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n\n                setTimeout(() => mediaRecorder.stop(), 10);\n            } catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n\n    return Promise.resolve(false);\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n\n\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n\n          return cache(collection, nextNumber);\n        } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        } // Otherwise use the full scale of safely usable integers.\n\n\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.multiBufferDataView = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\n    function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n    function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n    var MultiBufferDataView = /*#__PURE__*/function () {\n      function MultiBufferDataView(buffers) {\n        var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var byteLength = arguments.length > 2 ? arguments[2] : undefined;\n\n        _classCallCheck__default[\"default\"](this, MultiBufferDataView);\n\n        if (byteOffset < 0 || byteLength !== undefined && byteLength < 0) {\n          throw new RangeError();\n        }\n\n        var availableBytes = buffers.reduce(function (length, buffer) {\n          return length + buffer.byteLength;\n        }, 0);\n\n        if (byteOffset > availableBytes || byteLength !== undefined && byteOffset + byteLength > availableBytes) {\n          throw new RangeError();\n        }\n\n        var dataViews = [];\n        var effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        var truncatedBuffers = [];\n        var consumedByteLength = 0;\n        var truncatedByteOffset = byteOffset;\n\n        var _iterator = _createForOfIteratorHelper(buffers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var buffer = _step.value;\n\n            if (truncatedBuffers.length === 0) {\n              if (buffer.byteLength > truncatedByteOffset) {\n                consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                var byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n              } else {\n                truncatedByteOffset -= buffer.byteLength;\n              }\n            } else if (consumedByteLength < effectiveByteLength) {\n              consumedByteLength += buffer.byteLength;\n\n              var _byteLengthOfDataView = consumedByteLength > effectiveByteLength ? buffer.byteLength - consumedByteLength + effectiveByteLength : buffer.byteLength;\n\n              dataViews.push(new DataView(buffer, 0, _byteLengthOfDataView));\n              truncatedBuffers.push(buffer);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n      }\n\n      _createClass__default[\"default\"](MultiBufferDataView, [{\n        key: \"buffers\",\n        get: function get() {\n          return this._buffers;\n        }\n      }, {\n        key: \"byteLength\",\n        get: function get() {\n          return this._byteLength;\n        }\n      }, {\n        key: \"byteOffset\",\n        get: function get() {\n          return this._byteOffset;\n        }\n      }, {\n        key: \"getFloat32\",\n        value: function getFloat32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          return this._internalBuffer.getFloat32(0, littleEndian);\n        }\n      }, {\n        key: \"getFloat64\",\n        value: function getFloat64(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n\n          this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n\n          this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n\n          this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n\n          return this._internalBuffer.getFloat64(0, littleEndian);\n        }\n      }, {\n        key: \"getInt16\",\n        value: function getInt16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          return this._internalBuffer.getInt16(0, littleEndian);\n        }\n      }, {\n        key: \"getInt32\",\n        value: function getInt32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          return this._internalBuffer.getInt32(0, littleEndian);\n        }\n      }, {\n        key: \"getInt8\",\n        value: function getInt8(byteOffset) {\n          var _this$_findDataViewWi = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi2 = _slicedToArray__default[\"default\"](_this$_findDataViewWi, 2),\n              dataView = _this$_findDataViewWi2[0],\n              byteOffsetOfDataView = _this$_findDataViewWi2[1];\n\n          return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"getUint16\",\n        value: function getUint16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          return this._internalBuffer.getUint16(0, littleEndian);\n        }\n      }, {\n        key: \"getUint32\",\n        value: function getUint32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n\n          return this._internalBuffer.getUint32(0, littleEndian);\n        }\n      }, {\n        key: \"getUint8\",\n        value: function getUint8(byteOffset) {\n          var _this$_findDataViewWi3 = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi4 = _slicedToArray__default[\"default\"](_this$_findDataViewWi3, 2),\n              dataView = _this$_findDataViewWi4[0],\n              byteOffsetOfDataView = _this$_findDataViewWi4[1];\n\n          return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"setFloat32\",\n        value: function setFloat32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat32(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setFloat64\",\n        value: function setFloat64(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat64(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n          this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n          this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n          this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n          this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n        }\n      }, {\n        key: \"setInt16\",\n        value: function setInt16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt16(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setInt32\",\n        value: function setInt32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt32(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setInt8\",\n        value: function setInt8(byteOffset, value) {\n          var _this$_findDataViewWi5 = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi6 = _slicedToArray__default[\"default\"](_this$_findDataViewWi5, 2),\n              dataView = _this$_findDataViewWi6[0],\n              byteOffsetOfDataView = _this$_findDataViewWi6[1];\n\n          dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"setUint16\",\n        value: function setUint16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint16(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setUint32\",\n        value: function setUint32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint32(0, value, littleEndian);\n\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setUint8\",\n        value: function setUint8(byteOffset, value) {\n          var _this$_findDataViewWi7 = this._findDataViewWithOffset(byteOffset),\n              _this$_findDataViewWi8 = _slicedToArray__default[\"default\"](_this$_findDataViewWi7, 2),\n              dataView = _this$_findDataViewWi8[0],\n              byteOffsetOfDataView = _this$_findDataViewWi8[1];\n\n          dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"_findDataViewWithOffset\",\n        value: function _findDataViewWithOffset(byteOffset) {\n          var byteOffsetOfDataView = 0;\n\n          var _iterator2 = _createForOfIteratorHelper(this._dataViews),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataView = _step2.value;\n              var byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n\n              if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n              }\n\n              byteOffsetOfDataView = byteOffsetOfNextDataView;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          throw new RangeError();\n        }\n      }]);\n\n      return MultiBufferDataView;\n    }();\n\n    exports.MultiBufferDataView = MultiBufferDataView;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","module.exports = require(\"./lib\");\n","\"use strict\";var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}\nreturn new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}\nfunction rejected(value){try{step(generator[\"throw\"](value));}catch(e){reject(e);}}\nfunction step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}\nstep((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=(this&&this.__generator)||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),\"throw\":verb(1),\"return\":verb(2)},typeof Symbol===\"function\"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}\nfunction step(op){if(f)throw new TypeError(\"Generator is already executing.\");while(_)try{if(f=1,y&&(t=op[0]&2?y[\"return\"]:op[0]?y[\"throw\"]||((t=y[\"return\"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}\nif(op[0]===3&&(!t||(op[1]>t[0]&&op[1]<t[3]))){_.label=op[1];break;}\nif(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}\nif(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}\nif(t[2])_.ops.pop();_.trys.pop();continue;}\nop=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}\nif(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReactMediaRecorder=exports.useReactMediaRecorder=exports.RecorderErrors=void 0;var extendable_media_recorder_1=require(\"extendable-media-recorder\");var react_1=require(\"react\");var extendable_media_recorder_wav_encoder_1=require(\"extendable-media-recorder-wav-encoder\");var RecorderErrors;(function(RecorderErrors){RecorderErrors[\"AbortError\"]=\"media_aborted\";RecorderErrors[\"NotAllowedError\"]=\"permission_denied\";RecorderErrors[\"NotFoundError\"]=\"no_specified_media_found\";RecorderErrors[\"NotReadableError\"]=\"media_in_use\";RecorderErrors[\"OverconstrainedError\"]=\"invalid_media_constraints\";RecorderErrors[\"TypeError\"]=\"no_constraints\";RecorderErrors[\"NONE\"]=\"\";RecorderErrors[\"NO_RECORDER\"]=\"recorder_error\";})(RecorderErrors=exports.RecorderErrors||(exports.RecorderErrors={}));function useReactMediaRecorder(_a){var _this=this;var _b=_a.audio,audio=_b===void 0?true:_b,_c=_a.video,video=_c===void 0?false:_c,_d=_a.onStop,onStop=_d===void 0?function(){return null;}:_d,_e=_a.onStart,onStart=_e===void 0?function(){return null;}:_e,blobPropertyBag=_a.blobPropertyBag,_f=_a.screen,screen=_f===void 0?false:_f,_g=_a.mediaRecorderOptions,mediaRecorderOptions=_g===void 0?undefined:_g,_h=_a.customMediaStream,customMediaStream=_h===void 0?null:_h,_j=_a.stopStreamsOnStop,stopStreamsOnStop=_j===void 0?true:_j,_k=_a.askPermissionOnMount,askPermissionOnMount=_k===void 0?false:_k;var mediaRecorder=(0,react_1.useRef)(null);var mediaChunks=(0,react_1.useRef)([]);var mediaStream=(0,react_1.useRef)(null);var _l=(0,react_1.useState)(\"idle\"),status=_l[0],setStatus=_l[1];var _m=(0,react_1.useState)(false),isAudioMuted=_m[0],setIsAudioMuted=_m[1];var _o=(0,react_1.useState)(undefined),mediaBlobUrl=_o[0],setMediaBlobUrl=_o[1];var _p=(0,react_1.useState)(\"NONE\"),error=_p[0],setError=_p[1];(0,react_1.useEffect)(function(){var setup=function(){return __awaiter(_this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:_a=extendable_media_recorder_1.register;return[4,(0,extendable_media_recorder_wav_encoder_1.connect)()];case 1:return[4,_a.apply(void 0,[_b.sent()])];case 2:_b.sent();return[2];}});});};setup();},[]);var getMediaStream=(0,react_1.useCallback)(function(){return __awaiter(_this,void 0,void 0,function(){var requiredMedia,stream_1,audioStream,stream,error_1;return __generator(this,function(_a){switch(_a.label){case 0:setStatus(\"acquiring_media\");requiredMedia={audio:typeof audio===\"boolean\"?!!audio:audio,video:typeof video===\"boolean\"?!!video:video,};_a.label=1;case 1:_a.trys.push([1,9,,10]);if(!customMediaStream)return[3,2];mediaStream.current=customMediaStream;return[3,8];case 2:if(!screen)return[3,6];return[4,window.navigator.mediaDevices.getDisplayMedia({video:video||true,})];case 3:stream_1=(_a.sent());stream_1.getVideoTracks()[0].addEventListener(\"ended\",function(){stopRecording();});if(!audio)return[3,5];return[4,window.navigator.mediaDevices.getUserMedia({audio:audio,})];case 4:audioStream=_a.sent();audioStream.getAudioTracks().forEach(function(audioTrack){return stream_1.addTrack(audioTrack);});_a.label=5;case 5:mediaStream.current=stream_1;return[3,8];case 6:return[4,window.navigator.mediaDevices.getUserMedia(requiredMedia)];case 7:stream=_a.sent();mediaStream.current=stream;_a.label=8;case 8:setStatus(\"idle\");return[3,10];case 9:error_1=_a.sent();setError(error_1.name);setStatus(\"idle\");return[3,10];case 10:return[2];}});});},[audio,video,screen]);(0,react_1.useEffect)(function(){if(!window.MediaRecorder){throw new Error(\"Unsupported Browser\");}\nif(screen){if(!window.navigator.mediaDevices.getDisplayMedia){throw new Error(\"This browser doesn\\'t support screen capturing\");}}\nvar checkConstraints=function(mediaType){var supportedMediaConstraints=navigator.mediaDevices.getSupportedConstraints();var unSupportedConstraints=Object.keys(mediaType).filter(function(constraint){return!supportedMediaConstraints[constraint];});if(unSupportedConstraints.length>0){console.error(\"The constraints \".concat(unSupportedConstraints.join(\",\"),\" doesn't support on this browser. Please check your ReactMediaRecorder component.\"));}};if(typeof audio===\"object\"){checkConstraints(audio);}\nif(typeof video===\"object\"){checkConstraints(video);}\nif(mediaRecorderOptions&&mediaRecorderOptions.mimeType){if(!MediaRecorder.isTypeSupported(mediaRecorderOptions.mimeType)){console.error(\"The specified MIME type you supplied for MediaRecorder doesn't support this browser\");}}\nif(!mediaStream.current&&askPermissionOnMount){getMediaStream();}\nreturn function(){if(mediaStream.current){var tracks=mediaStream.current.getTracks();tracks.forEach(function(track){return track.clone().stop();});}};},[audio,screen,video,getMediaStream,mediaRecorderOptions,askPermissionOnMount,]);var startRecording=function(){return __awaiter(_this,void 0,void 0,function(){var isStreamEnded;return __generator(this,function(_a){switch(_a.label){case 0:setError(\"NONE\");if(!!mediaStream.current)return[3,2];return[4,getMediaStream()];case 1:_a.sent();_a.label=2;case 2:if(!mediaStream.current)return[3,5];isStreamEnded=mediaStream.current.getTracks().some(function(track){return track.readyState===\"ended\";});if(!isStreamEnded)return[3,4];return[4,getMediaStream()];case 3:_a.sent();_a.label=4;case 4:if(!mediaStream.current.active){return[2];}\nmediaRecorder.current=new extendable_media_recorder_1.MediaRecorder(mediaStream.current,mediaRecorderOptions||undefined);mediaRecorder.current.ondataavailable=onRecordingActive;mediaRecorder.current.onstop=onRecordingStop;mediaRecorder.current.onstart=onRecordingStart;mediaRecorder.current.onerror=function(){setError(\"NO_RECORDER\");setStatus(\"idle\");};mediaRecorder.current.start();setStatus(\"recording\");_a.label=5;case 5:return[2];}});});};var onRecordingActive=function(_a){var data=_a.data;mediaChunks.current.push(data);};var onRecordingStart=function(){onStart();};var onRecordingStop=function(){var chunk=mediaChunks.current[0];var blobProperty=Object.assign({type:chunk.type},blobPropertyBag||(video?{type:\"video/mp4\"}:{type:\"audio/wav\"}));var blob=new Blob(mediaChunks.current,blobProperty);var url=URL.createObjectURL(blob);setStatus(\"stopped\");setMediaBlobUrl(url);onStop(url,blob);};var muteAudio=function(mute){setIsAudioMuted(mute);if(mediaStream.current){mediaStream.current.getAudioTracks().forEach(function(audioTrack){return(audioTrack.enabled=!mute);});}};var pauseRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"recording\"){setStatus(\"paused\");mediaRecorder.current.pause();}};var resumeRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"paused\"){setStatus(\"recording\");mediaRecorder.current.resume();}};var stopRecording=function(){if(mediaRecorder.current){if(mediaRecorder.current.state!==\"inactive\"){setStatus(\"stopping\");mediaRecorder.current.stop();if(stopStreamsOnStop){mediaStream.current&&mediaStream.current.getTracks().forEach(function(track){return track.stop();});}\nmediaChunks.current=[];}}};return{error:RecorderErrors[error],muteAudio:function(){return muteAudio(true);},unMuteAudio:function(){return muteAudio(false);},startRecording:startRecording,pauseRecording:pauseRecording,resumeRecording:resumeRecording,stopRecording:stopRecording,mediaBlobUrl:mediaBlobUrl,status:status,isAudioMuted:isAudioMuted,previewStream:mediaStream.current?new MediaStream(mediaStream.current.getVideoTracks()):null,previewAudioStream:mediaStream.current?new MediaStream(mediaStream.current.getAudioTracks()):null,clearBlobUrl:function(){if(mediaBlobUrl){URL.revokeObjectURL(mediaBlobUrl);}\nsetMediaBlobUrl(undefined);setStatus(\"idle\");},};}\nexports.useReactMediaRecorder=useReactMediaRecorder;var ReactMediaRecorder=function(props){return props.render(useReactMediaRecorder(props));};exports.ReactMediaRecorder=ReactMediaRecorder;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","import { IAudioNode, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from './interfaces';\nimport {\n    TAudioNodeConnectionsStore,\n    TAudioNodeStore,\n    TAudioParamConnectionsStore,\n    TAudioParamStore,\n    TContext,\n    TContextStore,\n    TCycleCounters,\n    TInternalStateEventListener,\n    TNativeAudioWorkletNode,\n    TNativeContext\n} from './types';\n\nexport const ACTIVE_AUDIO_NODE_STORE: WeakSet<IAudioNode<TContext>> = new WeakSet();\n\nexport const AUDIO_NODE_CONNECTIONS_STORE: TAudioNodeConnectionsStore = new WeakMap();\n\nexport const AUDIO_NODE_STORE: TAudioNodeStore = new WeakMap();\n\nexport const AUDIO_PARAM_CONNECTIONS_STORE: TAudioParamConnectionsStore = new WeakMap();\n\nexport const AUDIO_PARAM_STORE: TAudioParamStore = new WeakMap();\n\nexport const CONTEXT_STORE: TContextStore = new WeakMap();\n\nexport const EVENT_LISTENERS: WeakMap<IAudioNode<TContext>, Set<TInternalStateEventListener>> = new WeakMap();\n\nexport const CYCLE_COUNTERS: TCycleCounters = new WeakMap();\n\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS: WeakMap<\n    TNativeContext,\n    Map<string, IAudioWorkletProcessorConstructor>\n> = new WeakMap();\n\nexport const NODE_TO_PROCESSOR_MAPS: WeakMap<\n    TNativeContext,\n    WeakMap<TNativeAudioWorkletNode, Promise<IAudioWorkletProcessor>>\n> = new WeakMap();\n","import { TConstructor } from '../types';\n\nconst handler = {\n    construct(): any {\n        return handler;\n    }\n};\n\nexport const isConstructible = (constructible: TConstructor): boolean => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n\n        new proxy(); // tslint:disable-line:no-unused-expression\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\n\nexport const splitImportStatements = (source: string, url: string): [string, string] => {\n    const importStatements = [];\n\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nimport { IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TAddAudioWorkletModuleFactory, TEvaluateAudioWorkletGlobalScopeFunction } from '../types';\n\nconst verifyParameterDescriptors = (parameterDescriptors: IAudioWorkletProcessorConstructor['parameterDescriptors']) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\n\nconst verifyProcessorCtor = <T extends IAudioWorkletProcessorConstructor>(processorCtor: T) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\n\nexport const createAddAudioWorkletModule: TAddAudioWorkletModuleFactory = (\n    cacheTestResult,\n    createNotSupportedError,\n    evaluateSource,\n    exposeCurrentFrameAndCurrentTime,\n    fetchSource,\n    getNativeContext,\n    getOrCreateBackupOfflineAudioContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    ongoingRequests,\n    resolvedRequests,\n    testAudioWorkletProcessorPostMessageSupport,\n    window\n) => {\n    let index = 0;\n\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n\n        const nativeContext = getNativeContext(context);\n\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise =\n            nativeContext.audioWorklet === undefined\n                ? fetchSource(moduleURL)\n                      .then(([source, absoluteUrl]) => {\n                          const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n\n                          /*\n                           * This is the unminified version of the code used below:\n                           *\n                           * ```js\n                           * ${ importStatements };\n                           * ((a, b) => {\n                           *     (a[b] = a[b] || [ ]).push(\n                           *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                           *             ${ sourceWithoutImportStatements }\n                           *         }\n                           *     );\n                           * })(window, '_AWGS');\n                           * ```\n                           */\n                          // tslint:disable-next-line:max-line-length\n                          const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n\n                          // @todo Evaluating the given source code is a possible security problem.\n                          return evaluateSource(wrappedSource);\n                      })\n                      .then(() => {\n                          const evaluateAudioWorkletGlobalScope = (<TEvaluateAudioWorkletGlobalScopeFunction[]>(<any>window)._AWGS).pop();\n\n                          if (evaluateAudioWorkletGlobalScope === undefined) {\n                              // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                              throw new SyntaxError();\n                          }\n\n                          exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                              evaluateAudioWorkletGlobalScope(\n                                  class AudioWorkletProcessor {},\n                                  undefined,\n                                  (name, processorCtor) => {\n                                      if (name.trim() === '') {\n                                          throw createNotSupportedError();\n                                      }\n\n                                      const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n\n                                      if (nodeNameToProcessorConstructorMap !== undefined) {\n                                          if (nodeNameToProcessorConstructorMap.has(name)) {\n                                              throw createNotSupportedError();\n                                          }\n\n                                          verifyProcessorCtor(processorCtor);\n                                          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                          nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                                      } else {\n                                          verifyProcessorCtor(processorCtor);\n                                          verifyParameterDescriptors(processorCtor.parameterDescriptors);\n\n                                          NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                                      }\n                                  },\n                                  nativeContext.sampleRate,\n                                  undefined,\n                                  undefined\n                              )\n                          );\n                      })\n                : Promise.all([\n                      fetchSource(moduleURL),\n                      Promise.resolve(\n                          cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport)\n                      )\n                  ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                      const currentIndex = index + 1;\n\n                      index = currentIndex;\n\n                      const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                      /*\n                       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                       *\n                       * This is the unminified version of the code used below.\n                       *\n                       * ```js\n                       * class extends AudioWorkletProcessor {\n                       *\n                       *     __buffers = new WeakSet();\n                       *\n                       *     constructor () {\n                       *         super();\n                       *\n                       *         this.port.postMessage = ((postMessage) => {\n                       *             return (message, transferables) => {\n                       *                 const filteredTransferables = (transferables)\n                       *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                       *                     : transferables;\n                       *\n                       *                 return postMessage.call(this.port, message, filteredTransferables);\n                       *              };\n                       *         })(this.port.postMessage);\n                       *     }\n                       * }\n                       * ```\n                       */\n                      const patchedAudioWorkletProcessor = isSupportingPostMessage\n                          ? 'AudioWorkletProcessor'\n                          : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                      /*\n                       * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                       *\n                       * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                       *\n                       * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                       *\n                       * This is the unminified version of the code used below:\n                       *\n                       * ```js\n                       * `${ importStatements };\n                       * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                       * })(\n                       *     ${ patchedAudioWorkletProcessor },\n                       *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                       *\n                       *         __collectBuffers = (array) => {\n                       *             array.forEach((element) => this.__buffers.add(element.buffer));\n                       *         };\n                       *\n                       *         process (inputs, outputs, parameters) {\n                       *             inputs.forEach(this.__collectBuffers);\n                       *             outputs.forEach(this.__collectBuffers);\n                       *             this.__collectBuffers(Object.values(parameters));\n                       *\n                       *             return super.process(\n                       *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                       *                 outputs,\n                       *                 parameters\n                       *             );\n                       *         }\n                       *\n                       *     })\n                       * );\n                       *\n                       * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                       *\n                       *     process () {\n                       *         return false;\n                       *     }\n                       *\n                       * })`\n                       * ```\n                       */\n                      const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                      const bufferRegistration = isSupportingPostMessage\n                          ? ''\n                          : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                      const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                      const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                      const url = URL.createObjectURL(blob);\n\n                      return nativeContext.audioWorklet\n                          .addModule(url, options)\n                          .then(() => {\n                              if (isNativeOfflineAudioContext(nativeContext)) {\n                                  return nativeContext;\n                              }\n\n                              // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                              const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n\n                              return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                          })\n                          .then((nativeContextOrBackupOfflineAudioContext) => {\n                              if (nativeAudioWorkletNodeConstructor === null) {\n                                  throw new SyntaxError();\n                              }\n\n                              try {\n                                  // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                                  new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                              } catch {\n                                  throw new SyntaxError();\n                              }\n                          })\n                          .finally(() => URL.revokeObjectURL(url));\n                  });\n\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        } else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n\n        promise\n            .then(() => {\n                const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n\n                if (updatedResolvedRequestsOfContext === undefined) {\n                    resolvedRequests.set(context, new Set([moduleURL]));\n                } else {\n                    updatedResolvedRequestsOfContext.add(moduleURL);\n                }\n            })\n            .finally(() => {\n                const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n\n                if (updatedOngoingRequestsOfContext !== undefined) {\n                    updatedOngoingRequestsOfContext.delete(moduleURL);\n                }\n            });\n\n        return promise;\n    };\n};\n","import { TGetValueForKeyFunction } from '../types';\n\nexport const getValueForKey: TGetValueForKeyFunction = (map, key) => {\n    const value = map.get(key);\n\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n\n    return value;\n};\n","import { TPickElementFromSetFunction } from '../types';\n\nexport const pickElementFromSet: TPickElementFromSetFunction = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n\n    const [matchingElement] = matchingElements;\n\n    set.delete(matchingElement);\n\n    return matchingElement;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioNodeInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioNode = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioNodeInputConnection>>,\n    source: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { EVENT_LISTENERS } from '../globals';\nimport { TGetEventListenersOfAudioNodeFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getEventListenersOfAudioNode: TGetEventListenersOfAudioNodeFunction = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToActive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n","import { IAudioNode, IAudioWorkletNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioWorkletNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioWorkletNode<T> => {\n    return 'port' in audioNode;\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const setInternalStateToPassive = <T extends TContext>(audioNode: IAudioNode<T>) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    activeInputs: Set<TActiveInputConnection<T>>[]\n) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { IAnalyserNode, IAnalyserOptions } from '../interfaces';\nimport { TAnalyserNodeConstructorFactory, TAudioNodeRenderer, TContext, TNativeAnalyserNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n} as const;\n\nexport const createAnalyserNodeConstructor: TAnalyserNodeConstructorFactory = (\n    audionNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class AnalyserNode<T extends TContext> extends audionNodeConstructor<T> implements IAnalyserNode<T> {\n        private _nativeAnalyserNode: TNativeAnalyserNode;\n\n        constructor(context: T, options?: Partial<IAnalyserOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n\n        get fftSize(): number {\n            return this._nativeAnalyserNode.fftSize;\n        }\n\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n\n        get frequencyBinCount(): number {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n\n        get maxDecibels(): number {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n\n            this._nativeAnalyserNode.maxDecibels = value;\n\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get minDecibels(): number {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n\n            this._nativeAnalyserNode.minDecibels = value;\n\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n\n                throw createIndexSizeError();\n            }\n        }\n\n        get smoothingTimeConstant(): number {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n\n        public getByteFrequencyData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n\n        public getByteTimeDomainData(array: Uint8Array): void {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n\n        public getFloatFrequencyData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n\n        public getFloatTimeDomainData(array: Float32Array): void {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n","import { TNativeAudioNode, TNativeContext } from '../types';\n\nexport const isOwnedByContext = (nativeAudioNode: TNativeAudioNode, nativeContext: TNativeContext): boolean => {\n    return nativeAudioNode.context === nativeContext;\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer: TNativeAudioBuffer): boolean => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TIndexSizeErrorFactory } from '../types';\n\nexport const createIndexSizeError: TIndexSizeErrorFactory = () => new DOMException('', 'IndexSizeError');\n","import { createIndexSizeError } from '../factories/index-size-error';\nimport { TNativeAudioBuffer } from '../types';\n\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer: TNativeAudioBuffer): void => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel: number) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            } catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { IAudioBuffer, IAudioBufferOptions } from '../interfaces';\nimport { TAudioBufferConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createAudioBufferConstructor: TAudioBufferConstructorFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    testNativeAudioBufferConstructorSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    let nativeOfflineAudioContext: null | TNativeOfflineAudioContext = null;\n\n    return class AudioBuffer implements IAudioBuffer {\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyFromChannel!: (destination: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public copyToChannel!: (source: Float32Array, channelNumber: number, bufferOffset?: number) => void;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public duration!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public getChannelData!: (channel: number) => Float32Array;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public length!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public numberOfChannels!: number;\n\n        // This field needs to be defined to convince TypeScript that the IAudioBuffer will be implemented.\n        public sampleRate!: number;\n\n        constructor(options: IAudioBufferOptions) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer =\n                nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                    ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                    : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            } else if (\n                !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                    testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                )\n            ) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n\n            audioBufferStore.add(audioBuffer);\n\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(<any>instance)\n            );\n        }\n    };\n};\n","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\n\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsActiveAudioNodeFunction } from '../types';\n\nexport const isActiveAudioNode: TIsActiveAudioNodeFunction = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioBufferSourceNode, IAudioBufferSourceOptions, IAudioParam, IAudioScheduledSourceNodeEventMap } from '../interfaces';\nimport {\n    TAnyAudioBuffer,\n    TAudioBufferSourceNodeConstructorFactory,\n    TAudioBufferSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeAudioBufferSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n} as const;\n\nexport const createAudioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class AudioBufferSourceNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IAudioBufferSourceNode<T>\n    {\n        private _audioBufferSourceNodeRenderer: TAudioBufferSourceNodeRenderer<T>;\n\n        private _isBufferNullified: boolean;\n\n        private _isBufferSet: boolean;\n\n        private _nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _playbackRate: IAudioParam;\n\n        constructor(context: T, options?: Partial<IAudioBufferSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = <TAudioBufferSourceNodeRenderer<T>>(\n                (isOffline ? createAudioBufferSourceNodeRenderer() : null)\n            );\n\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(\n                this,\n                isOffline,\n                nativeAudioBufferSourceNode.playbackRate,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n\n                this._isBufferSet = true;\n            }\n        }\n\n        get loop(): boolean {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n\n        get loopEnd(): number {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n\n        get loopStart(): number {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        get playbackRate(): IAudioParam {\n            return this._playbackRate;\n        }\n\n        public start(when = 0, offset = 0, duration?: number): void {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeAudioBufferSourceNode.stop(when);\n\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { IAudioNode } from '../interfaces';\nimport { TAudioNodeConnections, TContext, TGetAudioNodeConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioNodeConnections: TGetAudioNodeConnectionsFunction = <T extends TContext>(\n    audioNode: IAudioNode<T>\n): TAudioNodeConnections<T> => {\n    return <TAudioNodeConnections<T>>getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioParamConnections, TContext, TGetAudioParamConnectionsFunction } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioParamConnections: TGetAudioParamConnectionsFunction = <T extends TContext>(\n    audioParam: IAudioParam\n): TAudioParamConnections<T> => {\n    return <TAudioParamConnections<T>>getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n\nexport const deactivateActiveAudioNodeInputConnections = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    trace: readonly IAudioNode<T>[]\n) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n\n    activeInputs.forEach((connections) =>\n        connections.forEach(([source]) => {\n            if (!trace.includes(audioNode)) {\n                deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n            }\n        })\n    );\n\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n              // Bug #149: Safari does not yet support the detune AudioParam.\n              audioNode.playbackRate\n          ]\n        : isAudioWorkletNode(audioNode)\n        ? Array.from(audioNode.parameters.values())\n        : isBiquadFilterNode(audioNode)\n        ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n        : isConstantSourceNode(audioNode)\n        ? [audioNode.offset]\n        : isGainNode(audioNode)\n        ? [audioNode.gain]\n        : isOscillatorNode(audioNode)\n        ? [audioNode.detune, audioNode.frequency]\n        : isStereoPannerNode(audioNode)\n        ? [audioNode.pan]\n        : [];\n\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n","import { IAudioBufferSourceNode, IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioBufferSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IAudioBufferSourceNode<T> => {\n    return 'playbackRate' in audioNode;\n};\n","import { IAudioNode, IBiquadFilterNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isBiquadFilterNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IBiquadFilterNode<T> => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n","import { IAudioNode, IConstantSourceNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isConstantSourceNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IConstantSourceNode<T> => {\n    return 'offset' in audioNode;\n};\n","import { IAudioNode, IGainNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isGainNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IGainNode<T> => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n","import { IAudioNode, IOscillatorNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isOscillatorNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IOscillatorNode<T> => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n","import { IAudioNode, IStereoPannerNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isStereoPannerNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IStereoPannerNode<T> => {\n    return 'pan' in audioNode;\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TContext } from '../types';\nimport { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\n\nexport const deactivateAudioGraph = <T extends TContext>(context: T): void => {\n    deactivateActiveAudioNodeInputConnections(<IAudioDestinationNode<T>>context.destination, []);\n};\n","import { IAudioContextOptions } from '../interfaces';\n\nexport const isValidLatencyHint = (latencyHint: IAudioContextOptions['latencyHint']) => {\n    return (\n        latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'))\n    );\n};\n","import { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isAudioNode = <T extends TContext>(\n    audioNodeOrAudioParam: IAudioNode<T> | IAudioParam\n): audioNodeOrAudioParam is IAudioNode<T> => {\n    return 'context' in audioNodeOrAudioParam;\n};\n","import { TAudioNodeOutputConnection, TContext, TOutputConnection } from '../types';\nimport { isAudioNode } from './audio-node';\n\nexport const isAudioNodeOutputConnection = <T extends TContext>(\n    outputConnection: TOutputConnection<T>\n): outputConnection is TAudioNodeOutputConnection<T> => {\n    return isAudioNode(outputConnection[0]);\n};\n","import { TInsertElementInSetFunction } from '../types';\n\nexport const insertElementInSet: TInsertElementInSetFunction = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n\n    set.add(element);\n\n    return true;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    [output, eventListener]: TPassiveAudioParamInputConnection,\n    ignoreDuplicates: boolean\n) => {\n    insertElementInSet(\n        activeInputs,\n        [source, output, eventListener],\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n        ignoreDuplicates\n    );\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { insertElementInSet } from './insert-element-in-set';\n\nexport const addPassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    [source, output, eventListener]: TActiveInputConnection<T>,\n    ignoreDuplicates: boolean\n) => {\n    const passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    } else {\n        insertElementInSet(\n            passiveInputConnections,\n            [output, eventListener],\n            (passiveInputConnection) => passiveInputConnection[0] === output,\n            ignoreDuplicates\n        );\n    }\n};\n","import { INativeAudioNodeFaker } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\n\nexport const isNativeAudioNodeFaker = (\n    nativeAudioNodeOrNativeAudioNodeFaker: TNativeAudioNode | INativeAudioNodeFaker\n): nativeAudioNodeOrNativeAudioNodeFaker is INativeAudioNodeFaker => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { INativeAudioNodeFaker } from '../interfaces';\nimport { TConnectNativeAudioNodeToNativeAudioNodeFunction, TNativeAudioNode } from '../types';\n\nexport const connectNativeAudioNodeToNativeAudioNode: TConnectNativeAudioNodeToNativeAudioNodeFunction = (\n    nativeSourceAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    nativeDestinationAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n    output: number,\n    input: number\n): [TNativeAudioNode, number, number] => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n\n    return [nativeDestinationAudioNode, output, input];\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\n\nexport const deleteActiveInputConnection = <T extends TContext>(\n    activeInputConnections: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n): null | TActiveInputConnection<T> => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n\n            return activeInputConnection;\n        }\n    }\n\n    return null;\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TInternalStateEventListener } from '../types';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\n\nexport const deleteEventListenerOfAudioNode = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    eventListener: TInternalStateEventListener\n) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { TDisconnectNativeAudioNodeFromNativeAudioNodeFunction } from '../types';\n\nexport const disconnectNativeAudioNodeFromNativeAudioNode: TDisconnectNativeAudioNodeFromNativeAudioNodeFunction = (\n    nativeSourceAudioNode,\n    nativeDestinationAudioNode,\n    output,\n    input\n) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    } else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n","import { AUDIO_NODE_STORE } from '../globals';\nimport { IAudioNode, INativeAudioNodeFaker } from '../interfaces';\nimport { TContext, TGetNativeAudioNodeFunction, TNativeAudioNode } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioNode: TGetNativeAudioNodeFunction = <T extends TContext, U extends TNativeAudioNode | INativeAudioNodeFaker>(\n    audioNode: IAudioNode<T>\n): U => {\n    return <U>getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n","import { AUDIO_PARAM_STORE } from '../globals';\nimport { IAudioParam } from '../interfaces';\nimport { TNativeAudioParam } from '../types';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getNativeAudioParam = (audioParam: IAudioParam): TNativeAudioParam => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n","import { CYCLE_COUNTERS } from '../globals';\nimport { TIsPartOfACycleFunction } from '../types';\n\nexport const isPartOfACycle: TIsPartOfACycleFunction = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { TIsPassiveAudioNodeFunction } from '../types';\n\nexport const isPassiveAudioNode: TIsPassiveAudioNodeFunction = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n","import { TNativeAudioContext, TNativeAudioWorkletNodeConstructor } from '../types';\n\nexport const testAudioNodeDisconnectMethodSupport = (\n    nativeAudioContext: TNativeAudioContext,\n    nativeAudioWorkletNodeConstructor: null | TNativeAudioWorkletNodeConstructor\n): Promise<boolean> => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        } else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n\n            channelData[0] = 1;\n            channelData[1] = 1;\n\n            const source = nativeAudioContext.createBufferSource();\n\n            source.buffer = ones;\n            source.loop = true;\n\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n\n                if (Array.prototype.some.call(chnnlDt, (sample: number) => sample === 1)) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n\n                source.stop();\n\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n\n            source.start();\n        }\n    });\n};\n","import { IAudioNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const visitEachAudioNodeOnce = <T extends TContext>(\n    cycles: IAudioNode<T>[][],\n    visitor: (audioNode: IAudioNode<T>, count: number) => void\n): void => {\n    const counts = new Map<IAudioNode<T>, number>();\n\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n","import { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const isNativeAudioNode = (\n    nativeAudioNodeOrAudioParam: TNativeAudioNode | TNativeAudioParam\n): nativeAudioNodeOrAudioParam is TNativeAudioNode => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode: TNativeAudioNode): void => {\n    const connections = new Map<TNativeAudioNode | TNativeAudioParam, { input: number; output: number }[]>();\n\n    nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input: number = 0): void | TNativeAudioNode => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            } else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n            disconnect.apply(nativeAudioNode);\n\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            } else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    } else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            } else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                } else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter(\n                            (connection) => connection.output !== output && (connection.input !== input || input === undefined)\n                        );\n\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        } else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    } else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nimport {\n    IAudioNode,\n    IAudioNodeRenderer,\n    IAudioParam,\n    IMinimalOfflineAudioContext,\n    INativeAudioNodeFaker,\n    IOfflineAudioContext\n} from '../interfaces';\nimport {\n    TAudioNodeConstructorFactory,\n    TChannelCountMode,\n    TChannelInterpretation,\n    TContext,\n    TInternalStateEventListener,\n    TNativeAudioNode,\n    TNativeAudioParam\n} from '../types';\n\nconst addConnectionToAudioParamOfAudioContext = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number,\n    isOffline: boolean\n): boolean => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n\n    const eventListener: TInternalStateEventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        } else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n\n    if (\n        insertElementInSet(\n            outputs,\n            [destination, output],\n            (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output,\n            true\n        )\n    ) {\n        eventListeners.add(eventListener);\n\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        } else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n\n        return true;\n    }\n\n    return false;\n};\n\nconst deleteInputConnectionOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n        return [passiveInputConnection[2], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputConnectionOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    destination: IAudioParam,\n    output: number\n): [null | TInternalStateEventListener, boolean] => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections<T>(destination);\n\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n\n        return [passiveInputConnection[1], false];\n    }\n\n    return [activeInputConnection[2], true];\n};\n\nconst deleteInputsOfAudioNode = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<T>,\n    output: number,\n    input: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\n\nconst deleteInputsOfAudioParam = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioParam,\n    output: number\n) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\n\nconst deleteAnyConnection = <T extends TContext>(source: IAudioNode<T>, isOffline: boolean): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        } else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n\n        destinations.push(outputConnection[0]);\n    }\n\n    audioNodeConnectionsOfSource.outputs.clear();\n\n    return destinations;\n};\n\nconst deleteConnectionAtOutput = <T extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    output: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n\n    return destinations;\n};\n\nconst deleteConnectionToDestination = <T extends TContext, U extends TContext>(\n    source: IAudioNode<T>,\n    isOffline: boolean,\n    destination: IAudioNode<U> | IAudioParam,\n    output?: number,\n    input?: number\n): (IAudioNode<T> | IAudioParam)[] => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter(\n            (outputConnection) =>\n                outputConnection[0] === destination &&\n                (output === undefined || outputConnection[1] === output) &&\n                (input === undefined || outputConnection[2] === input)\n        )\n        .map((outputConnection) => {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            } else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n\n            return outputConnection[0];\n        });\n};\n\nexport const createAudioNodeConstructor: TAudioNodeConstructorFactory = (\n    addAudioNodeConnections,\n    addConnectionToAudioNode,\n    cacheTestResult,\n    createIncrementCycleCounter,\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    decrementCycleCounter,\n    detectCycles,\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor\n) => {\n    return class AudioNode<T extends TContext, EventMap extends Record<string, Event> = {}>\n        extends eventTargetConstructor<EventMap>\n        implements IAudioNode<T, EventMap>\n    {\n        private _context: T;\n\n        private _nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode;\n\n        constructor(\n            context: T,\n            isActive: boolean,\n            nativeAudioNode: INativeAudioNodeFaker | TNativeAudioNode,\n            audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null\n        ) {\n            super(nativeAudioNode);\n\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n\n            const nativeContext = getNativeContext(context);\n\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (\n                isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })\n            ) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioNode.channelCount;\n        }\n\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n\n        get channelInterpretation(): TChannelInterpretation {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n\n        get context(): T {\n            return this._context;\n        }\n\n        get numberOfInputs(): number {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n\n        get numberOfOutputs(): number {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n\n        public connect<U extends TContext, V extends IAudioNode<U>>(destinationNode: V, output?: number, input?: number): V;\n        public connect(destinationParam: IAudioParam, output?: number): void;\n        // tslint:disable-next-line:invalid-void\n        public connect<U extends TContext, V extends IAudioNode<U>>(destination: V | IAudioParam, output = 0, input = 0): void | V {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(\n                        this._nativeAudioNode,\n                        nativeDestinationAudioNode,\n                        output,\n                        input\n                    );\n\n                    const isPassive = isPassiveAudioNode(this);\n\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                } catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n\n                    throw err;\n                }\n\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(\n                    this,\n                    <IAudioNode<TContext>>destination,\n                    output,\n                    input,\n                    isOffline\n                );\n\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], <IAudioNode<T>>(<unknown>destination));\n\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n\n                return destination;\n            }\n\n            const nativeAudioParam = getNativeAudioParam(destination);\n\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if ((<TNativeAudioParam & { name: string }>nativeAudioParam).name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            } catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n\n        public disconnect(output?: number): void;\n        public disconnect<U extends TContext>(destinationNode: IAudioNode<U>, output?: number, input?: number): void;\n        public disconnect(destinationParam: IAudioParam, output?: number): void;\n        public disconnect<U extends TContext>(\n            destinationOrOutput?: number | IAudioNode<U> | IAudioParam,\n            output?: number,\n            input?: number\n        ): void {\n            let destinations: (IAudioNode<T> | IAudioParam)[];\n\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            } else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            } else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TActiveInputConnection, TContext } from '../types';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deleteActiveInputConnectionToAudioParam = <T extends TContext>(\n    activeInputs: Set<TActiveInputConnection<T>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    return pickElementFromSet(\n        activeInputs,\n        (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n    );\n};\n","import { IReadOnlyMap } from './interfaces';\n\nexport class ReadOnlyMap<T, U> implements IReadOnlyMap<T, U> {\n    private _map: Map<T, U>;\n\n    constructor(parameters: [T, U][]) {\n        this._map = new Map(parameters);\n    }\n\n    get size(): number {\n        return this._map.size;\n    }\n\n    public entries(): IterableIterator<[T, U]> {\n        return this._map.entries();\n    }\n\n    public forEach(callback: (audioParam: U, name: T, map: ReadOnlyMap<T, U>) => void, thisArg: any = null): void {\n        return this._map.forEach((value: U, key: T) => callback.call(thisArg, value, key, this));\n    }\n\n    public get(name: T): undefined | U {\n        return this._map.get(name);\n    }\n\n    public has(name: T): boolean {\n        return this._map.has(name);\n    }\n\n    public keys(): IterableIterator<T> {\n        return this._map.keys();\n    }\n\n    public values(): IterableIterator<U> {\n        return this._map.values();\n    }\n}\n","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport {\n    IAudioParam,\n    IAudioWorkletNode,\n    IAudioWorkletNodeEventMap,\n    IAudioWorkletNodeOptions,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TAudioNodeRenderer,\n    TAudioParamMap,\n    TAudioWorkletNodeConstructorFactory,\n    TContext,\n    TErrorEventHandler,\n    TNativeAudioContext,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n} as const;\n\nexport const createAudioWorkletNodeConstructor: TAudioWorkletNodeConstructorFactory = (\n    addUnrenderedAudioWorkletNode,\n    audioNodeConstructor,\n    createAudioParam,\n    createAudioWorkletNodeRenderer,\n    createNativeAudioWorkletNode,\n    getAudioNodeConnections,\n    getBackupOfflineAudioContext,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor,\n    sanitizeAudioWorkletNodeOptions,\n    setActiveAudioWorkletNodeInputs,\n    testAudioWorkletNodeOptionsClonability,\n    wrapEventListener\n) => {\n    return class AudioWorkletNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioWorkletNodeEventMap>\n        implements IAudioWorkletNode<T>\n    {\n        private _nativeAudioWorkletNode: TNativeAudioWorkletNode;\n\n        private _onprocessorerror: null | TErrorEventHandler<this>;\n\n        private _parameters: null | TAudioParamMap;\n\n        constructor(context: T, name: string, options?: Partial<IAudioWorkletNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap?.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext =\n                isOffline || nativeContext.state !== 'closed'\n                    ? nativeContext\n                    : getBackupOfflineAudioContext(<TNativeAudioContext>nativeContext) ?? nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(\n                nativeContextOrBackupOfflineAudioContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                nativeAudioWorkletNodeConstructor,\n                name,\n                processorConstructor,\n                mergedOptions\n            );\n            const audioWorkletNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null)\n            );\n\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n\n            const parameters: [string, IAudioParam][] = [];\n\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n\n                parameters.push([nm, audioParam]);\n            });\n\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, <IAudioWorkletNode<IMinimalOfflineAudioContext | IOfflineAudioContext>>this);\n            }\n\n            const { activeInputs } = getAudioNodeConnections(this);\n\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n\n        get onprocessorerror(): null | TErrorEventHandler<this> {\n            return this._onprocessorerror;\n        }\n\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, <EventListenerOrEventListenerObject>value) : null;\n\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : <null | TErrorEventHandler<this>>nativeOnProcessorError;\n        }\n\n        get parameters(): TAudioParamMap {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return <IReadOnlyMap<string, TNativeAudioParam>>this._nativeAudioWorkletNode.parameters;\n            }\n\n            return this._parameters;\n        }\n\n        get port(): MessagePort {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n","import { TNativeAudioBuffer } from '../types';\n\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: string]: Float32Array },\n    key: string,\n    channelNumber: number,\n    bufferOffset: number\n): void;\nexport function copyFromChannel(\n    audioBuffer: TNativeAudioBuffer,\n    // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\n    parent: any,\n    key: number | string,\n    channelNumber: number,\n    bufferOffset: number\n): void {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n\n        // Bug #5: Safari does not support copyFromChannel().\n    } else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        } else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n\n            parent[key].set(slicedInput);\n        }\n    }\n}\n","import { TNativeAudioBuffer } from '../types';\n\nexport const copyToChannel = (\n    audioBuffer: TNativeAudioBuffer,\n    parent: { [key: number]: Float32Array },\n    key: number,\n    channelNumber: number,\n    bufferOffset: number\n): void => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n\n        // Bug #5: Safari does not support copyToChannel().\n    } else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n","export const createNestedArrays = (x: number, y: number | number[]): Float32Array[][] => {\n    const arrays: Float32Array[][] = [];\n\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n\n        const length = typeof y === 'number' ? y : y[i];\n\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n\n        arrays.push(array);\n    }\n\n    return arrays;\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioNode, IAudioWorkletProcessor } from '../interfaces';\nimport { TContext, TNativeAudioWorkletNode, TNativeOfflineAudioContext } from '../types';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioWorkletProcessor = <T extends TContext>(\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    proxy: IAudioNode<T>\n): Promise<IAudioWorkletProcessor> => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport {\n    IAudioWorkletNode,\n    IAudioWorkletNodeOptions,\n    IAudioWorkletProcessorConstructor,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IReadOnlyMap\n} from '../interfaces';\nimport {\n    TAudioWorkletNodeRendererFactoryFactory,\n    TExposeCurrentFrameAndCurrentTimeFunction,\n    TNativeAudioBuffer,\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeGainNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst processBuffer = async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n    proxy: IAudioWorkletNode<T>,\n    renderedBuffer: null | TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    options: IAudioWorkletNodeOptions,\n    outputChannelCount: number[],\n    processorConstructor: undefined | IAudioWorkletProcessorConstructor,\n    exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction\n): Promise<null | TNativeAudioBuffer> => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer =\n        numberOfOutputChannels === 0\n            ? null\n            : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters: { [name: string]: Float32Array } = Array.from(proxy.parameters.keys()).reduce(\n        (prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n        {}\n    );\n\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                i / nativeOfflineAudioContext.sampleRate,\n                nativeOfflineAudioContext.sampleRate,\n                () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters)\n            );\n\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n\n            if (!activeSourceFlag) {\n                break;\n            }\n        } catch (error) {\n            proxy.dispatchEvent(\n                new ErrorEvent('processorerror', {\n                    colno: error.colno,\n                    filename: error.filename,\n                    lineno: error.lineno,\n                    message: error.message\n                })\n            );\n\n            break;\n        }\n    }\n\n    return processedBuffer;\n};\n\nexport const createAudioWorkletNodeRendererFactory: TAudioWorkletNodeRendererFactoryFactory = (\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        name: string,\n        options: IAudioWorkletNodeOptions,\n        processorConstructor: undefined | IAudioWorkletProcessorConstructor\n    ) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioWorkletNode | TNativeGainNode>();\n\n        let processedBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IAudioWorkletNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n            let nativeOutputNodes: null | [TNativeChannelSplitterNode, TNativeChannelMergerNode[], TNativeGainNode] = null;\n\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(\n                        createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: outputChannelCount[i]\n                        })\n                    );\n                }\n\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n\n                outputGainNode.connect = <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            } else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]\n            );\n\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters =\n                        processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                            numberOfChannels,\n                            // Ceil the length to the next full render quantum.\n                            // Bug #17: Safari does not yet expose the length.\n                            Math.ceil(proxy.context.length / 128) * 128,\n                            nativeOfflineAudioContext.sampleRate\n                        );\n                        const gainNodes: TNativeGainNode[] = [];\n                        const inputChannelSplitterNodes = [];\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(\n                                createNativeGainNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: options.channelCountMode,\n                                    channelInterpretation: options.channelInterpretation,\n                                    gain: 1\n                                })\n                            );\n                            inputChannelSplitterNodes.push(\n                                createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                    channelCount: options.channelCount,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    numberOfOutputs: options.channelCount\n                                })\n                            );\n                        }\n\n                        const constantSourceNodes = await Promise.all(\n                            Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                                const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: audioParam.value\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n\n                                return constantSourceNode;\n                            })\n                        );\n\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                        await Promise.all(\n                            gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode))\n                        );\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n\n                    processedBufferPromise = processBuffer(\n                        proxy,\n                        numberOfChannels === 0 ? null : await renderBuffer(),\n                        nativeOfflineAudioContext,\n                        options,\n                        outputChannelCount,\n                        processorConstructor,\n                        exposeCurrentFrameAndCurrentTime\n                    );\n                }\n\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n\n                return outputGainNode;\n            }\n\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm)\n                    );\n                }\n            } else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(\n                        nativeOfflineAudioContext,\n                        audioParam,\n                        // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                        <TNativeAudioParam>(<IReadOnlyMap<string, TNativeAudioParam>>nativeAudioWorkletNode.parameters).get(nm)\n                    );\n                }\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n\n            return nativeAudioWorkletNode;\n        };\n\n        return {\n            render(\n                proxy: IAudioWorkletNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioWorkletNode | TNativeGainNode> {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IBiquadFilterNode, IBiquadFilterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TBiquadFilterNodeConstructorFactory, TBiquadFilterType, TContext, TNativeBiquadFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n} as const;\n\nexport const createBiquadFilterNodeConstructor: TBiquadFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class BiquadFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IBiquadFilterNode<T> {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _gain: IAudioParam;\n\n        private _nativeBiquadFilterNode: TNativeBiquadFilterNode;\n\n        private _Q: IAudioParam;\n\n        constructor(context: T, options?: Partial<IBiquadFilterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createBiquadFilterNodeRenderer() : null);\n\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.detune,\n                1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT),\n                -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT)\n            );\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(\n                this,\n                isOffline,\n                nativeBiquadFilterNode.gain,\n                40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT),\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n\n        get Q(): IAudioParam {\n            return this._Q;\n        }\n\n        get type(): TBiquadFilterType {\n            return this._nativeBiquadFilterNode.type;\n        }\n\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            } catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n\n                throw err;\n            }\n\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n","import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n","import { IChannelSplitterOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelSplitterNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n} as const;\n\nexport const createChannelSplitterNodeConstructor: TChannelSplitterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n) => {\n    return class ChannelSplitterNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelSplitterOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport { IAudioParam, IAudioScheduledSourceNodeEventMap, IConstantSourceNode, IConstantSourceOptions } from '../interfaces';\nimport {\n    TConstantSourceNodeConstructorFactory,\n    TConstantSourceNodeRenderer,\n    TContext,\n    TEventHandler,\n    TNativeConstantSourceNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n} as const;\n\nexport const createConstantSourceNodeConstructor: TConstantSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRendererFactory,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class ConstantSourceNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IConstantSourceNode<T>\n    {\n        private _constantSourceNodeRenderer: TConstantSourceNodeRenderer<T>;\n\n        private _nativeConstantSourceNode: TNativeConstantSourceNode;\n\n        private _offset: IAudioParam;\n\n        private _onended: null | TEventHandler<this>;\n\n        constructor(context: T, options?: Partial<IConstantSourceOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = <TConstantSourceNodeRenderer<T>>(\n                (isOffline ? createConstantSourceNodeRendererFactory() : null)\n            );\n\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(\n                this,\n                isOffline,\n                nativeConstantSourceNode.offset,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._onended = null;\n        }\n\n        get offset(): IAudioParam {\n            return this._offset;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeConstantSourceNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        public start(when = 0): void {\n            this._nativeConstantSourceNode.start(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeConstantSourceNode.stop(when);\n\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { IConvolverNode, IConvolverOptions } from '../interfaces';\nimport { TAnyAudioBuffer, TAudioNodeRenderer, TContext, TConvolverNodeConstructorFactory, TNativeConvolverNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n} as const;\n\nexport const createConvolverNodeConstructor: TConvolverNodeConstructorFactory = (\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class ConvolverNode<T extends TContext> extends audioNodeConstructor<T> implements IConvolverNode<T> {\n        private _isBufferNullified: boolean;\n\n        private _nativeConvolverNode: TNativeConvolverNode;\n\n        constructor(context: T, options?: Partial<IConvolverOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createConvolverNodeRenderer() : null);\n\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeConvolverNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n\n                setAudioNodeTailTime(this, 0);\n            } else {\n                this._isBufferNullified = false;\n\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n\n        get normalize(): boolean {\n            return this._nativeConvolverNode.normalize;\n        }\n\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n","export const detachArrayBuffer = (arrayBuffer: ArrayBuffer): Promise<void> => {\n    const { port1, port2 } = new MessageChannel();\n\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n\n            port1.close();\n            port2.close();\n\n            resolve();\n        };\n\n        port2.onmessage = () => closeAndResolve();\n\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        } finally {\n            closeAndResolve();\n        }\n    });\n};\n","import { IAudioParam, IDelayNode, IDelayOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TDelayNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n} as const;\n\nexport const createDelayNodeConstructor: TDelayNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DelayNode<T extends TContext> extends audioNodeConstructor<T> implements IDelayNode<T> {\n        private _delayTime: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDelayOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n\n        get delayTime(): IAudioParam {\n            return this._delayTime;\n        }\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TDisconnectMultipleOutputsFactory, TIndexSizeErrorFactory, TNativeAudioNode } from '../types';\n\nconst getOutputAudioNodeAtIndex = (\n    createIndexSizeError: TIndexSizeErrorFactory,\n    outputAudioNodes: TNativeAudioNode[],\n    output: number\n): TNativeAudioNode => {\n    const outputAudioNode = outputAudioNodes[output];\n\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n\n    return outputAudioNode;\n};\n\nexport const createDisconnectMultipleOutputs: TDisconnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n","import { IAudioParam, IDynamicsCompressorNode, IDynamicsCompressorOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TDynamicsCompressorNodeConstructorFactory,\n    TNativeAudioParam,\n    TNativeDynamicsCompressorNode\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n} as const;\n\nexport const createDynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class DynamicsCompressorNode<T extends TContext> extends audioNodeConstructor<T> implements IDynamicsCompressorNode<T> {\n        private _attack: IAudioParam;\n\n        private _knee: IAudioParam;\n\n        private _nativeDynamicsCompressorNode: TNativeDynamicsCompressorNode;\n\n        private _ratio: IAudioParam;\n\n        private _release: IAudioParam;\n\n        private _threshold: IAudioParam;\n\n        constructor(context: T, options?: Partial<IDynamicsCompressorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createDynamicsCompressorNodeRenderer() : null);\n\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n\n            setAudioNodeTailTime(this, 0.006);\n        }\n\n        get attack(): IAudioParam {\n            return this._attack;\n        }\n\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount(): number {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n\n            this._nativeDynamicsCompressorNode.channelCount = value;\n\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n\n                throw createNotSupportedError();\n            }\n        }\n\n        get knee(): IAudioParam {\n            return this._knee;\n        }\n\n        get ratio(): IAudioParam {\n            return this._ratio;\n        }\n\n        get reduction(): number {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value === 'number') {\n                return (<TNativeAudioParam>(<any>this._nativeDynamicsCompressorNode.reduction)).value;\n            }\n\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n\n        get release(): IAudioParam {\n            return this._release;\n        }\n\n        get threshold(): IAudioParam {\n            return this._threshold;\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IGainNode, IGainOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TGainNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n} as const;\n\nexport const createGainNodeConstructor: TGainNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class GainNode<T extends TContext> extends audioNodeConstructor<T> implements IGainNode<T> {\n        private _gain: IAudioParam;\n\n        constructor(context: T, options?: Partial<IGainOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createGainNodeRenderer() : null);\n\n            super(context, false, nativeGainNode, gainNodeRenderer);\n\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n    };\n};\n","import { TInvalidStateErrorFactory } from '../types';\n\nexport const createInvalidStateError: TInvalidStateErrorFactory = () => new DOMException('', 'InvalidStateError');\n","import { TInvalidAccessErrorFactory } from '../types';\n\nexport const createInvalidAccessError: TInvalidAccessErrorFactory = () => new DOMException('', 'InvalidAccessError');\n","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nimport { IIIRFilterNode, IIIRFilterOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TIIRFilterNodeConstructorFactory, TNativeIIRFilterNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createIIRFilterNodeConstructor: TIIRFilterNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class IIRFilterNode<T extends TContext> extends audioNodeConstructor<T> implements IIIRFilterNode<T> {\n        private _nativeIIRFilterNode: TNativeIIRFilterNode;\n\n        constructor(\n            context: T,\n            options: { feedback: IIIRFilterOptions['feedback']; feedforward: IIIRFilterOptions['feedforward'] } & Partial<IIIRFilterOptions>\n        ) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(\n                nativeContext,\n                isOffline ? null : (<IMinimalAudioContext>(<any>context)).baseLatency,\n                mergedOptions\n            );\n            const iirFilterNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null)\n            );\n\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        public getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (\n    feedback: Float64Array,\n    feedbackLength: number,\n    feedforward: Float64Array,\n    feedforwardLength: number,\n    minLength: number,\n    xBuffer: Float32Array,\n    yBuffer: Float32Array,\n    bufferIndex: number,\n    bufferLength: number,\n    input: Float32Array,\n    output: Float32Array\n) => {\n    const inputLength = input.length;\n\n    let i = bufferIndex;\n\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n\n        output[j] = y;\n    }\n\n    return i;\n};\n","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IIIRFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TIIRFilterNodeRendererFactoryFactory,\n    TNativeAudioBuffer,\n    TNativeAudioBufferSourceNode,\n    TNativeIIRFilterNode,\n    TNativeOfflineAudioContext\n} from '../types';\n\nconst filterFullBuffer = (\n    renderedBuffer: TNativeAudioBuffer,\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    feedback: Iterable<number>,\n    feedforward: Iterable<number>\n) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(\n        renderedBuffer.numberOfChannels,\n        renderedBuffer.length,\n        renderedBuffer.sampleRate\n    );\n\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n\n        filterBuffer(\n            convertedFeedback,\n            feedbackLength,\n            convertedFeedforward,\n            feedforwardLength,\n            minLength,\n            xBuffer,\n            yBuffer,\n            0,\n            bufferLength,\n            input,\n            output\n        );\n    }\n\n    return filteredBuffer;\n};\n\nexport const createIIRFilterNodeRendererFactory: TIIRFilterNodeRendererFactoryFactory = (\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(feedback: Iterable<number>, feedforward: Iterable<number>) => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode | TNativeIIRFilterNode>();\n\n        let filteredBufferPromise: null | Promise<null | TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IIIRFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode: null | TNativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode<T, TNativeIIRFilterNode>(proxy);\n\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            } else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(<number[]>feedforward, <number[]>feedback);\n            }\n\n            renderedNativeAudioNodes.set(\n                nativeOfflineAudioContext,\n                nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode\n            );\n\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                        proxy.context.destination.channelCount,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n\n                const filteredBuffer = await filteredBufferPromise;\n\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n\n                return nativeAudioBufferSourceNode;\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n\n            return nativeIIRFilterNode;\n        };\n\n        return {\n            render(\n                proxy: IIIRFilterNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioBufferSourceNode | TNativeIIRFilterNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { IAudioContext, IAudioNodeOptions, IMediaStreamAudioDestinationNode, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioDestinationNodeConstructorFactory, TNativeMediaStreamAudioDestinationNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createMediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioDestinationNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioDestinationNode<T> {\n        private _nativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNode;\n\n        constructor(context: T, options?: Partial<IAudioNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n\n            super(context, false, nativeMediaStreamAudioDestinationNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n\n        get stream(): MediaStream {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n","import { TNativeContext } from '../types';\n\nexport const testPromiseSupport = (nativeContext: TNativeContext): boolean => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(<ArrayBuffer>uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n\n        if (promise === undefined) {\n            return false;\n        }\n\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n\n        return true;\n    } catch {\n        // Ignore errors.\n    }\n\n    return false;\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IMinimalOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TMinimalOfflineAudioContextConstructorFactory, TNativeOfflineAudioContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createMinimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructorFactory = (\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor<IMinimalOfflineAudioContext>\n        implements IMinimalOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","export const assignNativeAudioNodeOption = <T extends keyof any, U extends any>(\n    nativeAudioNode: Record<T, U>,\n    options: Record<T, U>,\n    option: T\n) => {\n    const value = options[option];\n\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n","import { IAudioNodeOptions } from '../interfaces';\nimport { TNativeAudioNode } from '../types';\nimport { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\n\nexport const assignNativeAudioNodeOptions = (nativeAudioNode: TNativeAudioNode, options: IAudioNodeOptions): void => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode: TNativeAnalyserNode): boolean => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n","export const assignNativeAudioNodeAudioParamValue = <T extends { [key: string]: any }, U extends { [key: string]: any }>(\n    nativeAudioNode: T,\n    options: U,\n    audioParam: keyof T & keyof U\n) => {\n    const value = options[audioParam];\n\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            (<(when: number, offset: number, duration?: number) => void>start).call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n","import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","export const computeBufferSize = (baseLatency: null | number, sampleRate: number) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n","import { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\n\nexport const createAudioWorkletProcessorPromise = async (\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeBiquadFilterNodeFactory } from '../types';\n\nexport const createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n\n    return nativeBiquadFilterNode;\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nimport { TNativeChannelSplitterNodeFactory } from '../types';\n\nexport const createNativeChannelSplitterNode: TNativeChannelSplitterNodeFactory = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n\n    return nativeChannelSplitterNode;\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeChannelSplitterNode } from '../types';\n\nexport const wrapChannelSplitterNode = (channelSplitterNode: TNativeChannelSplitterNode): void => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n","import { TNativeAudioNode } from '../types';\n\nexport const interceptConnections = <T extends object>(\n    original: T,\n    interceptor: TNativeAudioNode\n): T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] } => {\n    (<T & { connect: TNativeAudioNode['connect'] }>original).connect = interceptor.connect.bind(interceptor);\n\n    (<T & { disconnect: TNativeAudioNode['disconnect'] }>original).disconnect = interceptor.disconnect.bind(interceptor);\n\n    return <T & { connect: TNativeAudioNode['connect']; disconnect: TNativeAudioNode['disconnect'] }>original;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDelayNodeFactory } from '../types';\n\nexport const createNativeDelayNode: TNativeDelayNodeFactory = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n\n    return nativeDelayNode;\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeGainNodeFactory } from '../types';\n\nexport const createNativeGainNode: TNativeGainNodeFactory = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n\n    return nativeGainNode;\n};\n","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeIIRFilterNode, TNativeIIRFilterNodeFakerFactoryFactory } from '../types';\n\nfunction divide(a: [number, number], b: [number, number]): [number, number] {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nfunction multiply(a: [number, number], b: [number, number]): [number, number] {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nfunction evaluatePolynomial(coefficient: Float64Array, z: [number, number]): [number, number] {\n    let result: [number, number] = [0, 0];\n\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n\n        result[0] += coefficient[i];\n    }\n\n    return result;\n}\n\nexport const createNativeIIRFilterNodeFakerFactory: TNativeIIRFilterNodeFakerFactoryFactory = (\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n\n        const bufferLength = 32;\n        const bufferIndexes: number[] = [];\n        const xBuffers: Float32Array[] = [];\n        const yBuffers: Float32Array[] = [];\n\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event: AudioProcessingEvent) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n\n            const numberOfChannels = inputBuffer.numberOfChannels;\n\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n\n                bufferIndexes[i] = filterBuffer(\n                    convertedFeedback,\n                    feedbackLength,\n                    convertedFeedforward,\n                    feedforwardLength,\n                    minLength,\n                    xBuffers[i],\n                    yBuffers[i],\n                    bufferIndexes[i],\n                    bufferLength,\n                    input,\n                    output\n                );\n            }\n        };\n\n        const nyquist = nativeContext.sampleRate / 2;\n\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeIIRFilterNode['channelCountMode'] {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeIIRFilterNode['channelInterpretation'] {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context(): TNativeIIRFilterNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs(): number {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args: any[]): void {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n\n                const length = frequencyHz.length;\n\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z: [number, number] = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n","import { TCacheTestResultFactory } from '../types';\n\nexport const createCacheTestResult: TCacheTestResultFactory = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n\n        const ongoingTest = ongoingTests.get(tester);\n\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n\n        try {\n            const synchronousTestResult = test();\n\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                        ongoingTests.delete(tester);\n                        testResults.set(tester, finalTestResult);\n\n                        return finalTestResult;\n                    });\n            }\n\n            testResults.set(tester, synchronousTestResult);\n\n            return synchronousTestResult;\n        } catch {\n            testResults.set(tester, false);\n\n            return false;\n        }\n    };\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TContext, TGetNativeContextFactory, TNativeAudioContext, TNativeOfflineAudioContext } from '../types';\nimport { createInvalidStateError } from './invalid-state-error';\n\nexport const createGetNativeContext: TGetNativeContextFactory = (contextStore) => {\n    return <T extends TContext>(\n        context: T\n    ): T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext => {\n        const nativeContext = contextStore.get(context);\n\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n\n        return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? TNativeOfflineAudioContext : TNativeAudioContext>(\n            nativeContext\n        );\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TActiveInputConnection, TAddAudioNodeConnectionsFactory, TContext, TNativeAudioNode } from '../types';\n\nexport const createAddAudioNodeConnections: TAddAudioNodeConnectionsFactory = (audioNodeConnectionsStore) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        audioNodeRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioNodeRenderer<T, IAudioNode<T>> : null,\n        nativeAudioNode: TNativeAudioNode\n    ) => {\n        const activeInputs = [];\n\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set<TActiveInputConnection<T>>());\n        }\n\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n","import { TConvertNumberToUnsignedLongFactory } from '../types';\n\nexport const createConvertNumberToUnsignedLong: TConvertNumberToUnsignedLongFactory = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n\n        return unit32Array[0];\n    };\n};\n","import { IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAddAudioParamConnectionsFactory, TContext } from '../types';\n\nexport const createAddAudioParamConnections: TAddAudioParamConnectionsFactory = (audioParamConnectionsStore) => {\n    return <T extends TContext>(\n        audioParam: IAudioParam,\n        audioParamRenderer: T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null\n    ) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n","import { TNativeScriptProcessorNodeFactory } from '../types';\n\nexport const createNativeScriptProcessorNode: TNativeScriptProcessorNodeFactory = (\n    nativeContext,\n    bufferSize,\n    numberOfInputChannels,\n    numberOfOutputChannels\n) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n","import { TNotSupportedErrorFactory } from '../types';\n\nexport const createNotSupportedError: TNotSupportedErrorFactory = () => new DOMException('', 'NotSupportedError');\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IAudioBuffer, IOfflineAudioContext, IOfflineAudioContextOptions } from '../interfaces';\nimport { TAudioContextState, TNativeOfflineAudioContext, TOfflineAudioContextConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n} as const;\n\nexport const createOfflineAudioContextConstructor: TOfflineAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor<IOfflineAudioContext> implements IOfflineAudioContext {\n        private _length: number;\n\n        private _nativeOfflineAudioContext: TNativeOfflineAudioContext;\n\n        private _state: null | TAudioContextState;\n\n        constructor(options: IOfflineAudioContextOptions);\n        constructor(numberOfChannels: number, length: number, sampleRate: number);\n        constructor(a: number | IOfflineAudioContextOptions, b?: number, c?: number) {\n            let options: IOfflineAudioContextOptions;\n\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            } else if (typeof a === 'object') {\n                options = a;\n            } else {\n                throw new Error('The given parameters are not valid.');\n            }\n\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener(\n                    'statechange',\n                    (() => {\n                        let i = 0;\n\n                        const delayStateChangeEvent = (event: Event) => {\n                            if (this._state === 'running') {\n                                if (i > 0) {\n                                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                    event.stopImmediatePropagation();\n\n                                    this._waitForThePromiseToSettle(event);\n                                } else {\n                                    i += 1;\n                                }\n                            }\n                        };\n\n                        return delayStateChangeEvent;\n                    })()\n                );\n            }\n\n            super(nativeOfflineAudioContext, numberOfChannels);\n\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n\n        get length(): number {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n\n            return this._nativeOfflineAudioContext.length;\n        }\n\n        get state(): TAudioContextState {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n\n        public startRendering(): Promise<IAudioBuffer> {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n\n            this._state = 'running';\n\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        private _waitForThePromiseToSettle(event: Event): void {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            } else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nimport {\n    IAudioParam,\n    IAudioScheduledSourceNodeEventMap,\n    IMinimalOfflineAudioContext,\n    IOscillatorNode,\n    IOscillatorNodeRenderer,\n    IOscillatorOptions\n} from '../interfaces';\nimport {\n    TContext,\n    TEventHandler,\n    TNativeOscillatorNode,\n    TOscillatorNodeConstructorFactory,\n    TOscillatorNodeRenderer,\n    TOscillatorType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n} as const;\n\nexport const createOscillatorNodeConstructor: TOscillatorNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n) => {\n    return class OscillatorNode<T extends TContext>\n        extends audioNodeConstructor<T, IAudioScheduledSourceNodeEventMap>\n        implements IOscillatorNode<T>\n    {\n        private _detune: IAudioParam;\n\n        private _frequency: IAudioParam;\n\n        private _nativeOscillatorNode: TNativeOscillatorNode;\n\n        private _onended: null | TEventHandler<this>;\n\n        private _oscillatorNodeRenderer: TOscillatorNodeRenderer<T>;\n\n        constructor(context: T, options?: Partial<IOscillatorOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = <TOscillatorNodeRenderer<T>>(isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                (<IOscillatorNodeRenderer<IMinimalOfflineAudioContext>>this._oscillatorNodeRenderer).periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n\n        get detune(): IAudioParam {\n            return this._detune;\n        }\n\n        get frequency(): IAudioParam {\n            return this._frequency;\n        }\n\n        get onended(): null | TEventHandler<this> {\n            return this._onended;\n        }\n\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeOscillatorNode.onended = wrappedListener;\n\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n\n        get type(): TOscillatorType {\n            return this._nativeOscillatorNode.type;\n        }\n\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n\n        public setPeriodicWave(periodicWave: PeriodicWave): void {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n\n        public start(when = 0): void {\n            this._nativeOscillatorNode.start(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n\n        public stop(when = 0): void {\n            this._nativeOscillatorNode.stop(when);\n\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IPannerNode, IPannerOptions } from '../interfaces';\nimport {\n    TAudioNodeRenderer,\n    TContext,\n    TDistanceModelType,\n    TNativePannerNode,\n    TPannerNodeConstructorFactory,\n    TPanningModelType\n} from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n} as const;\n\nexport const createPannerNodeConstructor: TPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class PannerNode<T extends TContext> extends audioNodeConstructor<T> implements IPannerNode<T> {\n        private _nativePannerNode: TNativePannerNode;\n\n        private _orientationX: IAudioParam;\n\n        private _orientationY: IAudioParam;\n\n        private _orientationZ: IAudioParam;\n\n        private _positionX: IAudioParam;\n\n        private _positionY: IAudioParam;\n\n        private _positionZ: IAudioParam;\n\n        constructor(context: T, options?: Partial<IPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createPannerNodeRenderer() : null);\n\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._orientationZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.orientationZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionX = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionX,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionY = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionY,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n            this._positionZ = createAudioParam(\n                this,\n                isOffline,\n                nativePannerNode.positionZ,\n                MOST_POSITIVE_SINGLE_FLOAT,\n                MOST_NEGATIVE_SINGLE_FLOAT\n            );\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get coneInnerAngle(): number {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n\n        get coneOuterAngle(): number {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n\n        get coneOuterGain(): number {\n            return this._nativePannerNode.coneOuterGain;\n        }\n\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n\n        get distanceModel(): TDistanceModelType {\n            return this._nativePannerNode.distanceModel;\n        }\n\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n\n        get maxDistance(): number {\n            return this._nativePannerNode.maxDistance;\n        }\n\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n\n        get orientationX(): IAudioParam {\n            return this._orientationX;\n        }\n\n        get orientationY(): IAudioParam {\n            return this._orientationY;\n        }\n\n        get orientationZ(): IAudioParam {\n            return this._orientationZ;\n        }\n\n        get panningModel(): TPanningModelType {\n            return this._nativePannerNode.panningModel;\n        }\n\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n\n        get positionX(): IAudioParam {\n            return this._positionX;\n        }\n\n        get positionY(): IAudioParam {\n            return this._positionY;\n        }\n\n        get positionZ(): IAudioParam {\n            return this._positionZ;\n        }\n\n        get refDistance(): number {\n            return this._nativePannerNode.refDistance;\n        }\n\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n\n        get rolloffFactor(): number {\n            return this._nativePannerNode.rolloffFactor;\n        }\n\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n","import { IPeriodicWave, IPeriodicWaveOptions } from '../interfaces';\nimport { TContext, TPeriodicWaveConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    disableNormalization: false\n} as const;\n\nexport const createPeriodicWaveConstructor: TPeriodicWaveConstructorFactory = (\n    createNativePeriodicWave,\n    getNativeContext,\n    periodicWaveStore,\n    sanitizePeriodicWaveOptions\n) => {\n    return class PeriodicWave<T extends TContext> implements IPeriodicWave {\n        constructor(context: T, options?: Partial<IPeriodicWaveOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n\n            periodicWaveStore.add(periodicWave);\n\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n\n        public static [Symbol.hasInstance](instance: unknown): boolean {\n            return (\n                (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(<any>instance)\n            );\n        }\n    };\n};\n","import { IAudioParam, IStereoPannerNode, IStereoPannerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TStereoPannerNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n} as const;\n\nexport const createStereoPannerNodeConstructor: TStereoPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class StereoPannerNode<T extends TContext> extends audioNodeConstructor<T> implements IStereoPannerNode<T> {\n        private _pan: IAudioParam;\n\n        constructor(context: T, options?: Partial<IStereoPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createStereoPannerNodeRenderer() : null);\n\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n\n        get pan(): IAudioParam {\n            return this._pan;\n        }\n    };\n};\n","import { TUnknownErrorFactory } from '../types';\n\nexport const createUnknownError: TUnknownErrorFactory = () => new DOMException('', 'UnknownError');\n","import { IWaveShaperNode, IWaveShaperOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TNativeWaveShaperNode, TOverSampleType, TWaveShaperNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n} as const;\n\nexport const createWaveShaperNodeConstructor: TWaveShaperNodeConstructorFactory = (\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class WaveShaperNode<T extends TContext> extends audioNodeConstructor<T> implements IWaveShaperNode<T> {\n        private _isCurveNullified: boolean;\n\n        private _nativeWaveShaperNode: TNativeWaveShaperNode;\n\n        constructor(context: T, options?: Partial<IWaveShaperOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createWaveShaperNodeRenderer() : null);\n\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n\n        get curve(): null | Float32Array {\n            if (this._isCurveNullified) {\n                return null;\n            }\n\n            return this._nativeWaveShaperNode.curve;\n        }\n\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            } else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n\n        get oversample(): TOverSampleType {\n            return this._nativeWaveShaperNode.oversample;\n        }\n\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n","import { TGetFirstSampleFunction } from '../types';\n\nexport const getFirstSample: TGetFirstSampleFunction = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n\n    return buffer[0];\n};\n","import { TIsDCCurveFunction } from '../types';\n\nexport const isDCCurve: TIsDCCurveFunction = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n\n    const length = curve.length;\n\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n","import { TOverwriteAccessorsFunction } from '../types';\n\nexport const overwriteAccessors: TOverwriteAccessorsFunction = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n\n    const { get, set } = <Required<PropertyDescriptor>>Object.getOwnPropertyDescriptor(prototype, property);\n\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n\n        return true;\n    } catch {\n        return false;\n    }\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n","import { TNativeAudioNode, TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction } from '../types';\nimport { interceptConnections } from './intercept-connections';\n\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls: TWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunction = (\n    nativeAudioScheduledSourceNode,\n    nativeContext\n) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            (<(destinaton: TNativeAudioNode) => void>disconnect).call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                } catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            } else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n","import { TWrapEventListenerFunction } from '../types';\n\nexport const wrapEventListener: TWrapEventListenerFunction = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n","import {\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent\n} from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport {\n    AUDIO_NODE_CONNECTIONS_STORE,\n    AUDIO_NODE_STORE,\n    AUDIO_PARAM_CONNECTIONS_STORE,\n    AUDIO_PARAM_STORE,\n    CONTEXT_STORE,\n    CYCLE_COUNTERS\n} from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\nimport {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioContext,\n    IAudioNode,\n    IAudioWorkletNode,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode,\n    IMinimalAudioContext,\n    IMinimalOfflineAudioContext,\n    IOfflineAudioContext,\n    IOfflineAudioContextConstructor,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IStereoPannerNode,\n    IWaveShaperNode\n} from './interfaces';\nimport {\n    TActiveAudioWorkletNodeInputsStore,\n    TAddAudioWorkletModuleFunction,\n    TAnalyserNodeConstructor,\n    TAudioBufferConstructor,\n    TAudioBufferSourceNodeConstructor,\n    TAudioBufferStore,\n    TAudioContextConstructor,\n    TAudioParamAudioNodeStore,\n    TAudioWorkletNodeConstructor,\n    TBackupOfflineAudioContextStore,\n    TBiquadFilterNodeConstructor,\n    TChannelMergerNodeConstructor,\n    TChannelSplitterNodeConstructor,\n    TConstantSourceNodeConstructor,\n    TContext,\n    TConvolverNodeConstructor,\n    TDecodeAudioDataFunction,\n    TDelayNodeConstructor,\n    TDynamicsCompressorNodeConstructor,\n    TGainNodeConstructor,\n    TIIRFilterNodeConstructor,\n    TMediaElementAudioSourceNodeConstructor,\n    TMediaStreamAudioDestinationNodeConstructor,\n    TMediaStreamAudioSourceNodeConstructor,\n    TMediaStreamTrackAudioSourceNodeConstructor,\n    TMinimalAudioContextConstructor,\n    TMinimalOfflineAudioContextConstructor,\n    TOscillatorNodeConstructor,\n    TPannerNodeConstructor,\n    TPeriodicWaveConstructor,\n    TStereoPannerNodeConstructor,\n    TUnrenderedAudioWorkletNodeStore,\n    TWaveShaperNodeConstructor\n} from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore: TAudioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(\n    createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE),\n    createAddConnectionToAudioNode(\n        addActiveInputConnectionToAudioNode,\n        addPassiveInputConnectionToAudioNode,\n        connectNativeAudioNodeToNativeAudioNode,\n        deleteActiveInputConnectionToAudioNode,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getAudioNodeTailTime,\n        getEventListenersOfAudioNode,\n        getNativeAudioNode,\n        insertElementInSet,\n        isActiveAudioNode,\n        isPartOfACycle,\n        isPassiveAudioNode\n    ),\n    cacheTestResult,\n    createIncrementCycleCounterFactory(\n        CYCLE_COUNTERS,\n        disconnectNativeAudioNodeFromNativeAudioNode,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        isActiveAudioNode\n    ),\n    createIndexSizeError,\n    createInvalidAccessError,\n    createNotSupportedError,\n    createDecrementCycleCounter(\n        connectNativeAudioNodeToNativeAudioNode,\n        CYCLE_COUNTERS,\n        getAudioNodeConnections,\n        getNativeAudioNode,\n        getNativeAudioParam,\n        getNativeContext,\n        isActiveAudioNode,\n        isNativeOfflineAudioContext\n    ),\n    createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey),\n    eventTargetConstructor,\n    getNativeContext,\n    isNativeAudioContext,\n    isNativeAudioNode,\n    isNativeAudioParam,\n    isNativeOfflineAudioContext,\n    nativeAudioWorkletNodeConstructor\n);\nconst analyserNodeConstructor: TAnalyserNodeConstructor = createAnalyserNodeConstructor(\n    audioNodeConstructor,\n    createAnalyserNodeRenderer,\n    createIndexSizeError,\n    createNativeAnalyserNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\n\ntype analyserNodeConstructor<T extends TContext> = IAnalyserNode<T>;\n\nexport { analyserNodeConstructor as AnalyserNode };\n\nconst audioBufferStore: TAudioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor: TAudioBufferConstructor = createAudioBufferConstructor(\n    audioBufferStore,\n    cacheTestResult,\n    createNotSupportedError,\n    nativeAudioBufferConstructor,\n    nativeOfflineAudioContextConstructor,\n    createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor),\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\ntype audioBufferConstructor = IAudioBuffer;\n\nexport { audioBufferConstructor as AudioBuffer };\n\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClamping,\n    createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors),\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst createAudioParam = createAudioParamFactory(\n    createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE),\n    audioParamAudioNodeStore,\n    AUDIO_PARAM_STORE,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n);\nconst audioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioBufferSourceNodeRenderer,\n    createAudioParam,\n    createInvalidStateError,\n    createNativeAudioBufferSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\n\ntype audioBufferSourceNodeConstructor<T extends TContext> = IAudioBufferSourceNode<T>;\n\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\n\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors),\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor: TBiquadFilterNodeConstructor = createBiquadFilterNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createBiquadFilterNodeRenderer,\n    createInvalidAccessError,\n    createNativeBiquadFilterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelMergerNodeConstructor: TChannelMergerNodeConstructor = createChannelMergerNodeConstructor(\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst channelSplitterNodeConstructor: TChannelSplitterNodeConstructor = createChannelSplitterNodeConstructor(\n    audioNodeConstructor,\n    createChannelSplitterNodeRenderer,\n    createNativeChannelSplitterNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    sanitizeChannelSplitterOptions\n);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst constantSourceNodeConstructor: TConstantSourceNodeConstructor = createConstantSourceNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createConstantSourceNodeRenderer,\n    createNativeConstantSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst convolverNodeConstructor: TConvolverNodeConstructor = createConvolverNodeConstructor(\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst delayNodeConstructor: TDelayNodeConstructor = createDelayNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDelayNodeRenderer,\n    createNativeDelayNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst dynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createDynamicsCompressorNodeRenderer,\n    createNativeDynamicsCompressorNode,\n    createNotSupportedError,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createGainNodeRenderer = createGainNodeRendererFactory(\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst gainNodeConstructor: TGainNodeConstructor = createGainNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(\n    createInvalidAccessError,\n    createInvalidStateError,\n    createNativeScriptProcessorNode,\n    createNotSupportedError\n);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor)\n);\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor: TIIRFilterNodeConstructor = createIIRFilterNodeConstructor(\n    audioNodeConstructor,\n    createNativeIIRFilterNode,\n    createIIRFilterNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createAudioListener = createAudioListenerFactory(\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    getFirstSample,\n    isNativeOfflineAudioContext,\n    overwriteAccessors\n);\nconst unrenderedAudioWorkletNodeStore: TUnrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst oscillatorNodeConstructor: TOscillatorNodeConstructor = createOscillatorNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeOscillatorNode,\n    createOscillatorNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    wrapEventListener\n);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getFirstSample,\n    monitorConnections\n);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst pannerNodeConstructor: TPannerNodeConstructor = createPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativePannerNode,\n    createPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor: TPeriodicWaveConstructor = createPeriodicWaveConstructor(\n    createNativePeriodicWave,\n    getNativeContext,\n    new WeakSet(),\n    sanitizePeriodicWaveOptions\n);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n);\nconst stereoPannerNodeConstructor: TStereoPannerNodeConstructor = createStereoPannerNodeConstructor(\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n);\nconst waveShaperNodeConstructor: TWaveShaperNodeConstructor = createWaveShaperNodeConstructor(\n    audioNodeConstructor,\n    createInvalidStateError,\n    createNativeWaveShaperNode,\n    createWaveShaperNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore: TBackupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n);\n\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule: undefined | TAddAudioWorkletModuleFunction = isSecureContext\n    ? createAddAudioWorkletModule(\n          cacheTestResult,\n          createNotSupportedError,\n          createEvaluateSource(window),\n          exposeCurrentFrameAndCurrentTime,\n          createFetchSource(createAbortError),\n          getNativeContext,\n          getOrCreateBackupOfflineAudioContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          new WeakMap(),\n          new WeakMap(),\n          createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n          // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n          <NonNullable<typeof window>>window\n      )\n    : undefined;\n\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\n\nexport const decodeAudioData: TDecodeAudioDataFunction = createDecodeAudioData(\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    new WeakSet(),\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\n\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n);\nconst mediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructor =\n    createMediaStreamAudioDestinationNodeConstructor(\n        audioNodeConstructor,\n        createNativeMediaStreamAudioDestinationNode,\n        getNativeContext,\n        isNativeOfflineAudioContext\n    );\nconst mediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n);\nconst mediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructor =\n    createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor: TAudioContextConstructor = createAudioContextConstructor(\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n);\n\ntype audioContextConstructor = IAudioContext;\n\nexport { audioContextConstructor as AudioContext };\n\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore: TActiveAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(\n    connectAudioParam,\n    connectMultipleOutputs,\n    createNativeAudioBufferSourceNode,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    deleteUnrenderedAudioWorkletNode,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getNativeAudioNode,\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor: undefined | TAudioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(\n          addUnrenderedAudioWorkletNode,\n          audioNodeConstructor,\n          createAudioParam,\n          createAudioWorkletNodeRenderer,\n          createNativeAudioWorkletNode,\n          getAudioNodeConnections,\n          getBackupOfflineAudioContext,\n          getNativeContext,\n          isNativeOfflineAudioContext,\n          nativeAudioWorkletNodeConstructor,\n          sanitizeAudioWorkletNodeOptions,\n          setActiveAudioWorkletNodeInputs,\n          testAudioWorkletNodeOptionsClonability,\n          wrapEventListener\n      )\n    : undefined;\n\ntype audioWorkletNodeConstructor<T extends TContext> = undefined | IAudioWorkletNode<T>;\n\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\n\ntype biquadFilterNodeConstructor<T extends TContext> = IBiquadFilterNode<T>;\n\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\n\ntype channelMergerNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelMergerNodeConstructor as ChannelMergerNode };\n\ntype channelSplitterNodeConstructor<T extends TContext> = IAudioNode<T>;\n\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\n\ntype constantSourceNodeConstructor<T extends TContext> = IConstantSourceNode<T>;\n\nexport { convolverNodeConstructor as ConvolverNode };\n\ntype convolverNodeConstructor<T extends TContext> = IConvolverNode<T>;\n\nexport { constantSourceNodeConstructor as ConstantSourceNode };\n\ntype delayNodeConstructor<T extends TContext> = IDelayNode<T>;\n\nexport { delayNodeConstructor as DelayNode };\n\ntype dynamicsCompressorNodeConstructor<T extends TContext> = IDynamicsCompressorNode<T>;\n\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\n\ntype gainNodeConstructor<T extends TContext> = IGainNode<T>;\n\nexport { gainNodeConstructor as GainNode };\n\ntype iIRFilterNodeConstructor<T extends TContext> = IIIRFilterNode<T>;\n\nexport { iIRFilterNodeConstructor as IIRFilterNode };\n\ntype mediaElementAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaElementAudioSourceNode<T>;\n\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\n\ntype mediaStreamAudioDestinationNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioDestinationNode<T>;\n\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\n\ntype mediaStreamAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamAudioSourceNode<T>;\n\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\n\ntype mediaStreamTrackAudioSourceNodeConstructor<T extends IAudioContext | IMinimalAudioContext> = IMediaStreamTrackAudioSourceNode<T>;\n\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\n\nconst minimalAudioContextConstructor: TMinimalAudioContextConstructor = createMinimalAudioContextConstructor(\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n);\n\ntype minimalAudioContextConstructor = IMinimalAudioContext;\n\nexport { minimalAudioContextConstructor as MinimalAudioContext };\n\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n);\nconst startRendering = createStartRendering(\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n);\nconst minimalOfflineAudioContextConstructor: TMinimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    minimalBaseAudioContextConstructor,\n    startRendering\n);\n\ntype minimalOfflineAudioContextConstructor = IMinimalOfflineAudioContext;\n\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\n\nconst offlineAudioContextConstructor: IOfflineAudioContextConstructor = createOfflineAudioContextConstructor(\n    baseAudioContextConstructor,\n    cacheTestResult,\n    createInvalidStateError,\n    createNativeOfflineAudioContext,\n    startRendering\n);\n\ntype offlineAudioContextConstructor = IOfflineAudioContext;\n\nexport { offlineAudioContextConstructor as OfflineAudioContext };\n\ntype oscillatorNodeConstructor<T extends TContext> = IOscillatorNode<T>;\n\nexport { oscillatorNodeConstructor as OscillatorNode };\n\ntype pannerNodeConstructor<T extends TContext> = IPannerNode<T>;\n\nexport { pannerNodeConstructor as PannerNode };\n\ntype periodicWaveConstructor = IPeriodicWave;\n\nexport { periodicWaveConstructor as PeriodicWave };\n\ntype stereoPannerNodeConstructor<T extends TContext> = IStereoPannerNode<T>;\n\nexport { stereoPannerNodeConstructor as StereoPannerNode };\n\ntype waveShaperNodeConstructor<T extends TContext> = IWaveShaperNode<T>;\n\nexport { waveShaperNodeConstructor as WaveShaperNode };\n\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\n\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\n\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\n\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\n\nexport const isSupported = () =>\n    createIsSupportedPromise(\n        cacheTestResult,\n        createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor),\n        createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioContextOptionsSupport(nativeAudioContextConstructor),\n        createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor),\n        createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor),\n        createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor),\n        createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor),\n        testDomExceptionConstructorSupport,\n        createTestIsSecureContextSupport(window),\n        createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor),\n        createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor),\n        testTransferablesSupport\n    );\n","import { TAddActiveInputConnectionToAudioNodeFactory } from '../types/add-active-input-connection-to-audio-node-factory';\n\nexport const createAddActiveInputConnectionToAudioNode: TAddActiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(\n            activeInputs[input],\n            [source, output, eventListener],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output,\n            ignoreDuplicates\n        );\n    };\n};\n","import { TAddPassiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createAddPassiveInputConnectionToAudioNode: TAddPassiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        } else {\n            insertElementInSet(\n                passiveInputConnections,\n                [output, input, eventListener],\n                (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input,\n                ignoreDuplicates\n            );\n        }\n    };\n};\n","import { TDeleteActiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createDeleteActiveInputConnectionToAudioNode: TDeleteActiveInputConnectionToAudioNodeFactory = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(\n            activeInputs[input],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n        );\n    };\n};\n","import { TGetAudioNodeTailTimeFactory } from '../types';\n\nexport const createGetAudioNodeTailTime: TGetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode) => audioNodeTailTimeStore.get(audioNode) ?? 0;\n};\n","import { TWindow, TWindowFactory } from '../types';\n\nexport const createWindow: TWindowFactory = () => (typeof window === 'undefined' ? null : <TWindow>window);\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nimport { TNativeAnalyserNodeFactoryFactory } from '../types';\n\nexport const createNativeAnalyserNodeFactory: TNativeAnalyserNodeFactoryFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (\n            !cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () =>\n                testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode)\n            )\n        ) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n\n        return nativeAnalyserNode;\n    };\n};\n","import { TNativeAnalyserNode } from '../types';\n\nexport const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode: TNativeAnalyserNode): void => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array: Float32Array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n\n        return array;\n    };\n};\n","import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport { TRenderInputsOfAudioNodeFactory } from '../types';\n\nexport const createRenderInputsOfAudioNode: TRenderInputsOfAudioNodeFactory = (\n    getAudioNodeConnections,\n    getAudioNodeRenderer,\n    isPartOfACycle\n) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        await Promise.all(\n            audioNodeConnections.activeInputs\n                .map((connections, input) =>\n                    Array.from(connections).map(async ([source, output]) => {\n                        const audioNodeRenderer = getAudioNodeRenderer(source);\n                        const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n                        const destination = <IAudioDestinationNode<typeof audioNode.context>>audioNode.context.destination;\n\n                        if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                            renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n                        }\n                    })\n                )\n                .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], [])\n        );\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAnalyserNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAnalyserNodeRendererFactoryFactory, TNativeAnalyserNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAnalyserNodeRendererFactory: TAnalyserNodeRendererFactoryFactory = (\n    createNativeAnalyserNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAnalyserNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAnalyserNode>();\n\n        const createAnalyserNode = async (proxy: IAnalyserNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode<T, TNativeAnalyserNode>(proxy);\n\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n\n            return nativeAnalyserNode;\n        };\n\n        return {\n            render(proxy: IAnalyserNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAnalyserNode> {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TNativeOfflineAudioContextConstructorFactory } from '../types';\n\nexport const createNativeOfflineAudioContextConstructor: TNativeOfflineAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? (<any>window).webkitOfflineAudioContext : null;\n};\n","import { TIsNativeOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsNativeOfflineAudioContext: TIsNativeOfflineAudioContextFactory = (nativeOfflineAudioContextConstructor) => {\n    return (anything): anything is TNativeOfflineAudioContext => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n","import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n","import { TNativeAudioContextConstructorFactory } from '../types';\n\nexport const createNativeAudioContextConstructor: TNativeAudioContextConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n\n    return window.hasOwnProperty('webkitAudioContext') ? (<any>window).webkitAudioContext : null;\n};\n","import { TIsNativeAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeAudioContext: TIsNativeAudioContextFactory = (nativeAudioContextConstructor) => {\n    return (anything): anything is TNativeAudioContext => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n","import { TIsNativeAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsNativeAudioNode: TIsNativeAudioNodeFactory = (window) => {\n    return (anything): anything is TNativeAudioNode => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n","import { TIsNativeAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsNativeAudioParam: TIsNativeAudioParamFactory = (window) => {\n    return (anything): anything is TNativeAudioParam => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n","import { TNativeAudioWorkletNodeConstructorFactory } from '../types';\n\nexport const createNativeAudioWorkletNodeConstructor: TNativeAudioWorkletNodeConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { IAudioNode } from '../interfaces';\nimport { TAddConnectionToAudioNodeFactory, TContext, TInternalStateEventListener } from '../types';\n\nexport const createAddConnectionToAudioNode: TAddConnectionToAudioNodeFactory = (\n    addActiveInputConnectionToAudioNode,\n    addPassiveInputConnectionToAudioNode,\n    connectNativeAudioNodeToNativeAudioNode,\n    deleteActiveInputConnectionToAudioNode,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getAudioNodeTailTime,\n    getEventListenersOfAudioNode,\n    getNativeAudioNode,\n    insertElementInSet,\n    isActiveAudioNode,\n    isPartOfACycle,\n    isPassiveAudioNode\n) => {\n    const tailTimeTimeoutIds = new WeakMap<IAudioNode<TContext>, number>();\n\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n\n        const eventListener: TInternalStateEventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            } else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n\n                const tailTime = getAudioNodeTailTime(destination);\n\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                } else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n\n                    tailTimeTimeoutIds.set(\n                        destination,\n                        setTimeout(() => {\n                            if (isActiveAudioNode(destination)) {\n                                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                            }\n                        }, tailTime * 1000)\n                    );\n                }\n            }\n        };\n\n        if (\n            insertElementInSet(\n                outputs,\n                [destination, output, input],\n                (outputConnection) =>\n                    outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input,\n                true\n            )\n        ) {\n            eventListeners.add(eventListener);\n\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            } else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n\n            return true;\n        }\n\n        return false;\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TIncrementCycleCounterFactoryFactory } from '../types';\n\nexport const createIncrementCycleCounterFactory: TIncrementCycleCounterFactoryFactory = (\n    cycleCounters,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    isActiveAudioNode\n) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                            disconnectNativeAudioNodeFromNativeAudioNode(\n                                nativeSourceAudioNode,\n                                nativeDestinationAudioNode,\n                                output[1],\n                                output[2]\n                            );\n                        } else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n\n                cycleCounters.set(audioNode, count);\n            } else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TDecrementCycleCounterFactory } from '../types';\n\nexport const createDecrementCycleCounter: TDecrementCycleCounterFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    cycleCounters,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    getNativeContext,\n    isActiveAudioNode,\n    isNativeOfflineAudioContext\n) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    } else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        } else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nimport { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext, TDetectCyclesFactory } from '../types';\n\nexport const createDetectCycles: TDetectCyclesFactory = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles<T extends TContext>(chain: IAudioNode<T>[], nextLink: IAudioNode<T> | IAudioParam): IAudioNode<T>[][] {\n        const audioNode = isAudioNode(nextLink) ? nextLink : <IAudioNode<T>>getValueForKey(audioParamAudioNodeStore, nextLink);\n\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n\n        const { outputs } = getAudioNodeConnections(audioNode);\n\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n","import { IAudioNode, IDelayNode } from '../interfaces';\nimport { TContext } from '../types';\n\nexport const isDelayNode = <T extends TContext>(audioNode: IAudioNode<T>): audioNode is IDelayNode<T> => {\n    return 'delayTime' in audioNode;\n};\n","import { TNativeAudioBufferConstructorFactory } from '../types';\n\nexport const createNativeAudioBufferConstructor: TNativeAudioBufferConstructorFactory = (window) => {\n    if (window === null) {\n        return null;\n    }\n\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n\n    return null;\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethods: TWrapAudioBufferCopyChannelMethodsFactory = (\n    convertNumberToUnsignedLong,\n    createIndexSizeError\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n","import { TNativeAudioBuffer, TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory } from '../types';\n\nexport const createWrapAudioBufferCopyChannelMethodsOutOfBounds: TWrapAudioBufferCopyChannelMethodsOutOfBoundsFactory = (\n    convertNumberToUnsignedLong\n) => {\n    return (audioBuffer: TNativeAudioBuffer): void => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source: Float32Array, channelNumberAsNumber: number, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n","import { TTestAudioBufferConstructorSupportFactory } from '../types';\n\n// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport: TTestAudioBufferConstructorSupportFactory = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        } catch {\n            return false;\n        }\n\n        return true;\n    };\n};\n","import { TAddSilentConnectionFactory } from '../types';\n\nexport const createAddSilentConnection: TAddSilentConnectionFactory = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n","import { IAudioParam, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TNativeAudioParam, TNativeOfflineAudioContext, TRenderInputsOfAudioParamFactory } from '../types';\n\nexport const createRenderInputsOfAudioParam: TRenderInputsOfAudioParamFactory = (\n    getAudioNodeRenderer,\n    getAudioParamConnections,\n    isPartOfACycle\n) => {\n    return async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioParam: IAudioParam,\n        nativeOfflineAudioContext: TNativeOfflineAudioContext,\n        nativeAudioParam: TNativeAudioParam\n    ): Promise<void> => {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        await Promise.all(\n            Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n                const audioNodeRenderer = getAudioNodeRenderer(source);\n                const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n\n                if (!isPartOfACycle(source)) {\n                    renderedNativeAudioNode.connect(nativeAudioParam, output);\n                }\n            })\n        );\n    };\n};\n","import { TConnectAudioParamFactory } from '../types';\n\nexport const createConnectAudioParam: TConnectAudioParamFactory = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeAudioBufferSourceNodeFactory: TNativeAudioBufferSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport,\n    testAudioBufferSourceNodeStartMethodOffsetClampingSupport,\n    testAudioBufferSourceNodeStopMethodNullifiedBufferSupport,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioBufferSourceNodeStartMethodOffsetClampling,\n    wrapAudioBufferSourceNodeStopMethodNullifiedBuffer,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n\n        // Bug #149: Safari does not yet support the detune AudioParam.\n\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () =>\n                testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () =>\n                testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (\n            !cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () =>\n                testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext)\n            )\n        ) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n\n        return nativeAudioBufferSourceNode;\n    };\n};\n","import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n\n        return (when = 0, offset = 0, duration?: number) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.start();\n    } catch {\n        return true;\n    }\n\n    return false;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.stop();\n    } catch {\n        return false;\n    }\n\n    return true;\n};\n","import { TNativeAudioBufferSourceNode } from '../types';\n\nexport const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode: TNativeAudioBufferSourceNode): void => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            } else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n","import { TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory } from '../types';\n\nexport const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer: TWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactory = (\n    overwriteAccessors\n) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n\n        overwriteAccessors(\n            nativeAudioBufferSourceNode,\n            'buffer',\n            (get) => () => {\n                const value = get.call(nativeAudioBufferSourceNode);\n\n                return value === nullifiedBuffer ? null : value;\n            },\n            (set) => (value) => {\n                return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n            }\n        );\n    };\n};\n","import { TRenderAutomationFactory } from '../types';\n\nexport const createRenderAutomation: TRenderAutomationFactory = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n\n        audioParamRenderer.replay(nativeAudioParam);\n\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n","import { IMinimalOfflineAudioContext } from '../interfaces';\nimport { TGetAudioParamRendererFactory } from '../types';\n\nexport const createGetAudioParamRenderer: TGetAudioParamRendererFactory = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections<IMinimalOfflineAudioContext>(audioParam);\n\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n\n        return audioParamConnections.renderer;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioBufferSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioBufferSourceNodeRendererFactoryFactory, TNativeAudioBufferSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createAudioBufferSourceNodeRendererFactory: TAudioBufferSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeAudioBufferSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioBufferSourceNode>();\n\n        let start: null | [number, number] | [number, number, number] = null;\n        let stop: null | number = null;\n\n        const createAudioBufferSourceNode = async (\n            proxy: IAudioBufferSourceNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode<T, TNativeAudioBufferSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            } else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n\n            return nativeAudioBufferSourceNode;\n        };\n\n        return {\n            set start(value: [number, number] | [number, number, number]) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IAudioBufferSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeAudioBufferSourceNode> {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { AutomationEventList } from 'automation-events';\nimport { IAudioNode, IAudioParam, IAudioParamRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TAudioParamFactoryFactory, TContext, TNativeAudioParam } from '../types';\n\nexport const createAudioParamFactory: TAudioParamFactoryFactory = (\n    addAudioParamConnections,\n    audioParamAudioNodeStore,\n    audioParamStore,\n    createAudioParamRenderer,\n    createCancelAndHoldAutomationEvent,\n    createCancelScheduledValuesAutomationEvent,\n    createExponentialRampToValueAutomationEvent,\n    createLinearRampToValueAutomationEvent,\n    createSetTargetAutomationEvent,\n    createSetValueAutomationEvent,\n    createSetValueCurveAutomationEvent,\n    nativeAudioContextConstructor,\n    setValueAtTimeUntilPossible\n) => {\n    return <T extends TContext>(\n        audioNode: IAudioNode<T>,\n        isAudioParamOfOfflineAudioContext: boolean,\n        nativeAudioParam: TNativeAudioParam,\n        maxValue: null | number = null,\n        minValue: null | number = null\n    ): IAudioParam => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue(): number {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue(): number {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue(): number {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value(): number {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime: number): IAudioParam {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                } else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n\n                    const currentLastEvent = Array.from(automationEventList).pop();\n\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        } else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        } else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(\n                                currentLastEvent.values,\n                                currentLastEvent.startTime,\n                                currentLastEvent.duration\n                            );\n                        }\n                    }\n                }\n\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            linearRampToValueAtTime(value: number, endTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n\n                return audioParam;\n            },\n            setTargetAtTime(target: number, startTime: number, timeConstant: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n\n                return audioParam;\n            },\n            setValueAtTime(value: number, startTime: number): IAudioParam {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n\n                return audioParam;\n            },\n            setValueCurveAtTime(values: Iterable<number>, startTime: number, duration: number): IAudioParam {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n\n                    const timeOfLastSample = lastSample / sampleRate;\n\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                } else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n\n                return audioParam;\n            }\n        };\n\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n\n        addAudioParamConnections(\n            audioParam,\n            <T extends IMinimalOfflineAudioContext | IOfflineAudioContext ? IAudioParamRenderer : null>audioParamRenderer\n        );\n\n        return audioParam;\n    };\n};\n","import { TAudioParamRendererFactory, TNativeAudioParam } from '../types';\n\nexport const createAudioParamRenderer: TAudioParamRendererFactory = (automationEventList) => {\n    return {\n        replay(audioParam: TNativeAudioParam): void {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                } else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                } else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n\n                    audioParam.setValueAtTime(value, startTime);\n                } else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                } else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n","import { TSetValueAtTimeUntilPossibleFunction } from '../types';\n\nexport const setValueAtTimeUntilPossible: TSetValueAtTimeUntilPossibleFunction = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    } catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n","import { IAudioDestinationNode } from '../interfaces';\nimport {\n    TAudioDestinationNodeConstructorFactory,\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TNativeAudioDestinationNode\n} from '../types';\n\nexport const createAudioDestinationNodeConstructor: TAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n) => {\n    return class AudioDestinationNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioDestinationNode<T> {\n        private _isNodeOfNativeOfflineAudioContext: boolean;\n\n        private _nativeAudioDestinationNode: TNativeAudioDestinationNode;\n\n        constructor(context: T, channelCount: number) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null)\n            );\n\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n\n        get maxChannelCount(): number {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n","import { IAudioDestinationNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport {\n    TAudioDestinationNodeRendererFactory,\n    TNativeAudioDestinationNode,\n    TNativeOfflineAudioContext,\n    TRenderInputsOfAudioNodeFunction\n} from '../types';\n\nexport const createAudioDestinationNodeRenderer: TAudioDestinationNodeRendererFactory = <\n    T extends IMinimalOfflineAudioContext | IOfflineAudioContext\n>(\n    renderInputsOfAudioNode: TRenderInputsOfAudioNodeFunction\n) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioDestinationNode>();\n\n    const createAudioDestinationNode = async (proxy: IAudioDestinationNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n        return nativeAudioDestinationNode;\n    };\n\n    return {\n        render(\n            proxy: IAudioDestinationNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ): Promise<TNativeAudioDestinationNode> {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n","import { TNativeAudioDestinationNode, TNativeAudioDestinationNodeFactoryFactory, TNativeGainNode } from '../types';\n\nexport const createNativeAudioDestinationNodeFactory: TNativeAudioDestinationNodeFactoryFactory = (\n    createNativeGainNode,\n    overwriteAccessors\n) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            } catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n\n        overwriteAccessors(\n            gainNode,\n            'channelCount',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n\n                try {\n                    nativeAudioDestinationNode.channelCount = value;\n                } catch (err) {\n                    // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                    if (value > nativeAudioDestinationNode.maxChannelCount) {\n                        throw err;\n                    }\n                }\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelCountMode',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelCountMode = value;\n            }\n        );\n\n        overwriteAccessors(\n            gainNode,\n            'channelInterpretation',\n            (get) => () => get.call(gainNode),\n            (set) => (value) => {\n                set.call(gainNode, value);\n                nativeAudioDestinationNode.channelInterpretation = value;\n            }\n        );\n\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n\n        return <{ maxChannelCount: TNativeAudioDestinationNode['maxChannelCount'] } & TNativeGainNode>gainNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IBiquadFilterNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TBiquadFilterNodeRendererFactoryFactory, TNativeBiquadFilterNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createBiquadFilterNodeRendererFactory: TBiquadFilterNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeBiquadFilterNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeBiquadFilterNodes = new WeakMap<TNativeOfflineAudioContext, TNativeBiquadFilterNode>();\n\n        const createBiquadFilterNode = async (proxy: IBiquadFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode<T, TNativeBiquadFilterNode>(proxy);\n\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n\n            return nativeBiquadFilterNode;\n        };\n\n        return {\n            render(proxy: IBiquadFilterNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeBiquadFilterNode> {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TSetAudioNodeTailTimeFactory } from '../types';\n\nexport const createSetAudioNodeTailTime: TSetAudioNodeTailTimeFactory = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n","import { TMonitorConnectionsFactory, TNativeAudioNode, TNativeAudioParam } from '../types';\n\nexport const createMonitorConnections: TMonitorConnectionsFactory = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set<[TNativeAudioNode, number, number] | [TNativeAudioParam, number]>();\n\n        nativeAudioNode.connect = <TNativeAudioNode['connect']>((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination: TNativeAudioNode | TNativeAudioParam, output = 0, input: number = 0): void | TNativeAudioNode => {\n                const wasDisconnected = connections.size === 0;\n\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    (<(destination: TNativeAudioNode, output?: number, input?: number) => TNativeAudioNode>connect).call(\n                        nativeAudioNode,\n                        destination,\n                        output,\n                        input\n                    );\n\n                    insertElementInSet(\n                        connections,\n                        [destination, output, input],\n                        (connection) => connection[0] === destination && connection[1] === output && connection[2] === input,\n                        true\n                    );\n\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n\n                    return destination;\n                }\n\n                connect.call(nativeAudioNode, destination, output);\n\n                insertElementInSet(\n                    connections,\n                    [destination, output],\n                    (connection) => connection[0] === destination && connection[1] === output,\n                    true\n                );\n\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n\n                return;\n            };\n        })(nativeAudioNode.connect);\n\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput?: number | TNativeAudioNode | TNativeAudioParam, output?: number, input?: number): void => {\n                const wasConnected = connections.size > 0;\n\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n\n                    connections.clear();\n                } else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    (<(output: number) => void>disconnect).call(nativeAudioNode, destinationOrOutput);\n\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                } else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        (<(destination: TNativeAudioNode, output?: number, input?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output,\n                            input\n                        );\n                    } else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        (<(destination: TNativeAudioParam, output?: number) => void>disconnect).call(\n                            nativeAudioNode,\n                            destinationOrOutput,\n                            output\n                        );\n                    }\n\n                    for (const connection of connections) {\n                        if (\n                            connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)\n                        ) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n\n                const isDisconnected = connections.size === 0;\n\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n\n        return nativeAudioNode;\n    };\n};\n","import { TWrapChannelMergerNodeFactory } from '../types';\n\nexport const createWrapChannelMergerNode: TWrapChannelMergerNodeFactory = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeChannelMergerNodeFactoryFactory } from '../types';\n\nexport const createNativeChannelMergerNodeFactory: TNativeChannelMergerNodeFactoryFactory = (\n    nativeAudioContextConstructor,\n    wrapChannelMergerNode\n) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n\n        return nativeChannelMergerNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelMergerNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelMergerNodeRendererFactory: TChannelMergerNodeRendererFactoryFactory = (\n    createNativeChannelMergerNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IAudioNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TChannelSplitterNodeRendererFactoryFactory, TNativeAudioNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createChannelSplitterNodeRendererFactory: TChannelSplitterNodeRendererFactoryFactory = (\n    createNativeChannelSplitterNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeAudioNode>();\n\n        const createAudioNode = async (proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode<T, TNativeAudioNode>(proxy);\n\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n\n            return nativeAudioNode;\n        };\n\n        return {\n            render(proxy: IAudioNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeAudioNode> {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TSanitizeChannelSplitterOptionsFunction } from '../types';\n\nexport const sanitizeChannelSplitterOptions: TSanitizeChannelSplitterOptionsFunction = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport {\n    TNativeAudioBufferSourceNode,\n    TNativeAudioNode,\n    TNativeConstantSourceNode,\n    TNativeConstantSourceNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeConstantSourceNodeFakerFactory: TNativeConstantSourceNodeFakerFactoryFactory = (\n    addSilentConnection,\n    createNativeAudioBufferSourceNode,\n    createNativeGainNode,\n    monitorConnections\n) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeConstantSourceNode['channelCountMode'] {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeConstantSourceNode['channelInterpretation'] {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context(): TNativeConstantSourceNode['context'] {\n                return gainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [];\n            },\n            get numberOfInputs(): number {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return gainNode.numberOfOutputs;\n            },\n            get offset(): TNativeConstantSourceNode['offset'] {\n                return gainNode.gain;\n            },\n            get onended(): TNativeConstantSourceNode['onended'] {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = <TNativeAudioBufferSourceNode['onended']>value;\n            },\n            addEventListener(...args: any[]): void {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0): void {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0): void {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeConstantSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeConstantSourceNodeFactory: TNativeConstantSourceNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    createNativeConstantSourceNodeFaker,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport\n) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n\n        return nativeConstantSourceNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IConstantSourceNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConstantSourceNodeRendererFactoryFactory, TNativeConstantSourceNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConstantSourceNodeRendererFactory: TConstantSourceNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeConstantSourceNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConstantSourceNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConstantSourceNode>();\n\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createConstantSourceNode = async (proxy: IConstantSourceNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode<T, TNativeConstantSourceNode>(proxy);\n\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n\n            return nativeConstantSourceNode;\n        };\n\n        return {\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(\n                proxy: IConstantSourceNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeConstantSourceNode> {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeConvolverNodeFactoryFactory } from '../types';\n\nexport const createNativeConvolverNodeFactory: TNativeConvolverNodeFactoryFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCount',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        overwriteAccessors(\n            nativeConvolverNode,\n            'channelCountMode',\n            (get) => () => get.call(nativeConvolverNode),\n            (set) => (value) => {\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                return set.call(nativeConvolverNode, value);\n            }\n        );\n\n        return nativeConvolverNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IConvolverNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TConvolverNodeRendererFactoryFactory, TNativeConvolverNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createConvolverNodeRendererFactory: TConvolverNodeRendererFactoryFactory = (\n    createNativeConvolverNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeConvolverNodes = new WeakMap<TNativeOfflineAudioContext, TNativeConvolverNode>();\n\n        const createConvolverNode = async (proxy: IConvolverNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode<T, TNativeConvolverNode>(proxy);\n\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n\n            return nativeConvolverNode;\n        };\n\n        return {\n            render(proxy: IConvolverNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeConvolverNode> {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IDelayNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDelayNodeRendererFactoryFactory, TNativeDelayNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDelayNodeRendererFactory: TDelayNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDelayNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(maxDelayTime: number) => {\n        const renderedNativeDelayNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDelayNode>();\n\n        const createDelayNode = async (proxy: IDelayNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode<T, TNativeDelayNode>(proxy);\n\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n\n            return nativeDelayNode;\n        };\n\n        return {\n            render(proxy: IDelayNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeDelayNode> {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDynamicsCompressorNodeFactoryFactory } from '../types';\n\nexport const createNativeDynamicsCompressorNodeFactory: TNativeDynamicsCompressorNodeFactoryFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n\n        return nativeDynamicsCompressorNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IDynamicsCompressorNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TDynamicsCompressorNodeRendererFactoryFactory, TNativeDynamicsCompressorNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createDynamicsCompressorNodeRendererFactory: TDynamicsCompressorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeDynamicsCompressorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeDynamicsCompressorNode>();\n\n        const createDynamicsCompressorNode = async (\n            proxy: IDynamicsCompressorNode<T>,\n            nativeOfflineAudioContext: TNativeOfflineAudioContext\n        ) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode<T, TNativeDynamicsCompressorNode>(proxy);\n\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n\n            return nativeDynamicsCompressorNode;\n        };\n\n        return {\n            render(\n                proxy: IDynamicsCompressorNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeDynamicsCompressorNode> {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IGainNode, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGainNodeRendererFactoryFactory, TNativeGainNode, TNativeOfflineAudioContext } from '../types';\n\nexport const createGainNodeRendererFactory: TGainNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeGainNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeGainNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode>();\n\n        const createGainNode = async (proxy: IGainNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode<T, TNativeGainNode>(proxy);\n\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n\n            return nativeGainNode;\n        };\n\n        return {\n            render(proxy: IGainNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeGainNode> {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IOfflineAudioCompletionEvent } from '../interfaces';\nimport { TNativeAudioBuffer, TRenderNativeOfflineAudioContextFactory } from '../types';\n\nexport const createRenderNativeOfflineAudioContext: TRenderNativeOfflineAudioContextFactory = (\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    testOfflineAudioContextCurrentTimeSupport\n) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(\n                cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)\n            ).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n\n        return new Promise<TNativeAudioBuffer>((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n\n            nativeOfflineAudioContext.oncomplete = (event: IOfflineAudioCompletionEvent) => {\n                gainNode.disconnect();\n\n                resolve(event.renderedBuffer);\n            };\n\n            gainNode.connect(nativeOfflineAudioContext.destination);\n\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { TTestOfflineAudioContextCurrentTimeSupportFactory } from '../types';\n\nexport const createTestOfflineAudioContextCurrentTimeSupport: TTestOfflineAudioContextCurrentTimeSupportFactory = (\n    createNativeGainNode,\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeIIRFilterNodeFactoryFactory } from '../types';\n\nexport const createNativeIIRFilterNodeFactory: TNativeIIRFilterNodeFactoryFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(<number[]>options.feedforward, <number[]>options.feedback);\n\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n\n        return nativeIIRFilterNode;\n    };\n};\n","import { createInvalidAccessError } from '../factories/invalid-access-error';\nimport { TNativeIIRFilterNode } from '../types';\n\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode: TNativeIIRFilterNode): void => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam } from '../interfaces';\nimport { TAudioListenerFactoryFactory } from '../types';\n\nexport const createAudioListenerFactory: TAudioListenerFactoryFactory = (\n    createAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    getFirstSample,\n    isNativeOfflineAudioContext,\n    overwriteAccessors\n) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation: [number, number, number, number, number, number] = [0, 0, -1, 0, 1, 0];\n            let lastPosition: [number, number, number] = [0, 0, 0];\n\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n\n                isScriptProcessorNodeCreated = true;\n\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation: [number, number, number, number, number, number] = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                        lastOrientation = orientation;\n                    }\n\n                    const positon: [number, number, number] = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n\n                        lastPosition = positon;\n                    }\n                };\n\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index: number) => (value: number) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index: number) => (value: number) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input: number, initialValue: number, setValue: (value: number) => void) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n\n                constantSourceNode.connect(channelMergerNode, 0, input);\n\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get(): number {\n                        return initialValue;\n                    }\n                });\n\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam(\n                    <any>{ context },\n                    isOffline,\n                    constantSourceNode.offset,\n                    MOST_POSITIVE_SINGLE_FLOAT,\n                    MOST_NEGATIVE_SINGLE_FLOAT\n                );\n\n                overwriteAccessors(\n                    audioParam,\n                    'value',\n                    (get) => () => get.call(audioParam),\n                    (set) => (value) => {\n                        try {\n                            set.call(audioParam, value);\n                        } catch (err) {\n                            if (err.code !== 9) {\n                                throw err;\n                            }\n                        }\n\n                        createScriptProcessorNode();\n\n                        if (isOffline) {\n                            // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                            setValue(value);\n                        }\n                    }\n                );\n\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['cancelAndHoldAtTime']>) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['cancelScheduledValues']>) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['exponentialRampToValueAtTime']>) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['linearRampToValueAtTime']>) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setTargetAtTime']>) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setValueAtTime']>) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n\n                    return (...args: Parameters<IAudioParam['setValueCurveAtTime']>) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n\n                        createScriptProcessorNode();\n\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n\n                return audioParam;\n            };\n\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } =\n            nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n\n        return {\n            get forwardX(): IAudioParam {\n                return forwardX;\n            },\n            get forwardY(): IAudioParam {\n                return forwardY;\n            },\n            get forwardZ(): IAudioParam {\n                return forwardZ;\n            },\n            get positionX(): IAudioParam {\n                return positionX;\n            },\n            get positionY(): IAudioParam {\n                return positionY;\n            },\n            get positionZ(): IAudioParam {\n                return positionZ;\n            },\n            get upX(): IAudioParam {\n                return upX;\n            },\n            get upY(): IAudioParam {\n                return upY;\n            },\n            get upZ(): IAudioParam {\n                return upZ;\n            }\n        };\n    };\n};\n","import { CONTEXT_STORE } from '../globals';\nimport { IAudioDestinationNode, IAudioListener, IMinimalBaseAudioContext, IMinimalBaseAudioContextEventMap } from '../interfaces';\nimport { TAudioContextState, TContext, TEventHandler, TMinimalBaseAudioContextConstructorFactory, TNativeContext } from '../types';\n\nexport const createMinimalBaseAudioContextConstructor: TMinimalBaseAudioContextConstructorFactory = (\n    audioDestinationNodeConstructor,\n    createAudioListener,\n    eventTargetConstructor,\n    isNativeOfflineAudioContext,\n    unrenderedAudioWorkletNodeStore,\n    wrapEventListener\n) => {\n    return class MinimalBaseAudioContext<T extends TContext>\n        extends eventTargetConstructor<IMinimalBaseAudioContextEventMap>\n        implements IMinimalBaseAudioContext<T>\n    {\n        private _destination: IAudioDestinationNode<T>;\n\n        private _listener: IAudioListener;\n\n        private _onstatechange: null | TEventHandler<T>;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext);\n\n            CONTEXT_STORE.set(<T>(<unknown>this), _nativeContext);\n\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n\n            this._destination = new audioDestinationNodeConstructor(<T>(<unknown>this), numberOfChannels);\n            this._listener = createAudioListener(<T>(<unknown>this), _nativeContext);\n            this._onstatechange = null;\n        }\n\n        get currentTime(): number {\n            return this._nativeContext.currentTime;\n        }\n\n        get destination(): IAudioDestinationNode<T> {\n            return this._destination;\n        }\n\n        get listener(): IAudioListener {\n            return this._listener;\n        }\n\n        get onstatechange(): null | TEventHandler<T> {\n            return this._onstatechange;\n        }\n\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n\n            this._nativeContext.onstatechange = wrappedListener;\n\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n\n        get sampleRate(): number {\n            return this._nativeContext.sampleRate;\n        }\n\n        get state(): TAudioContextState {\n            return this._nativeContext.state;\n        }\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nimport { TNativeOscillatorNodeFactoryFactory } from '../types';\n\nexport const createNativeOscillatorNodeFactory: TNativeOscillatorNodeFactoryFactory = (\n    addSilentConnection,\n    cacheTestResult,\n    testAudioScheduledSourceNodeStartMethodNegativeParametersSupport,\n    testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport,\n    testAudioScheduledSourceNodeStopMethodNegativeParametersSupport,\n    wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\n) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        } else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () =>\n                testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (\n            !cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () =>\n                testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext)\n            )\n        ) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n\n        return nativeOscillatorNode;\n    };\n};\n","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IOscillatorNode, IPeriodicWave } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeOscillatorNode, TOscillatorNodeRendererFactoryFactory } from '../types';\n\nexport const createOscillatorNodeRendererFactory: TOscillatorNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeOscillatorNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeOscillatorNodes = new WeakMap<TNativeOfflineAudioContext, TNativeOscillatorNode>();\n\n        let periodicWave: null | IPeriodicWave = null;\n        let start: null | number = null;\n        let stop: null | number = null;\n\n        const createOscillatorNode = async (proxy: IOscillatorNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode<T, TNativeOscillatorNode>(proxy);\n\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n\n            return nativeOscillatorNode;\n        };\n\n        return {\n            set periodicWave(value: null | IPeriodicWave) {\n                periodicWave = value;\n            },\n            set start(value: number) {\n                start = value;\n            },\n            set stop(value: number) {\n                stop = value;\n            },\n            render(proxy: IOscillatorNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeOscillatorNode> {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TConnectedNativeAudioBufferSourceNodeFactoryFactory } from '../types';\n\nexport const createConnectedNativeAudioBufferSourceNodeFactory: TConnectedNativeAudioBufferSourceNodeFactoryFactory = (\n    createNativeAudioBufferSourceNode\n) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativeWaveShaperNode, TNativeWaveShaperNodeFakerFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFakerFactory: TNativeWaveShaperNodeFakerFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeGainNode,\n    isDCCurve,\n    monitorConnections\n) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n        let unmodifiedCurve: null | TNativeWaveShaperNode['curve'] = null;\n\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeWaveShaperNode['channelCountMode'] {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeWaveShaperNode['channelInterpretation'] {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeWaveShaperNode['context'] {\n                return negativeWaveShaperNode.context;\n            },\n            get curve(): TNativeWaveShaperNode['curve'] {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                } else {\n                    const curveLength = value.length;\n\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                  (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                  (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n\n                unmodifiedCurve = value;\n\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    } else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample(): TNativeWaveShaperNode['oversample'] {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n\n            isConnected = true;\n\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeWaveShaperNodeFactoryFactory } from '../types';\n\nexport const createNativeWaveShaperNodeFactory: TNativeWaveShaperNodeFactoryFactory = (\n    createConnectedNativeAudioBufferSourceNode,\n    createInvalidStateError,\n    createNativeWaveShaperNodeFaker,\n    isDCCurve,\n    monitorConnections,\n    nativeAudioContextConstructor,\n    overwriteAccessors\n) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (\n            nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined\n        ) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n\n        let disconnectNativeAudioBufferSourceNode: null | (() => void) = null;\n        let isConnected = false;\n\n        overwriteAccessors(\n            nativeWaveShaperNode,\n            'curve',\n            (get) => () => get.call(nativeWaveShaperNode),\n            (set) => (value) => {\n                set.call(nativeWaveShaperNode, value);\n\n                if (isConnected) {\n                    if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(\n                            nativeContext,\n                            nativeWaveShaperNode\n                        );\n                    } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n\n                return value;\n            }\n        );\n\n        const whenConnected = () => {\n            isConnected = true;\n\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nimport { TNativeAudioNode, TNativePannerNode, TNativePannerNodeFakerFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFakerFactory: TNativePannerNodeFakerFactoryFactory = (\n    connectNativeAudioNodeToNativeAudioNode,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getFirstSample,\n    monitorConnections\n) => {\n    return (\n        nativeContext,\n        {\n            coneInnerAngle,\n            coneOuterAngle,\n            coneOuterGain,\n            distanceModel,\n            maxDistance,\n            orientationX,\n            orientationY,\n            orientationZ,\n            panningModel,\n            positionX,\n            positionY,\n            positionZ,\n            refDistance,\n            rolloffFactor,\n            ...audioNodeOptions\n        }\n    ) => {\n        const pannerNode = nativeContext.createPanner();\n\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        } as const;\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n\n        let lastOrientation: [number, number, number] = [orientationX, orientationY, orientationZ];\n        let lastPosition: [number, number, number] = [positionX, positionY, positionZ];\n\n        const buffer = new Float32Array(1);\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation: [number, number, number] = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n\n                lastOrientation = orientation;\n            }\n\n            const positon: [number, number, number] = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n\n                lastPosition = positon;\n            }\n        };\n\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n\n        const nativePannerNodeFaker = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode(): TNativePannerNode['channelCountMode'] {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativePannerNode['channelInterpretation'] {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle(): TNativePannerNode['coneInnerAngle'] {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle(): TNativePannerNode['coneOuterAngle'] {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain(): TNativePannerNode['coneOuterGain'] {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n\n                pannerNode.coneOuterGain = value;\n            },\n            get context(): TNativePannerNode['context'] {\n                return pannerNode.context;\n            },\n            get distanceModel(): TNativePannerNode['distanceModel'] {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get maxDistance(): TNativePannerNode['maxDistance'] {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs(): number {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX(): TNativePannerNode['orientationX'] {\n                return orientationXGainNode.gain;\n            },\n            get orientationY(): TNativePannerNode['orientationY'] {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ(): TNativePannerNode['orientationZ'] {\n                return orientationZGainNode.gain;\n            },\n            get panningModel(): TNativePannerNode['panningModel'] {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX(): TNativePannerNode['positionX'] {\n                return positionXGainNode.gain;\n            },\n            get positionY(): TNativePannerNode['positionY'] {\n                return positionYGainNode.gain;\n            },\n            get positionZ(): TNativePannerNode['positionZ'] {\n                return positionZGainNode.gain;\n            },\n            get refDistance(): TNativePannerNode['refDistance'] {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor(): TNativePannerNode['rolloffFactor'] {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativePannerNodeFactoryFactory } from '../types';\n\nexport const createNativePannerNodeFactory: TNativePannerNodeFactoryFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n\n        return nativePannerNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, INativePannerNodeFaker, IOfflineAudioContext, IPannerNode } from '../interfaces';\nimport {\n    TNativeAudioBuffer,\n    TNativeGainNode,\n    TNativeOfflineAudioContext,\n    TNativePannerNode,\n    TPannerNodeRendererFactoryFactory\n} from '../types';\n\nexport const createPannerNodeRendererFactory: TPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeChannelMergerNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativePannerNode,\n    getNativeAudioNode,\n    nativeOfflineAudioContextConstructor,\n    renderAutomation,\n    renderInputsOfAudioNode,\n    renderNativeOfflineAudioContext\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeAudioNodes = new WeakMap<TNativeOfflineAudioContext, TNativeGainNode | TNativePannerNode>();\n\n        let renderedBufferPromise: null | Promise<TNativeAudioBuffer> = null;\n\n        const createAudioNode = async (proxy: IPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeGainNode: null | TNativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode<T, TNativePannerNode>(proxy);\n\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            } else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                        6,\n                        // Bug #17: Safari does not yet expose the length.\n                        proxy.context.length,\n                        nativeOfflineAudioContext.sampleRate\n                    );\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all(\n                            [\n                                proxy.orientationX,\n                                proxy.orientationY,\n                                proxy.orientationZ,\n                                proxy.positionX,\n                                proxy.positionY,\n                                proxy.positionZ\n                            ].map(async (audioParam, index) => {\n                                const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                    channelCount: 1,\n                                    channelCountMode: 'explicit',\n                                    channelInterpretation: 'discrete',\n                                    offset: index === 0 ? 1 : 0\n                                });\n\n                                await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n\n                                return nativeConstantSourceNode;\n                            })\n                        );\n\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n\n                const channelDatas: Float32Array[] = [];\n\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n\n                inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation: [number, number, number] = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon: [number, number, number] = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n\n                    if (\n                        orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])\n                    ) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n\n                        inputGainNode.connect(gateGainNode).connect((<INativePannerNodeFaker>partialPannerNode).inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n\n                return nativeGainNode;\n            }\n\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n\n            return nativePannerNode;\n        };\n\n        return {\n            render(\n                proxy: IPannerNode<T>,\n                nativeOfflineAudioContext: TNativeOfflineAudioContext\n            ): Promise<TNativeGainNode | TNativePannerNode> {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n","import { TSanitizePeriodicWaveOptionsFunction } from '../types';\n\nexport const sanitizePeriodicWaveOptions: TSanitizePeriodicWaveOptionsFunction = (options) => {\n    const { imag, real } = options;\n\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n\n    return { ...options, imag, real };\n};\n","import { interceptConnections } from '../helpers/intercept-connections';\nimport { INativeWaveShaperNodeFaker } from '../interfaces';\nimport {\n    TNativeAudioNode,\n    TNativeChannelMergerNode,\n    TNativeContext,\n    TNativeGainNode,\n    TNativeStereoPannerNode,\n    TNativeStereoPannerNodeFakerFactoryFactory\n} from '../types';\n\nexport const createNativeStereoPannerNodeFakerFactory: TNativeStereoPannerNodeFakerFactoryFactory = (\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeGainNode,\n    createNativeWaveShaperNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' } as const;\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' } as const;\n\n    const buildInternalGraphForMono = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve })\n        );\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve })\n        );\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraphForStereo = (\n        nativeContext: TNativeContext,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            } else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = <INativeWaveShaperNodeFaker>(\n            createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE })\n        );\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = <INativeWaveShaperNodeFaker>createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n\n        return {\n            connectGraph(): void {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.connect(panGainNode);\n\n                panGainNode.connect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.connect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph(): void {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n\n                panWaveShaperNode.disconnect(panGainNode);\n\n                panGainNode.disconnect(\n                    leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForLeftOutputWaveShaperNode\n                        : leftInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    leftInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? leftInputForRightOutputWaveShaperNode\n                        : leftInputForRightOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForLeftOutputWaveShaperNode\n                        : rightInputForLeftOutputWaveShaperNode.inputs[0]\n                );\n                panGainNode.disconnect(\n                    rightInputForRightOutputWaveShaperNode.inputs === undefined\n                        ? rightInputForRightOutputWaveShaperNode\n                        : rightInputForRightOutputWaveShaperNode.inputs[0]\n                );\n\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n\n    const buildInternalGraph = (\n        nativeContext: TNativeContext,\n        channelCount: number,\n        inputGainNode: TNativeGainNode,\n        panGainNode: TNativeGainNode,\n        channelMergerNode: TNativeChannelMergerNode\n    ) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n\n        throw createNotSupportedError();\n    };\n\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n\n        let { connectGraph, disconnectGraph } = buildInternalGraph(\n            nativeContext,\n            channelCount,\n            inputGainNode,\n            panGainNode,\n            channelMergerNode\n        );\n\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize(): undefined {\n                return undefined;\n            },\n            get channelCount(): number {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(\n                        nativeContext,\n                        value,\n                        inputGainNode,\n                        panGainNode,\n                        channelMergerNode\n                    ));\n\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode(): TNativeStereoPannerNode['channelCountMode'] {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation(): TNativeStereoPannerNode['channelInterpretation'] {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context(): TNativeStereoPannerNode['context'] {\n                return inputGainNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return [inputGainNode];\n            },\n            get numberOfInputs(): number {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan(): TNativeStereoPannerNode['pan'] {\n                return panGainNode.gain;\n            },\n            addEventListener(...args: any[]): void {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args: any[]): boolean {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        let isConnected = false;\n\n        const whenConnected = () => {\n            connectGraph();\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n\n            isConnected = false;\n        };\n\n        return monitorConnections(\n            interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode),\n            whenConnected,\n            whenDisconnected\n        );\n    };\n};\n","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeStereoPannerNodeFactoryFactory } from '../types';\n\nexport const createNativeStereoPannerNodeFactory: TNativeStereoPannerNodeFactoryFactory = (\n    createNativeStereoPannerNodeFaker,\n    createNotSupportedError\n) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n\n        return nativeStereoPannerNode;\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IStereoPannerNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeStereoPannerNode, TStereoPannerNodeRendererFactoryFactory } from '../types';\n\nexport const createStereoPannerNodeRendererFactory: TStereoPannerNodeRendererFactoryFactory = (\n    connectAudioParam,\n    createNativeStereoPannerNode,\n    getNativeAudioNode,\n    renderAutomation,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeStereoPannerNodes = new WeakMap<TNativeOfflineAudioContext, TNativeStereoPannerNode>();\n\n        const createStereoPannerNode = async (proxy: IStereoPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode<T, TNativeStereoPannerNode>(proxy);\n\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            } else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n\n            return nativeStereoPannerNode;\n        };\n\n        return {\n            render(proxy: IStereoPannerNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeStereoPannerNode> {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nimport { IMinimalOfflineAudioContext, IOfflineAudioContext, IWaveShaperNode } from '../interfaces';\nimport { TNativeOfflineAudioContext, TNativeWaveShaperNode, TWaveShaperNodeRendererFactoryFactory } from '../types';\n\nexport const createWaveShaperNodeRendererFactory: TWaveShaperNodeRendererFactoryFactory = (\n    createNativeWaveShaperNode,\n    getNativeAudioNode,\n    renderInputsOfAudioNode\n) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>() => {\n        const renderedNativeWaveShaperNodes = new WeakMap<TNativeOfflineAudioContext, TNativeWaveShaperNode>();\n\n        const createWaveShaperNode = async (proxy: IWaveShaperNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode<T, TNativeWaveShaperNode>(proxy);\n\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            } else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n\n            return nativeWaveShaperNode;\n        };\n\n        return {\n            render(proxy: IWaveShaperNode<T>, nativeOfflineAudioContext: TNativeOfflineAudioContext): Promise<TNativeWaveShaperNode> {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n","import { TIsSecureContextFactory } from '../types';\n\nexport const createIsSecureContext: TIsSecureContextFactory = (window) => window !== null && window.isSecureContext;\n","import { TExposeCurrentFrameAndCurrentTimeFactory } from '../types';\n\nexport const createExposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFactory = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get(): number {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get(): number {\n                    return currentTime;\n                }\n            }\n        });\n\n        try {\n            return fn();\n        } finally {\n            if (window !== null) {\n                delete (<any>window).currentFrame;\n                delete (<any>window).currentTime;\n            }\n        }\n    };\n};\n","import { TGetOrCreateBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetOrCreateBackupOfflineAudioContext: TGetOrCreateBackupOfflineAudioContextFactory = (\n    backupOfflineAudioContextStore,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n\n        return backupOfflineAudioContext;\n    };\n};\n","import { TEvaluateSourceFactory } from '../types';\n\nexport const createEvaluateSource: TEvaluateSourceFactory = (window) => {\n    return (source) =>\n        new Promise((resolve, reject) => {\n            if (window === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n\n                return;\n            }\n\n            const head = window.document.head;\n\n            if (head === null) {\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            } else {\n                const script = window.document.createElement('script');\n                // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n                const blob = new Blob([source], { type: 'application/javascript' });\n                const url = URL.createObjectURL(blob);\n\n                const originalOnErrorHandler = window.onerror;\n\n                const removeErrorEventListenerAndRevokeUrl = () => {\n                    window.onerror = originalOnErrorHandler;\n\n                    URL.revokeObjectURL(url);\n                };\n\n                window.onerror = (message, src, lineno, colno, error) => {\n                    // @todo Edge thinks the source is the one of the html document.\n                    if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                        removeErrorEventListenerAndRevokeUrl();\n                        reject(error);\n\n                        return false;\n                    }\n\n                    if (originalOnErrorHandler !== null) {\n                        return originalOnErrorHandler(message, src, lineno, colno, error);\n                    }\n                };\n\n                script.onerror = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    reject(new SyntaxError());\n                };\n                script.onload = () => {\n                    removeErrorEventListenerAndRevokeUrl();\n                    resolve();\n                };\n                script.src = url;\n                script.type = 'module';\n\n                head.appendChild(script);\n            }\n        });\n};\n","import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n","import { TAbortErrorFactory } from '../types';\n\nexport const createAbortError: TAbortErrorFactory = () => new DOMException('', 'AbortError');\n","import { TTestAudioWorkletProcessorPostMessageSupportFactory } from '../types';\n\n// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport: TTestAudioWorkletProcessorPostMessageSupportFactory = (\n    nativeAudioWorkletNodeConstructor,\n    nativeOfflineAudioContextConstructor\n) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const blob = new Blob(\n            ['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'],\n            {\n                type: 'application/javascript; charset=utf-8'\n            }\n        );\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n\n            await offlineAudioContext.startRendering();\n        } catch {\n            // Ignore errors.\n        } finally {\n            URL.revokeObjectURL(url);\n        }\n\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n","import { TIsNativeContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsNativeContext: TIsNativeContextFactory = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything): anything is TNativeAudioContext => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TDecodeAudioDataFactory } from '../types';\n\nexport const createDecodeAudioData: TDecodeAudioDataFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    createDataCloneError,\n    createEncodingError,\n    detachedArrayBuffers,\n    getNativeContext,\n    isNativeContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    testPromiseSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n\n            return Promise.reject(err);\n        }\n\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        } catch {\n            // Ignore errors.\n        }\n\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n        }\n\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                } catch {\n                    // Ignore errors.\n                }\n            };\n\n            const fail = (err: DOMException | Error) => {\n                reject(err);\n                complete();\n            };\n\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(\n                    audioData,\n                    (audioBuffer) => {\n                        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                        if (typeof audioBuffer.copyFromChannel !== 'function') {\n                            wrapAudioBufferCopyChannelMethods(audioBuffer);\n                            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                        }\n\n                        audioBufferStore.add(audioBuffer);\n\n                        complete().then(() => resolve(audioBuffer));\n                    },\n                    (err: DOMException | Error) => {\n                        // Bug #4: Safari returns null instead of an error.\n                        if (err === null) {\n                            fail(createEncodingError());\n                        } else {\n                            fail(err);\n                        }\n                    }\n                );\n            } catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n","import { TDataCloneErrorFactory } from '../types';\n\nexport const createDataCloneError: TDataCloneErrorFactory = () => new DOMException('', 'DataCloneError');\n","import { TEncodingErrorFactory } from '../types';\n\nexport const createEncodingError: TEncodingErrorFactory = () => new DOMException('', 'EncodingError');\n","import {\n    IAnalyserNode,\n    IAudioBuffer,\n    IAudioBufferSourceNode,\n    IAudioNode,\n    IAudioWorklet,\n    IBaseAudioContext,\n    IBiquadFilterNode,\n    IConstantSourceNode,\n    IConvolverNode,\n    IDelayNode,\n    IDynamicsCompressorNode,\n    IGainNode,\n    IIIRFilterNode,\n    IOscillatorNode,\n    IPannerNode,\n    IPeriodicWave,\n    IPeriodicWaveConstraints,\n    IStereoPannerNode,\n    IWaveShaperNode,\n    IWorkletOptions\n} from '../interfaces';\nimport { TBaseAudioContextConstructorFactory, TContext, TDecodeErrorCallback, TDecodeSuccessCallback, TNativeContext } from '../types';\n\nexport const createBaseAudioContextConstructor: TBaseAudioContextConstructorFactory = (\n    addAudioWorkletModule,\n    analyserNodeConstructor,\n    audioBufferConstructor,\n    audioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor,\n    channelMergerNodeConstructor,\n    channelSplitterNodeConstructor,\n    constantSourceNodeConstructor,\n    convolverNodeConstructor,\n    decodeAudioData,\n    delayNodeConstructor,\n    dynamicsCompressorNodeConstructor,\n    gainNodeConstructor,\n    iIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor,\n    pannerNodeConstructor,\n    periodicWaveConstructor,\n    stereoPannerNodeConstructor,\n    waveShaperNodeConstructor\n) => {\n    return class BaseAudioContext<T extends TContext> extends minimalBaseAudioContextConstructor<T> implements IBaseAudioContext<T> {\n        private _audioWorklet: undefined | IAudioWorklet;\n\n        constructor(private _nativeContext: TNativeContext, numberOfChannels: number) {\n            super(_nativeContext, numberOfChannels);\n\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                          addModule: (moduleURL: string, options?: IWorkletOptions) => {\n                              return addAudioWorkletModule(<T>(<unknown>this), moduleURL, options);\n                          }\n                      };\n        }\n\n        get audioWorklet(): undefined | IAudioWorklet {\n            return this._audioWorklet;\n        }\n\n        public createAnalyser(): IAnalyserNode<T> {\n            return new analyserNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBiquadFilter(): IBiquadFilterNode<T> {\n            return new biquadFilterNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createBuffer(numberOfChannels: number, length: number, sampleRate: number): IAudioBuffer {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n\n        public createBufferSource(): IAudioBufferSourceNode<T> {\n            return new audioBufferSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createChannelMerger(numberOfInputs = 6): IAudioNode<T> {\n            return new channelMergerNodeConstructor(<T>(<unknown>this), { numberOfInputs });\n        }\n\n        public createChannelSplitter(numberOfOutputs = 6): IAudioNode<T> {\n            return new channelSplitterNodeConstructor(<T>(<unknown>this), { numberOfOutputs });\n        }\n\n        public createConstantSource(): IConstantSourceNode<T> {\n            return new constantSourceNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createConvolver(): IConvolverNode<T> {\n            return new convolverNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createDelay(maxDelayTime = 1): IDelayNode<T> {\n            return new delayNodeConstructor(<T>(<unknown>this), { maxDelayTime });\n        }\n\n        public createDynamicsCompressor(): IDynamicsCompressorNode<T> {\n            return new dynamicsCompressorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createGain(): IGainNode<T> {\n            return new gainNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createIIRFilter(feedforward: Iterable<number>, feedback: Iterable<number>): IIIRFilterNode<T> {\n            return new iIRFilterNodeConstructor(<T>(<unknown>this), { feedback, feedforward });\n        }\n\n        public createOscillator(): IOscillatorNode<T> {\n            return new oscillatorNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPanner(): IPannerNode<T> {\n            return new pannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createPeriodicWave(\n            real: Iterable<number>,\n            imag: Iterable<number>,\n            constraints: Partial<IPeriodicWaveConstraints> = { disableNormalization: false }\n        ): IPeriodicWave {\n            return new periodicWaveConstructor(<T>(<unknown>this), { ...constraints, imag, real });\n        }\n\n        public createStereoPanner(): IStereoPannerNode<T> {\n            return new stereoPannerNodeConstructor(<T>(<unknown>this));\n        }\n\n        public createWaveShaper(): IWaveShaperNode<T> {\n            return new waveShaperNodeConstructor(<T>(<unknown>this));\n        }\n\n        public decodeAudioData(\n            audioData: ArrayBuffer,\n            successCallback?: TDecodeSuccessCallback,\n            errorCallback?: TDecodeErrorCallback\n        ): Promise<IAudioBuffer> {\n            return decodeAudioData(this._nativeContext, audioData).then(\n                (audioBuffer) => {\n                    if (typeof successCallback === 'function') {\n                        successCallback(audioBuffer);\n                    }\n\n                    return audioBuffer;\n                },\n                (err) => {\n                    if (typeof errorCallback === 'function') {\n                        errorCallback(err);\n                    }\n\n                    throw err;\n                }\n            );\n        }\n    };\n};\n","import { IAudioContext, IMediaElementAudioSourceNode, IMediaElementAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaElementAudioSourceNodeConstructorFactory, TNativeMediaElementAudioSourceNode } from '../types';\n\nexport const createMediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaElementAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaElementAudioSourceNode<T> {\n        private _nativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNode;\n\n        constructor(context: T, options: IMediaElementAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n\n            super(context, true, nativeMediaElementAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n\n        get mediaElement(): HTMLMediaElement {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n","import { TNativeMediaElementAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNodeFactory = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeMediaStreamAudioDestinationNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNodeFactory = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n\n    return nativeMediaStreamAudioDestinationNode;\n};\n","import { IAudioContext, IMediaStreamAudioSourceNode, IMediaStreamAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioSourceNodeConstructorFactory, TNativeMediaStreamAudioSourceNode } from '../types';\n\nexport const createMediaStreamAudioSourceNodeConstructor: TMediaStreamAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioSourceNode<T> {\n        private _nativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNode;\n\n        constructor(context: T, options: IMediaStreamAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            super(context, true, nativeMediaStreamAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n\n        get mediaStream(): MediaStream {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n","import { TNativeMediaStreamAudioSourceNodeFactory } from '../types';\n\nexport const createNativeMediaStreamAudioSourceNode: TNativeMediaStreamAudioSourceNodeFactory = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n\n    return nativeMediaStreamAudioSourceNode;\n};\n","import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n","import { IAudioContext, IMediaStreamTrackAudioSourceNode, IMediaStreamTrackAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamTrackAudioSourceNodeConstructorFactory } from '../types';\n\nexport const createMediaStreamTrackAudioSourceNodeConstructor: TMediaStreamTrackAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamTrackAudioSourceNode,\n    getNativeContext\n) => {\n    return class MediaStreamTrackAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamTrackAudioSourceNode<T> {\n        constructor(context: T, options: IMediaStreamTrackAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, <TAudioNodeRenderer<T>>null);\n        }\n    };\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport {\n    IAudioContext,\n    IAudioContextOptions,\n    IMediaElementAudioSourceNode,\n    IMediaStreamAudioDestinationNode,\n    IMediaStreamAudioSourceNode,\n    IMediaStreamTrackAudioSourceNode\n} from '../interfaces';\nimport { TAudioContextConstructorFactory, TAudioContextState, TNativeAudioContext, TNativeGainNode, TNativeOscillatorNode } from '../types';\n\nexport const createAudioContextConstructor: TAudioContextConstructorFactory = (\n    baseAudioContextConstructor,\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    mediaElementAudioSourceNodeConstructor,\n    mediaStreamAudioDestinationNodeConstructor,\n    mediaStreamAudioSourceNodeConstructor,\n    mediaStreamTrackAudioSourceNodeConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class AudioContext extends baseAudioContextConstructor<IAudioContext> implements IAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            let nativeAudioContext: TNativeAudioContext;\n\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            } catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public createMediaElementSource(mediaElement: HTMLMediaElement): IMediaElementAudioSourceNode<this> {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n\n        public createMediaStreamDestination(): IMediaStreamAudioDestinationNode<this> {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n\n        public createMediaStreamSource(mediaStream: MediaStream): IMediaStreamAudioSourceNode<this> {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n\n        public createMediaStreamTrackSource(mediaStreamTrack: MediaStreamTrack): IMediaStreamTrackAudioSourceNode<this> {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { TGetUnrenderedAudioWorkletNodesFactory } from '../types';\n\nexport const createGetUnrenderedAudioWorkletNodes: TGetUnrenderedAudioWorkletNodesFactory = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n\n        return unrenderedAudioWorkletNodes;\n    };\n};\n","import { TAddUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createAddUnrenderedAudioWorkletNode: TAddUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n","import { isNativeAudioNode } from '../guards/native-audio-node';\nimport { TConnectMultipleOutputsFactory } from '../types';\n\nexport const createConnectMultipleOutputs: TConnectMultipleOutputsFactory = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n","import { TDeleteUnrenderedAudioWorkletNodeFactory } from '../types';\n\nexport const createDeleteUnrenderedAudioWorkletNode: TDeleteUnrenderedAudioWorkletNodeFactory = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n","import { TActiveInputConnection, TContext, TGetActiveAudioWorkletNodeInputsFactory, TNativeAudioWorkletNode } from '../types';\n\nexport const createGetActiveAudioWorkletNodeInputs: TGetActiveAudioWorkletNodeInputsFactory = (\n    activeAudioWorkletNodeInputsStore,\n    getValueForKey\n) => {\n    return <T extends TContext>(nativeAudioWorkletNode: TNativeAudioWorkletNode) =>\n        <Set<TActiveInputConnection<T>>[]>getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { IAudioWorkletProcessor } from '../interfaces';\nimport { ReadOnlyMap } from '../read-only-map';\nimport {\n    TNativeAudioNode,\n    TNativeAudioParam,\n    TNativeAudioWorkletNode,\n    TNativeAudioWorkletNodeFakerFactoryFactory,\n    TNativeChannelMergerNode,\n    TNativeChannelSplitterNode,\n    TNativeConstantSourceNode,\n    TNativeGainNode\n} from '../types';\n\nexport const createNativeAudioWorkletNodeFakerFactory: TNativeAudioWorkletNodeFakerFactoryFactory = (\n    connectMultipleOutputs,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeChannelMergerNode,\n    createNativeChannelSplitterNode,\n    createNativeConstantSourceNode,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    createNotSupportedError,\n    disconnectMultipleOutputs,\n    exposeCurrentFrameAndCurrentTime,\n    getActiveAudioWorkletNodeInputs,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters =\n            processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n\n        const messageChannel = new MessageChannel();\n        const gainNodes: TNativeGainNode[] = [];\n        const inputChannelSplitterNodes: TNativeChannelSplitterNode[] = [];\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(\n                createNativeGainNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                })\n            );\n            inputChannelSplitterNodes.push(\n                createNativeChannelSplitterNode(nativeContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: options.channelCount\n                })\n            );\n        }\n\n        const constantSourceNodes: TNativeConstantSourceNode[] = [];\n\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset:\n                        options.parameterData[name] !== undefined\n                            ? options.parameterData[name]\n                            : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(\n            nativeContext,\n            bufferSize,\n            numberOfInputChannels + numberOfParameters,\n            // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n            Math.max(1, numberOfOutputChannels)\n        );\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes: TNativeChannelMergerNode[] = [];\n\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(\n                createNativeChannelMergerNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'speakers',\n                    numberOfInputs: outputChannelCount[i]\n                })\n            );\n        }\n\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n\n        const parameterMap = new ReadOnlyMap(\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                      const constantSourceNode = constantSourceNodes[index];\n\n                      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                      constantSourceNode.start(0);\n\n                      return <[string, TNativeAudioParam]>[name, constantSourceNode.offset];\n                  })\n        );\n\n        inputChannelMergerNode.connect(scriptProcessorNode);\n\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize(): number {\n                return bufferSize;\n            },\n            get channelCount(): number {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode(): TNativeAudioWorkletNode['channelCountMode'] {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation(): TNativeAudioWorkletNode['channelInterpretation'] {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n\n                channelInterpretation = value;\n            },\n            get context(): TNativeAudioWorkletNode['context'] {\n                return scriptProcessorNode.context;\n            },\n            get inputs(): TNativeAudioNode[] {\n                return gainNodes;\n            },\n            get numberOfInputs(): number {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs(): number {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror(): TNativeAudioWorkletNode['onprocessorerror'] {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n\n                onprocessorerror = typeof value === 'function' ? value : null;\n\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters(): TNativeAudioWorkletNode['parameters'] {\n                return parameterMap;\n            },\n            get port(): TNativeAudioWorkletNode['port'] {\n                return messageChannel.port2;\n            },\n            addEventListener(...args: any[]): void {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: <TNativeAudioNode['connect']>connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: <TNativeAudioNode['disconnect']>disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args: any[]): boolean {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args: any[]): void {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n\n        const patchedEventListeners: Map<EventListenerOrEventListenerObject, NonNullable<MessagePort['onmessage']>> = new Map();\n\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener =\n                        typeof args[1] === 'function'\n                            ? args[1]\n                            : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                        if (patchedEventListener !== undefined) {\n                            args[1] = <EventListenerOrEventListenerObject>patchedEventListener;\n                        } else {\n                            args[1] = (event: Event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () =>\n                                    unpatchedEventListener(event)\n                                );\n                            };\n\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args: any[]): void => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n\n                        args[1] = patchedEventListener;\n                    }\n                }\n\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n\n        let onmessage: MessagePort['onmessage'] = null;\n\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n\n                onmessage = typeof value === 'function' ? value : null;\n\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n\n        processorConstructor.prototype.port = messageChannel.port1;\n\n        let audioWorkletProcessor: null | IAudioWorkletProcessor = null;\n\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(\n            nativeContext,\n            nativeAudioWorkletNodeFaker,\n            processorConstructor,\n            options\n        );\n\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters: { [name: string]: Float32Array } =\n            processorConstructor.parameterDescriptors === undefined\n                ? []\n                : processorConstructor.parameterDescriptors.reduce(\n                      (prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }),\n                      {}\n                  );\n\n        let isActive = true;\n\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n\n        const activeInputIndexes = new Map<number, number>();\n\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }: AudioProcessingEvent) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n\n                                return input;\n                            }\n\n                            const count = activeInputIndexes.get(index);\n\n                            if (count === undefined) {\n                                return [];\n                            }\n\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                } else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n\n                            return input;\n                        });\n\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(\n                            nativeContext.currentTime + i / nativeContext.sampleRate,\n                            nativeContext.sampleRate,\n                            () => (<IAudioWorkletProcessor>audioWorkletProcessor).process(potentiallyEmptyInputs, outputs, parameters)\n                        );\n\n                        isActive = activeSourceFlag;\n\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    } catch (error) {\n                        isActive = false;\n\n                        nativeAudioWorkletNodeFaker.dispatchEvent(\n                            new ErrorEvent('processorerror', {\n                                colno: error.colno,\n                                filename: error.filename,\n                                lineno: error.lineno,\n                                message: error.message\n                            })\n                        );\n                    }\n\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        } else {\n                            disconnectFakeGraph();\n                        }\n\n                        break;\n                    }\n                }\n            }\n        };\n\n        let isConnected = false;\n\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n\n            isConnected = false;\n        };\n\n        connectFakeGraph();\n\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioWorkletNodeOptions, IAudioWorkletProcessor, IAudioWorkletProcessorConstructor } from '../interfaces';\nimport { TNativeAudioWorkletNode, TNativeContext } from '../types';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\n\nexport const createAudioWorkletProcessor = (\n    nativeContext: TNativeContext,\n    nativeAudioWorkletNode: TNativeAudioWorkletNode,\n    processorConstructor: IAudioWorkletProcessorConstructor,\n    audioWorkletNodeOptions: IAudioWorkletNodeOptions\n): Promise<IAudioWorkletProcessor> => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n\n    return audioWorkletProcessorPromise;\n};\n","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nimport { TNativeAudioWorkletNode, TNativeAudioWorkletNodeFactoryFactory, TNativeAudioWorkletNodeOptions } from '../types';\n\nexport const createNativeAudioWorkletNodeFactory: TNativeAudioWorkletNodeFactoryFactory = (\n    createInvalidStateError,\n    createNativeAudioWorkletNodeFaker,\n    createNativeGainNode,\n    createNotSupportedError,\n    monitorConnections\n) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(\n                    nativeContext,\n                    name,\n                    <TNativeAudioWorkletNodeOptions>options\n                );\n                const patchedEventListeners: Map<\n                    EventListenerOrEventListenerObject,\n                    NonNullable<TNativeAudioWorkletNode['onprocessorerror']>\n                > = new Map();\n\n                let onprocessorerror: TNativeAudioWorkletNode['onprocessorerror'] = null;\n\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n\n                            onprocessorerror = typeof value === 'function' ? value : null;\n\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args: [string, EventListenerOrEventListenerObject, (boolean | AddEventListenerOptions)?]): void => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener =\n                                typeof args[1] === 'function'\n                                    ? args[1]\n                                    : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                } else {\n                                    args[1] = (event: Event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n\n                                            unpatchedEventListener(event);\n                                        } else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args: any[]): void => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n\n                                args[1] = patchedEventListener;\n                            }\n                        }\n\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n\n                return nativeAudioWorkletNode;\n            } catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n        }\n\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n\n        testClonabilityOfAudioWorkletNodeOptions(options);\n\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n","import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): void => {\n    const { port1 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n    }\n};\n","import { TGetBackupOfflineAudioContextFactory } from '../types';\n\nexport const createGetBackupOfflineAudioContext: TGetBackupOfflineAudioContextFactory = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n","import { TSetActiveAudioWorkletNodeInputsFactory } from '../types';\n\nexport const createSetActiveAudioWorkletNodeInputs: TSetActiveAudioWorkletNodeInputsFactory = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n","import { TSanitizeAudioWorkletNodeOptionsFunction } from '../types';\n\nexport const sanitizeAudioWorkletNodeOptions: TSanitizeAudioWorkletNodeOptionsFunction = (options) => {\n    return {\n        ...options,\n        outputChannelCount:\n            options.outputChannelCount !== undefined\n                ? options.outputChannelCount\n                : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                  [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n","import { TTestAudioWorkletNodeOptionsClonabilityFunction } from '../types';\n\nexport const testAudioWorkletNodeOptionsClonability: TTestAudioWorkletNodeOptionsClonabilityFunction = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n        port2.close();\n    }\n};\n","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nimport { IAudioContextOptions, IMinimalAudioContext } from '../interfaces';\nimport {\n    TAudioContextState,\n    TMinimalAudioContextConstructorFactory,\n    TNativeAudioContext,\n    TNativeGainNode,\n    TNativeOscillatorNode\n} from '../types';\n\nexport const createMinimalAudioContextConstructor: TMinimalAudioContextConstructorFactory = (\n    createInvalidStateError,\n    createNotSupportedError,\n    createUnknownError,\n    minimalBaseAudioContextConstructor,\n    nativeAudioContextConstructor\n) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor<IMinimalAudioContext> implements IMinimalAudioContext {\n        private _baseLatency: number;\n\n        private _nativeAudioContext: TNativeAudioContext;\n\n        private _nativeGainNode: null | TNativeGainNode;\n\n        private _nativeOscillatorNode: null | TNativeOscillatorNode;\n\n        private _state: null | 'suspended';\n\n        constructor(options: IAudioContextOptions = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n\n            let nativeAudioContext: TNativeAudioContext;\n\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            } catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n\n                throw err;\n            }\n\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(\n                    `The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`\n                );\n            }\n\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n\n            super(nativeAudioContext, 2);\n\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                    ? 512 / sampleRate\n                    : latencyHint === 'interactive' || latencyHint === undefined\n                    ? 256 / sampleRate\n                    : latencyHint === 'playback'\n                    ? 1024 / sampleRate\n                    : /*\n                       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                       * ScriptProcessorNode.\n                       */\n                      (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n\n                this._nativeGainNode.gain.value = 1e-37;\n\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            } else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n\n            this._state = null;\n\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n\n        get baseLatency(): number {\n            return this._baseLatency;\n        }\n\n        get state(): TAudioContextState {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n\n        public close(): Promise<void> {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n\n                deactivateAudioGraph(this);\n            });\n        }\n\n        public resume(): Promise<void> {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        } else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n\n        public suspend(): Promise<void> {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n\n                throw err;\n            });\n        }\n    };\n};\n","import { TCreateNativeOfflineAudioContextFactory } from '../types';\n\nexport const createCreateNativeOfflineAudioContext: TCreateNativeOfflineAudioContextFactory = (\n    createNotSupportedError,\n    nativeOfflineAudioContextConstructor\n) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        } catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n\n            throw err;\n        }\n    };\n};\n","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nimport { TStartRenderingFactory } from '../types';\n\nexport const createStartRendering: TStartRenderingFactory = (\n    audioBufferStore,\n    cacheTestResult,\n    getAudioNodeRenderer,\n    getUnrenderedAudioWorkletNodes,\n    renderNativeOfflineAudioContext,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport,\n    wrapAudioBufferCopyChannelMethods,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds\n) => {\n    return (destination, nativeOfflineAudioContext) =>\n        getAudioNodeRenderer(destination)\n            .render(destination, nativeOfflineAudioContext)\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n             * destination.\n             */\n            .then(() =>\n                Promise.all(\n                    Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) =>\n                        getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext)\n                    )\n                )\n            )\n            .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n            .then((audioBuffer) => {\n                // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                if (typeof audioBuffer.copyFromChannel !== 'function') {\n                    wrapAudioBufferCopyChannelMethods(audioBuffer);\n                    wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                } else if (\n                    !cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () =>\n                        testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer)\n                    )\n                ) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n\n                audioBufferStore.add(audioBuffer);\n\n                return audioBuffer;\n            });\n};\n","import { IAudioContext, IMinimalAudioContext } from '../interfaces';\nimport { TIsAnyAudioContextFactory, TNativeAudioContext } from '../types';\n\nexport const createIsAnyAudioContext: TIsAnyAudioContextFactory = (contextStore, isNativeAudioContext) => {\n    return (anything): anything is IAudioContext | IMinimalAudioContext | TNativeAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n","import { IAudioNode } from '../interfaces';\nimport { TIsAnyAudioNodeFactory, TNativeAudioNode } from '../types';\n\nexport const createIsAnyAudioNode: TIsAnyAudioNodeFactory = (audioNodeStore, isNativeAudioNode) => {\n    return (anything): anything is IAudioNode<any> | TNativeAudioNode => audioNodeStore.has(<any>anything) || isNativeAudioNode(anything);\n};\n","import { IAudioParam } from '../interfaces';\nimport { TIsAnyAudioParamFactory, TNativeAudioParam } from '../types';\n\nexport const createIsAnyAudioParam: TIsAnyAudioParamFactory = (audioParamStore, isNativeAudioParam) => {\n    return (anything): anything is IAudioParam | TNativeAudioParam => audioParamStore.has(<any>anything) || isNativeAudioParam(anything);\n};\n","import { IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TIsAnyOfflineAudioContextFactory, TNativeOfflineAudioContext } from '../types';\n\nexport const createIsAnyOfflineAudioContext: TIsAnyOfflineAudioContextFactory = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything): anything is IMinimalOfflineAudioContext | IOfflineAudioContext | TNativeOfflineAudioContext => {\n        const nativeContext = contextStore.get(<any>anything);\n\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\n     * or an array of colors to apply as a gradient\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\n     * or an array of colors to apply as a gradient\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n        }\n    }\n\n    /**\n     * Utility function to handle wave color arguments\n     *\n     * When the color argument type is a string or CanvasGradient instance,\n     * it will be returned as is. Otherwise, it will be treated as an array,\n     * and a new CanvasGradient will be returned\n     *\n     * @since 6.0.0\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\n     *     of colors to apply as a gradient\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n     *     canvas gradient\n     */\n    getFillStyle(ctx, color) {\n        if (typeof color == 'string' || color instanceof CanvasGradient) {\n            return color;\n        }\n\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\n\n        return waveGradient;\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                cursor: this.params.hideCursor ? 'none' : 'auto',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let peakIndex = first;\n                for (peakIndex; peakIndex < last; peakIndex += step) {\n\n                    // search for the highest peak in the range this bar falls into\n                    let peak = 0;\n                    let peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                    const peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                    do { // do..while makes sure at least one peak is always evaluated\n                        const newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                        if (newPeak > peak) {\n                            peak = newPeak; // higher\n                        }\n                        peakIndexRange += peakIndexScale; // skip every other value for negatives\n                    } while (peakIndexRange < peakIndexEnd);\n\n                    // calculate the height of this bar according to the highest peak found\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    // in case of silences, allow the user to specify that we\n                    // always draw *something* (normally a 1px high bar)\n                    if (h == 0 && this.params.barMinHeight) {\n                        h = this.params.barMinHeight;\n                    }\n\n                    this.fillRect(\n                        peakIndex + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null && !isNaN(start)) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        hideCursor: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    this.drawer.wrapper &&\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    if (prevWidth) {\n                        // redraw only if waveform container is rendered and has a width\n                        this.drawer.fireEvent('redraw');\n                    }\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getWaveColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n        }\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color, channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n        } else {\n            this.params.waveColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getProgressColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n        }\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color, channelIdx) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n        } else {\n            this.params.progressColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /** @private */\n        this.sinkStreamDestination = null;\n        /** @private */\n        this.sinkAudioElement = null;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            if (!this.sinkAudioElement) {\n                this.sinkAudioElement = new window.Audio();\n                // autoplay is necessary since we're not invoking .play()\n                this.sinkAudioElement.autoplay = true;\n            }\n            if (!this.sinkAudioElement.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            if (!this.sinkStreamDestination) {\n                this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n            }\n            this.gainNode.disconnect();\n            this.gainNode.connect(this.sinkStreamDestination);\n            this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n\n            return this.sinkAudioElement.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n\n        // disconnect resources used by setSinkId\n        if (this.sinkStreamDestination) {\n            this.sinkAudioElement.pause();\n            this.sinkAudioElement.srcObject = null;\n            this.sinkStreamDestination.disconnect();\n            this.sinkStreamDestination = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","import React, { useRef, useState, useEffect } from 'react'\r\n//import { effectParams } from \"./effects2\"\r\n\r\nfunction Effects(props) {\r\n\r\n    const { effectsToggle, onChange, effArr, effectParams, setEffectParams, setEffArr } = props\r\n\r\n    const reverbRangeInput = useRef()\r\n\r\n    const reverbRangeDiv = useRef()\r\n\r\n    let effectSet = true;\r\n\r\n    const setValue = () => {\r\n\r\n        const newValue = Number((reverbRangeInput.current.value - reverbRangeInput.current.min) / (reverbRangeInput.current.max - reverbRangeInput.current.min));\r\n        const newPosition = 10 - (newValue * 0.2);\r\n        reverbRangeDiv.current.innerHTML = `<span>${reverbRangeInput.current.value}</span>`;\r\n        reverbRangeDiv.current.style.left = `calc(${newValue}% + (${newPosition}px))`;\r\n        setEffectParams(prev => {\r\n            return { ...prev, verbDecay: Math.floor(newValue + 1) }\r\n        })\r\n        console.log(effectParams.verbDecay)\r\n    };\r\n\r\n\r\n    const debounce = (func, wait) => {\r\n        let timeout;\r\n\r\n        return function executedFunction(...args) {\r\n            const later = () => {\r\n                clearTimeout(timeout);\r\n                func(...args);\r\n            };\r\n\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    };\r\n\r\n\r\n\r\n    // toggle switches for effects\r\n    return (\r\n        <div>\r\n\r\n            <div className='slider-flex-container'>\r\n                <label htmlFor=\"reverb\" className=\"switch\">\r\n                    <input className=\"effect\" name=\"reverb\" id=\"reverb\" type=\"checkbox\" checked={effectsToggle[0].state} onChange={() => onChange(0)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p>Reverb</p>\r\n                <div className=\"reverb-tag range-wrap\">\r\n                    <div ref={reverbRangeDiv} className=\"range-value\" id=\"rangeV\"></div>\r\n                    <input type=\"range\" ref={reverbRangeInput} defaultValue='1' name=\"reverb-range\" id=\"reverb-range\" className=\"range-slider\" min=\"1\" max=\"2\" step='0.1' onChange={() => debounce(setValue(), 10000)}></input>\r\n                </div>\r\n            </div >\r\n\r\n            <div>\r\n                <label htmlFor=\"delay\" className=\"switch\">\r\n                    <input className=\"effect\" name=\"delay\" id=\"delay\" type=\"checkbox\" checked={effectsToggle[1].state} onChange={() => onChange(1)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p className=\"delay-tag\">Delay</p>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"stereo\" className=\"switch\">\r\n                    <input className=\"effect\" name=\"stereo\" id=\"stereo\" type=\"checkbox\" checked={effectsToggle[2].state} onChange={() => onChange(2)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p className=\"stereo-tag\">Stereo Widener</p>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"distortion\" className=\"switch\">\r\n                    <input className=\"effect\" name=\"distortion\" id=\"distortion\" type=\"checkbox\" checked={effectsToggle[3].state} onChange={() => onChange(3)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p className=\"distortion-tag\">Distortion</p>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"phaser\" className=\"switch\">\r\n                    <input className=\"effect\" name=\"phaser\" id=\"phaser\" type=\"checkbox\" checked={effectsToggle[4].state} onChange={() => onChange(4)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p className=\"phaser-tag\">Phaser</p>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"chorus\" className=\"switch\">\r\n                    <input className=\"effect\" id=\"chorus\" name=\"chorus\" type=\"checkbox\" checked={effectsToggle[5].state} onChange={() => onChange(5)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p className=\"chorus-tag\">Chorus</p>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"bitcrusher\" className=\"switch\">\r\n                    <input className=\"effect\" name=\"bitcrusher\" id=\"bitcrusher\" type=\"checkbox\" checked={effectsToggle[6].state} onChange={() => onChange(6)}></input>\r\n                    <span className=\"slider round\"></span>\r\n                </label>\r\n                <p className=\"bitcrusher-tag\">Bit Crusher</p>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Effects\r\n","import PacLogo from \"../images/pac.png\"\r\nimport React, { useState } from \"react\"\r\nimport Effects from \"./effects\"\r\n\r\nexport default function Header(props) {\r\n\r\n    const { effectsToggle, setEffectsToggle, effArr, effectParams, setEffectParams, setEffArr } = props\r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n    // toggles settings based on display\r\n    const modalStyle = {\r\n        display: !modalShow ? \"none\" : \"block\"\r\n    }\r\n\r\n    // updates the settings toggle to on or off\r\n    function toggleSettings(effectPosition) {\r\n        let updatedCheckedState = effectsToggle.map((effect, index) => {\r\n            if (effect.key == effectPosition) {\r\n                return { ...effect, state: !effect.state }\r\n            }\r\n            return { ...effect }\r\n        });\r\n\r\n        setEffectsToggle(prev => {\r\n            return updatedCheckedState\r\n        })\r\n\r\n    }\r\n\r\n    //displays settings menu\r\n    function showModal() {\r\n        setModalShow(!modalShow)\r\n    }\r\n\r\n    function aboutModal() {\r\n        console.log(\"about menu clicked\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header-container\">\r\n                <h1 className=\"header-title\">HOLLA' AT ME</h1>\r\n            </div>\r\n            <nav className=\"navigation-container\">\r\n                <img className=\"pac-logo\" src={PacLogo} alt=\"pac\"></img>\r\n                <div className=\"home-nav nav-div\" onClick={showModal}>Settings\r\n                </div>\r\n                <div className=\"about nav-div\" onClick={aboutModal}>About</div>\r\n\r\n                {/* <a href=\"#\" className=\"feature-request\">Feature-Request</a>\r\n                <a href=\"#\" className=\"share\">Share</a> */}\r\n            </nav>\r\n            <div style={modalStyle} className=\"settings-container\">\r\n                <div className=\"settings-modal\">\r\n                    <Effects\r\n                        effArr={effArr}\r\n                        setEffArr={setEffArr}\r\n                        effectParams={effectParams}\r\n                        setEffectParams={setEffectParams}\r\n                        effectsToggle={effectsToggle}\r\n                        onChange={toggleSettings}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}","export default function Buttons(props) {\r\n\r\n    return (\r\n        <button type=\"button\" onClick={props.handleClick} className=\"button\" > {props.padNote}</button >\r\n\r\n    )\r\n}","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMic(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 22.589v1.411h-2v-1.425c0-1.958-.943-3.015-2-4.575h6c-1.062 1.553-2 2.612-2 4.589zm3-9.589c-.552 0-1-.448-1-1s.448-1 1-1h2v-2h-2c-.552 0-1-.448-1-1s.448-1 1-1h2v-2h-2c-.552 0-1-.448-1-1s.448-1 1-1h1.858c-.446-1.722-1.997-3-3.858-3h-4c-1.861 0-3.412 1.278-3.858 3h1.858c.552 0 1 .448 1 1s-.448 1-1 1h-2v2h2c.552 0 1 .448 1 1s-.448 1-1 1h-2v2h2c.552 0 1 .448 1 1s-.448 1-1 1h-1.858c.446 1.722 1.997 3 3.858 3h4c1.861 0 3.412-1.278 3.858-3h-1.858z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMic);\nexport default __webpack_public_path__ + \"static/media/mic.3e4ec0353cf7168d41529849e7c028f0.svg\";\nexport { ForwardRef as ReactComponent };","export const version: string = \"14.7.77\";\n","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement: boolean, error: string): void {\n\tif (!statement) {\n\t\tthrow new Error(error);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value: number, gte: number, lte = Infinity): void {\n\tif (!(gte <= value && value <= lte)) {\n\t\tthrow new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n\t}\n}\n\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context: import(\"../context/BaseContext\").BaseContext): void {\n\t// add a warning if the context is not started\n\tif (!context.isOffline && context.state !== \"running\") {\n\t\twarn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n\t}\n}\n\n/**\n * A basic logging interface\n */\ninterface Logger {\n\tlog: (args?: any[]) => void;\n\twarn: (args?: any[]) => void;\n}\n\n/**\n * The default logger is the console\n */\nlet defaultLogger: Logger = console;\n\n/**\n * Set the logging interface\n */\nexport function setLogger(logger: Logger): void {\n\tdefaultLogger = logger;\n}\n\n/**\n * Log anything\n */\nexport function log(...args: any[]): void {\n\tdefaultLogger.log(...args);\n}\n\n/**\n * Warn anything\n */\nexport function warn(...args: any[]): void {\n\tdefaultLogger.warn(...args);\n}\n","import { Note } from \"../type/Units\";\n\n/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg: any): arg is undefined {\n\treturn typeof arg === \"undefined\";\n}\n\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined<T>(arg: T | undefined): arg is T {\n\treturn !isUndef(arg);\n}\n\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg: any): arg is (a: any) => any {\n\treturn typeof arg === \"function\";\n}\n\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg: any): arg is number {\n\treturn (typeof arg === \"number\");\n}\n\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg: any): arg is object {\n\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg: any): arg is boolean {\n\treturn (typeof arg === \"boolean\");\n}\n\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg: any): arg is any[] {\n\treturn (Array.isArray(arg));\n}\n\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg: any): arg is string {\n\treturn (typeof arg === \"string\");\n}\n\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg: any): arg is Note {\n\treturn isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n","import {\n\tAudioContext as stdAudioContext,\n\tAudioWorkletNode as stdAudioWorkletNode,\n\tOfflineAudioContext as stdOfflineAudioContext\n} from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options?: AudioContextOptions): AudioContext {\n\treturn new stdAudioContext(options) as unknown as AudioContext;\n}\n\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels: number, length: number, sampleRate: number): OfflineAudioContext {\n\treturn new stdOfflineAudioContext(channels, length, sampleRate) as unknown as OfflineAudioContext;\n}\n\n/**\n * Either the online or offline audio context\n */\nexport type AnyAudioContext = AudioContext | OfflineAudioContext;\n\n/**\n * Interface for things that Tone.js adds to the window\n */\ninterface ToneWindow extends Window {\n\tTONE_SILENCE_LOGGING?: boolean;\n\tTONE_DEBUG_CLASS?: string;\n}\n\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow: ToneWindow | null = typeof self === \"object\" ? self : null;\n\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n\t(theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\n\nexport function createAudioWorkletNode(context: AnyAudioContext, name: string, options?: Partial<AudioWorkletNodeOptions>): AudioWorkletNode {\n\tassert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n\t// @ts-ignore\n\treturn new stdAudioWorkletNode(context, name, options);\n}\n\n/**\n * This promise resolves to a boolean which indicates if the \n * functionality is supported within the currently used browse. \n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Seconds } from \"../type/Units\";\n\nexport type TickerClockSource = \"worker\" | \"timeout\" | \"offline\";\n\n/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n\n\t/**\n\t * Either \"worker\" or \"timeout\" or \"offline\"\n\t */\n\tprivate _type: TickerClockSource;\n\n\t/**\n\t * The update interval of the worker\n\t */\n\tprivate _updateInterval: Seconds;\n\n\t/**\n\t * The callback to invoke at regular intervals\n\t */\n\tprivate _callback: () => void;\n\n\t/**\n\t * track the callback interval\n\t */\n\tprivate _timeout!: ReturnType<typeof setTimeout>;\n\n\t/**\n\t * private reference to the worker\n\t */\n\tprivate _worker!: Worker;\n\n\tconstructor(callback: () => void, type: TickerClockSource, updateInterval: Seconds) {\n\n\t\tthis._callback = callback;\n\t\tthis._type = type;\n\t\tthis._updateInterval = updateInterval;\n\n\t\t// create the clock source for the first time\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Generate a web worker\n\t */\n\tprivate _createWorker(): void {\n\n\t\tconst blob = new Blob([\n\t\t\t/* javascript */`\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n\t\t], { type: \"text/javascript\" });\n\t\tconst blobUrl = URL.createObjectURL(blob);\n\t\tconst worker = new Worker(blobUrl);\n\n\t\tworker.onmessage = this._callback.bind(this);\n\n\t\tthis._worker = worker;\n\t}\n\n\t/**\n\t * Create a timeout loop\n\t */\n\tprivate _createTimeout(): void {\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._createTimeout();\n\t\t\tthis._callback();\n\t\t}, this._updateInterval * 1000);\n\t}\n\n\t/**\n\t * Create the clock source.\n\t */\n\tprivate _createClock(): void {\n\t\tif (this._type === \"worker\") {\n\t\t\ttry {\n\t\t\t\tthis._createWorker();\n\t\t\t} catch (e) {\n\t\t\t\t// workers not supported, fallback to timeout\n\t\t\t\tthis._type = \"timeout\";\n\t\t\t\tthis._createClock();\n\t\t\t}\n\t\t} else if (this._type === \"timeout\") {\n\t\t\tthis._createTimeout();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up the current clock source\n\t */\n\tprivate _disposeClock(): void {\n\t\tif (this._timeout) {\n\t\t\tclearTimeout(this._timeout);\n\t\t\tthis._timeout = 0;\n\t\t}\n\t\tif (this._worker) {\n\t\t\tthis._worker.terminate();\n\t\t\tthis._worker.onmessage = null;\n\t\t}\n\t}\n\n\t/**\n\t * The rate in seconds the ticker will update\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._updateInterval = Math.max(interval, 128 / 44100);\n\t\tif (this._type === \"worker\") {\n\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t}\n\t}\n\n\t/**\n\t * The type of the ticker, either a worker or a timeout\n\t */\n\tget type(): TickerClockSource {\n\t\treturn this._type;\n\t}\n\tset type(type: TickerClockSource) {\n\t\tthis._disposeClock();\n\t\tthis._type = type;\n\t\tthis._createClock();\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): void {\n\t\tthis._disposeClock();\n\t}\n}\n","import {\n\tisAnyAudioContext, isAnyAudioNode,\n\tisAnyAudioParam, isAnyOfflineAudioContext,\n} from \"standardized-audio-context\";\n\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg: any): arg is AudioParam {\n\treturn isAnyAudioParam(arg);\n}\n\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg: any): arg is AudioNode {\n\treturn isAnyAudioNode(arg);\n}\n\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg: any): arg is OfflineAudioContext {\n\treturn isAnyOfflineAudioContext(arg);\n}\n\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg: any): arg is AudioContext {\n\treturn isAnyAudioContext(arg);\n}\n\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg: any): arg is AudioBuffer {\n\treturn arg instanceof AudioBuffer;\n}\n","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n\ntype BaseToneOptions = import(\"../Tone\").BaseToneOptions;\n\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key: string, arg: any): boolean {\n\treturn key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\n\n/**\n * Recursively merge an object\n * @param target the object to merge into\n * @param sources the source objects to merge\n */\nexport function deepMerge<T>(target: T): T;\nexport function deepMerge<T, U>(target: T, source1: U): T & U;\nexport function deepMerge<T, U, V>(target: T, source1: U, source2: V): T & U & V;\nexport function deepMerge<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\nexport function deepMerge(target: any, ...sources: any[]): any {\n\tif (!sources.length) {\n\t\treturn target; \n\t}\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (noCopy(key, source[key])) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t} else if (isObject(source[key])) {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tObject.assign(target, { [key]: {} }); \n\t\t\t\t}\n\t\t\t\tdeepMerge(target[key], source[key] as any);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] as any });\n\t\t\t}\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals<T>(arrayA: T[], arrayB: T[]): boolean {\n\treturn arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments<T extends object>(\n\tdefaults: T,\n\targsArray: IArguments,\n\tkeys: Array<keyof T> = [],\n\tobjKey?: keyof T,\n): T {\n\tconst opts: Partial<T> = {};\n\tconst args = Array.from(argsArray);\n\t// if the first argument is an object and has an object key\n\tif (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n\t\t// if it's not part of the defaults\n\t\tconst partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n\t\tif (!partOfDefaults) {\n\t\t\t// merge that key\n\t\t\tdeepMerge(opts, { [objKey]: args[0] });\n\t\t\t// remove the obj key from the keys\n\t\t\tkeys.splice(keys.indexOf(objKey), 1);\n\t\t\t// shift the first argument off\n\t\t\targs.shift();\n\t\t}\n\t}\n\tif (args.length === 1 && isObject(args[0])) {\n\t\tdeepMerge(opts, args[0]);\n\t} else {\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (isDefined(args[i])) {\n\t\t\t\topts[keys[i]] = args[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn deepMerge(defaults, opts);\n}\n\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance<T>(instance: T): BaseToneOptions {\n\ttype ToneClass = {\n\t\tconstructor: ToneClass;\n\t\tgetDefaults: () => BaseToneOptions;\n\t} & T;\n\n\treturn (instance as ToneClass).constructor.getDefaults();\n}\n\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg<T>(given: T, fallback: T): T {\n\tif (isUndef(given)) {\n\t\treturn fallback;\n\t} else {\n\t\treturn given;\n\t}\n}\n\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject<T extends object, O extends string[]>(obj: T, omit: O): Omit<T, keyof O> {\n\tomit.forEach(prop => {\n\t\tif (Reflect.has(obj, prop)) {\n\t\t\tdelete obj[prop];\n\t\t}\n\t});\n\treturn obj;\n}\n","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n\n//-------------------------------------\n// \tTONE\n//-------------------------------------\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseToneOptions { }\n\n/**\n * @class  Tone is the base class of all other classes.\n * @category Core\n * @constructor\n */\nexport abstract class Tone {\n\n\t/**\n\t * The version number semver\n\t */\n\tstatic version: string = version;\n\n\t/**\n\t * The name of the class\n\t */\n\tprotected abstract name: string;\n\n\t/**\n\t * Returns all of the default options belonging to the class.\n\t */\n\tstatic getDefaults(): BaseToneOptions {\n\t\treturn {};\n\t}\n\n\t//-------------------------------------\n\t// \tDEBUGGING\n\t//-------------------------------------\n\n\t/**\n\t * Set this debug flag to log all events that happen in this class.\n\t */\n\tdebug = false;\n\n\t/**\n\t * Prints the outputs to the console log for debugging purposes.\n\t * Prints the contents only if either the object has a property\n\t * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n\t * is set to the name of the class.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * // prints all logs originating from this oscillator\n\t * osc.debug = true;\n\t * // calls to start/stop will print in the console\n\t * osc.start();\n\t */\n\tprotected log(...args: any[]): void {\n\t\t// if the object is either set to debug = true\n\t\t// or if there is a string on the Tone.global.with the class name\n\t\tif (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n\t\t\tlog(this, ...args);\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tDISPOSING\n\t//-------------------------------------\n\n\t/**\n\t * Indicates if the instance was disposed\n\t */\n\tprivate _wasDisposed = false;\n\n\t/**\n\t * disconnect and dispose.\n\t */\n\tdispose(): this {\n\t\tthis._wasDisposed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Indicates if the instance was disposed. 'Disposing' an\n\t * instance means that all of the Web Audio nodes that were\n\t * created for the instance are disconnected and freed for garbage collection.\n\t */\n\tget disposed(): boolean {\n\t\treturn this._wasDisposed;\n\t}\n\n\t/**\n\t * Convert the class to a string\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.toString());\n\t */\n\ttoString(): string {\n\t\treturn this.name;\n\t}\n}\n","/**\n * The threshold for correctness for operators. Less than one sample even \n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n\n/**\n * Test if A is greater than B\n */\nexport function GT(a: number, b: number): boolean {\n\treturn a > b + EPSILON;\n}\n\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a: number, b: number): boolean {\n\treturn GT(a, b) || EQ(a, b);\n}\n\n/**\n * Test if A is less than B\n */\nexport function LT(a: number, b: number): boolean {\n\treturn a + EPSILON < b;\n}\n\n/**\n * Test if A is less than B\n */\nexport function EQ(a: number, b: number): boolean {\n\treturn Math.abs(a - b) < EPSILON;\n}\n\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.max(Math.min(value, max), min);\n}\n","import { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n\ntype TimelineSearchParam = \"ticks\" | \"time\";\n\n/**\n * The options object for Timeline\n */\ninterface TimelineOptions {\n\tmemory: number;\n\tincreasing: boolean;\n}\n\n/**\n * An event must have a time number\n */\nexport interface TimelineEvent {\n\ttime: number;\n}\n\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline<GenericEvent extends TimelineEvent> extends Tone {\n\n\treadonly name: string = \"Timeline\";\n\n\t/**\n\t * The memory of the timeline, i.e.\n\t * how many events in the past it will retain\n\t */\n\tmemory: number;\n\n\t/**\n\t * The array of scheduled timeline events\n\t */\n\tprotected _timeline: GenericEvent[] = [];\n\n\t/**\n\t * If the time value must always be greater than or equal to the last \n\t * element on the list. \n\t */\n\tincreasing: boolean;\n\n\t/**\n\t * @param memory The number of previous events that are retained.\n\t */\n\tconstructor(memory?: number);\n\tconstructor(options?: Partial<TimelineOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n\n\t\tthis.memory = options.memory;\n\t\tthis.increasing = options.increasing;\n\t}\n\n\tstatic getDefaults(): TimelineOptions {\n\t\treturn {\n\t\t\tmemory: Infinity,\n\t\t\tincreasing: false,\n\t\t};\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t */\n\tget length(): number {\n\t\treturn this._timeline.length;\n\t}\n\n\t/**\n\t * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t * @param event  The event object to insert into the timeline.\n\t */\n\tadd(event: GenericEvent): this {\n\t\t// the event needs to have a time attribute\n\t\tassert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n\t\tevent.time = event.time.valueOf();\n\t\tif (this.increasing && this.length) {\n\t\t\tconst lastValue = this._timeline[this.length - 1] as GenericEvent;\n\t\t\tassert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n\t\t\tthis._timeline.push(event);\n\t\t} else {\n\t\t\tconst index = this._search(event.time);\n\t\t\tthis._timeline.splice(index + 1, 0, event);\n\t\t}\n\t\t// if the length is more than the memory, remove the previous ones\n\t\tif (this.length > this.memory) {\n\t\t\tconst diff = this.length - this.memory;\n\t\t\tthis._timeline.splice(0, diff);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  {Object}  event  The event object to remove from the list.\n\t * @returns {Timeline} this\n\t */\n\tremove(event: GenericEvent): this {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index !== -1) {\n\t\t\tthis._timeline.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the nearest event whose time is less than or equal to the given time.\n\t * @param  time  The time to query.\n\t */\n\tget(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index !== -1) {\n\t\t\treturn this._timeline[index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Return the first event in the timeline without removing it\n\t * @returns {Object} The first event object\n\t */\n\tpeek(): GenericEvent | undefined {\n\t\treturn this._timeline[0];\n\t}\n\n\t/**\n\t * Return the first event in the timeline and remove it\n\t */\n\tshift(): GenericEvent | undefined {\n\t\treturn this._timeline.shift();\n\t}\n\n\t/**\n\t * Get the event which is scheduled after the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetAfter(time: number, param: TimelineSearchParam = \"time\"): GenericEvent | null {\n\t\tconst index = this._search(time, param);\n\t\tif (index + 1 < this._timeline.length) {\n\t\t\treturn this._timeline[index + 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Get the event before the event at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetBefore(time: number): GenericEvent | null {\n\t\tconst len = this._timeline.length;\n\t\t// if it's after the last item, return the last item\n\t\tif (len > 0 && this._timeline[len - 1].time < time) {\n\t\t\treturn this._timeline[len - 1];\n\t\t}\n\t\tconst index = this._search(time);\n\t\tif (index - 1 >= 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel events at and after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tif (this._timeline.length > 1) {\n\t\t\tlet index = this._search(after);\n\t\t\tif (index >= 0) {\n\t\t\t\tif (EQ(this._timeline[index].time, after)) {\n\t\t\t\t\t// get the first item with that time\n\t\t\t\t\tfor (let i = index; i >= 0; i--) {\n\t\t\t\t\t\tif (EQ(this._timeline[i].time, after)) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t} else if (this._timeline.length === 1) {\n\t\t\t// the first item's time\n\t\t\tif (GTE(this._timeline[0].time, after)) {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events before or equal to the given time.\n\t * @param  time  The time to cancel before.\n\t */\n\tcancelBefore(time: number): this {\n\t\tconst index = this._search(time);\n\t\tif (index >= 0) {\n\t\t\tthis._timeline = this._timeline.slice(index + 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the previous event if there is one. null otherwise\n\t * @param  event The event to find the previous one of\n\t * @return The event right before the given event\n\t */\n\tpreviousEvent(event: GenericEvent): GenericEvent | null {\n\t\tconst index = this._timeline.indexOf(event);\n\t\tif (index > 0) {\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Does a binary search on the timeline array and returns the\n\t * nearest event index whose time is after or equal to the given time.\n\t * If a time is searched before the first index in the timeline, -1 is returned.\n\t * If the time is after the end, the index of the last item is returned.\n\t */\n\tprotected _search(time: number, param: TimelineSearchParam = \"time\"): number {\n\t\tif (this._timeline.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tlet beginning = 0;\n\t\tconst len = this._timeline.length;\n\t\tlet end = len;\n\t\tif (len > 0 && this._timeline[len - 1][param] <= time) {\n\t\t\treturn len - 1;\n\t\t}\n\t\twhile (beginning < end) {\n\t\t\t// calculate the midpoint for roughly equal partition\n\t\t\tlet midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t\tconst event = this._timeline[midPoint];\n\t\t\tconst nextEvent = this._timeline[midPoint + 1];\n\t\t\tif (EQ(event[param], time)) {\n\t\t\t\t// choose the last one that has the same time\n\t\t\t\tfor (let i = midPoint; i < this._timeline.length; i++) {\n\t\t\t\t\tconst testEvent = this._timeline[i];\n\t\t\t\t\tif (EQ(testEvent[param], time)) {\n\t\t\t\t\t\tmidPoint = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn midPoint;\n\t\t\t} else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n\t\t\t\treturn midPoint;\n\t\t\t} else if (GT(event[param], time)) {\n\t\t\t\t// search lower\n\t\t\t\tend = midPoint;\n\t\t\t} else {\n\t\t\t\t// search upper\n\t\t\t\tbeginning = midPoint + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Internal iterator. Applies extra safety checks for\n\t * removing items from the array.\n\t */\n\tprivate _iterate(\n\t\tcallback: (event: GenericEvent) => void,\n\t\tlowerBound = 0, upperBound = this._timeline.length - 1,\n\t): void {\n\t\tthis._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n\t}\n\n\t/**\n\t * Iterate over everything in the array\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: (event: GenericEvent) => void): this {\n\t\tthis._iterate(callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or before the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBefore(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array after the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAfter(time: Seconds, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst lowerBound = this._search(time);\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array between the startTime and endTime.\n\t * The timerange is inclusive of the startTime, but exclusive of the endTime.\n\t * range = [startTime, endTime).\n\t * @param  startTime The time to check if items are before\n\t * @param  endTime The end of the test interval.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachBetween(startTime: number, endTime: number, callback: (event: GenericEvent) => void): this {\n\t\tlet lowerBound = this._search(startTime);\n\t\tlet upperBound = this._search(endTime);\n\t\tif (lowerBound !== -1 && upperBound !== -1) {\n\t\t\tif (this._timeline[lowerBound].time !== startTime) {\n\t\t\t\tlowerBound += 1;\n\t\t\t}\n\t\t\t// exclusive of the end time\n\t\t\tif (this._timeline[upperBound].time === endTime) {\n\t\t\t\tupperBound -= 1;\n\t\t\t}\n\t\t\tthis._iterate(callback, lowerBound, upperBound);\n\t\t} else if (lowerBound === -1) {\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at or after the given time. Similar to\n\t * forEachAfter, but includes the item(s) at the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tlet lowerBound = this._search(time);\n\t\t// work backwards until the event time is less than time\n\t\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n\t\t\tlowerBound--;\n\t\t}\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array at the given time\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: (event: GenericEvent) => void): this {\n\t\t// iterate over the items in reverse so that removing an item doesn't break things\n\t\tconst upperBound = this._search(time);\n\t\tif (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n\t\t\tlet lowerBound = upperBound;\n\t\t\tfor (let i = upperBound; i >= 0; i--) {\n\t\t\t\tif (EQ(this._timeline[i].time, time)) {\n\t\t\t\t\tlowerBound = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._iterate(event => {\n\t\t\t\tcallback(event);\n\t\t\t}, lowerBound, upperBound);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._timeline = [];\n\t\treturn this;\n\t}\n}\n","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n\ntype Context = import(\"./Context\").Context;\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb: (ctx: Context) => void): void {\n\tnotifyNewContext.push(cb);\n}\n\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx: Context): void {\n\t// add any additional modules\n\tnotifyNewContext.forEach(cb => cb(ctx));\n}\n\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyCloseContext: Array<(ctx: Context) => void> = [];\n\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb: (ctx: Context) => void): void {\n\tnotifyCloseContext.push(cb);\n}\n\nexport function closeContext(ctx: Context): void {\n\t// add any additional modules\n\tnotifyCloseContext.forEach(cb => cb(ctx));\n}\n","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n\nexport interface EmitterEventObject {\n\t[event: string]: Array<(...args: any[]) => void>;\n}\n\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter<EventType extends string = string> extends Tone {\n\n\treadonly name: string = \"Emitter\";\n\n\t/**\n\t * Private container for the events\n\t */\n\tprivate _events?: EmitterEventObject;\n\n\t/**\n\t * Bind a callback to a specific event.\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\ton(event: EventType, callback: (...args: any[]) => void): this {\n\t\t// split the event\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (!this._events.hasOwnProperty(eventName)) {\n\t\t\t\tthis._events[eventName] = [];\n\t\t\t}\n\t\t\tthis._events[eventName].push(callback);\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Bind a callback which is only invoked once\n\t * @param  event     The name of the event to listen for.\n\t * @param  callback  The callback to invoke when the event is emitted\n\t */\n\tonce(event: EventType, callback: (...args: any[]) => void): this {\n\t\tconst boundCallback = (...args: any[]) => {\n\t\t\t// invoke the callback\n\t\t\tcallback(...args);\n\t\t\t// remove the event\n\t\t\tthis.off(event, boundCallback);\n\t\t};\n\t\tthis.on(event, boundCallback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove the event listener.\n\t * @param  event     The event to stop listening to.\n\t * @param  callback  The callback which was bound to the event with Emitter.on.\n\t *                   If no callback is given, all callbacks events are removed.\n\t */\n\toff(event: EventType, callback?: (...args: any[]) => void): this {\n\t\tconst events = event.split(/\\W+/);\n\t\tevents.forEach(eventName => {\n\t\t\tif (isUndef(this._events)) {\n\t\t\t\tthis._events = {};\n\t\t\t}\n\t\t\tif (this._events.hasOwnProperty(event)) {\n\t\t\t\tif (isUndef(callback)) {\n\t\t\t\t\tthis._events[event] = [];\n\t\t\t\t} else {\n\t\t\t\t\tconst eventList = this._events[event];\n\t\t\t\t\tfor (let i = eventList.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (eventList[i] === callback) {\n\t\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke all of the callbacks bound to the event\n\t * with any arguments passed in.\n\t * @param  event  The name of the event.\n\t * @param args The arguments to pass to the functions listening.\n\t */\n\temit(event, ...args: any[]): this {\n\t\tif (this._events) {\n\t\t\tif (this._events.hasOwnProperty(event)) {\n\t\t\t\tconst eventList = this._events[event].slice(0);\n\t\t\t\tfor (let i = 0, len = eventList.length; i < len; i++) {\n\t\t\t\t\teventList[i].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add Emitter functions (on/off/emit) to the object\n\t */\n\tstatic mixin(constr: any): void {\n\t\t// instance._events = {};\n\t\t[\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n\t\t\tconst property = Object.getOwnPropertyDescriptor(Emitter.prototype, name) as PropertyDescriptor;\n\t\t\tObject.defineProperty(constr.prototype, name, property);\n\t\t});\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events = undefined;\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Emitter } from \"../util/Emitter\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\n// these are either not used in Tone.js or deprecated and not implemented.\nexport type ExcludedFromBaseAudioContext =\n\t| \"onstatechange\"\n\t| \"addEventListener\"\n\t| \"removeEventListener\"\n\t| \"listener\"\n\t| \"dispatchEvent\"\n\t| \"audioWorklet\"\n\t| \"destination\"\n\t| \"createScriptProcessor\";\n\n// the subset of the BaseAudioContext which Tone.Context implements.\nexport type BaseAudioContextSubset = Omit<\nBaseAudioContext,\nExcludedFromBaseAudioContext\n>;\n\nexport type ContextLatencyHint = AudioContextLatencyCategory;\n\nexport abstract class BaseContext\n\textends Emitter<\"statechange\" | \"tick\">\n\timplements BaseAudioContextSubset {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tabstract createAnalyser(): AnalyserNode;\n\n\tabstract createOscillator(): OscillatorNode;\n\n\tabstract createBufferSource(): AudioBufferSourceNode;\n\n\tabstract createBiquadFilter(): BiquadFilterNode;\n\n\tabstract createBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer;\n\n\tabstract createChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode;\n\n\tabstract createChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode;\n\n\tabstract createConstantSource(): ConstantSourceNode;\n\n\tabstract createConvolver(): ConvolverNode;\n\n\tabstract createDelay(_maxDelayTime?: number | undefined): DelayNode;\n\n\tabstract createDynamicsCompressor(): DynamicsCompressorNode;\n\n\tabstract createGain(): GainNode;\n\n\tabstract createIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode;\n\n\tabstract createPanner(): PannerNode;\n\n\tabstract createPeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave;\n\n\tabstract createStereoPanner(): StereoPannerNode;\n\n\tabstract createWaveShaper(): WaveShaperNode;\n\n\tabstract createMediaStreamSource(\n\t\t_stream: MediaStream\n\t): MediaStreamAudioSourceNode;\n\n\tabstract createMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode;\n\n\tabstract createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n\n\tabstract decodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer>;\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tabstract createAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode;\n\n\tabstract get rawContext(): AnyAudioContext;\n\n\tabstract async addAudioWorkletModule(\n\t\t_url: string,\n\t\t_name: string\n\t): Promise<void>;\n\n\tabstract lookAhead: number;\n\n\tabstract latencyHint: ContextLatencyHint | Seconds;\n\n\tabstract resume(): Promise<void>;\n\n\tabstract setTimeout(\n\t\t_fn: (...args: any[]) => void,\n\t\t_timeout: Seconds\n\t): number;\n\n\tabstract clearTimeout(_id: number): this;\n\n\tabstract setInterval(\n\t\t_fn: (...args: any[]) => void,\n\t\t_interval: Seconds\n\t): number;\n\n\tabstract clearInterval(_id: number): this;\n\n\tabstract getConstant(_val: number): AudioBufferSourceNode;\n\n\tabstract get currentTime(): Seconds;\n\n\tabstract get state(): AudioContextState;\n\n\tabstract get sampleRate(): number;\n\n\tabstract get listener(): Listener;\n\n\tabstract get transport(): Transport;\n\n\tabstract get draw(): Draw;\n\n\tabstract get destination(): Destination;\n\n\tabstract now(): Seconds;\n\n\tabstract immediate(): Seconds;\n\n\t/*\n\t * This is a placeholder so that JSON.stringify does not throw an error\n\t * This matches what JSON.stringify(audioContext) returns on a native\n\t * audioContext instance.\n\t */\n\ttoJSON(): Record<string, any> {\n\t\treturn {};\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { Ticker, TickerClockSource } from \"../clock/Ticker\";\nimport { Seconds } from \"../type/Units\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport {\n\tAnyAudioContext,\n\tcreateAudioContext,\n\tcreateAudioWorkletNode,\n} from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext, ContextLatencyHint } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Destination = import(\"./Destination\").Destination;\ntype Listener = import(\"./Listener\").Listener;\ntype Draw = import(\"../util/Draw\").Draw;\n\nexport interface ContextOptions {\n\tclockSource: TickerClockSource;\n\tlatencyHint: ContextLatencyHint;\n\tlookAhead: Seconds;\n\tupdateInterval: Seconds;\n\tcontext: AnyAudioContext;\n}\n\nexport interface ContextTimeoutEvent {\n\tcallback: (...args: any[]) => void;\n\tid: number;\n\ttime: Seconds;\n}\n\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n\treadonly name: string = \"Context\";\n\n\t/**\n\t * The amount of time into the future events are scheduled. Giving Web Audio\n\t * a short amount of time into the future to schedule events can reduce clicks and\n\t * improve performance. This value can be set to 0 to get the lowest latency.\n\t */\n\tlookAhead: Seconds;\n\n\t/**\n\t * private reference to the BaseAudioContext\n\t */\n\tprotected readonly _context: AnyAudioContext;\n\n\t/**\n\t * A reliable callback method\n\t */\n\tprivate readonly _ticker: Ticker;\n\n\t/**\n\t * The default latency hint\n\t */\n\tprivate _latencyHint!: ContextLatencyHint | Seconds;\n\n\t/**\n\t * An object containing all of the constants AudioBufferSourceNodes\n\t */\n\tprivate _constants = new Map<number, AudioBufferSourceNode>();\n\n\t/**\n\t * All of the setTimeout events.\n\t */\n\tprivate _timeouts: Timeline<ContextTimeoutEvent> = new Timeline();\n\n\t/**\n\t * The timeout id counter\n\t */\n\tprivate _timeoutIds = 0;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _transport!: Transport;\n\n\t/**\n\t * A reference the Listener singleton belonging to this context\n\t */\n\tprivate _listener!: Listener;\n\n\t/**\n\t * A reference the Destination singleton belonging to this context\n\t */\n\tprivate _destination!: Destination;\n\n\t/**\n\t * A reference the Transport singleton belonging to this context\n\t */\n\tprivate _draw!: Draw;\n\n\t/**\n\t * Private indicator if the context has been initialized\n\t */\n\tprivate _initialized = false;\n\n\t/**\n\t * Indicates if the context is an OfflineAudioContext or an AudioContext\n\t */\n\treadonly isOffline: boolean = false;\n\n\tconstructor(context?: AnyAudioContext);\n\tconstructor(options?: Partial<ContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(Context.getDefaults(), arguments, [\n\t\t\t\"context\",\n\t\t]);\n\n\t\tif (options.context) {\n\t\t\tthis._context = options.context;\n\t\t} else {\n\t\t\tthis._context = createAudioContext({\n\t\t\t\tlatencyHint: options.latencyHint,\n\t\t\t});\n\t\t}\n\n\t\tthis._ticker = new Ticker(\n\t\t\tthis.emit.bind(this, \"tick\"),\n\t\t\toptions.clockSource,\n\t\t\toptions.updateInterval\n\t\t);\n\t\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t\t// fwd events from the context\n\t\tthis._context.onstatechange = () => {\n\t\t\tthis.emit(\"statechange\", this.state);\n\t\t};\n\n\t\tthis._setLatencyHint(options.latencyHint);\n\t\tthis.lookAhead = options.lookAhead;\n\t}\n\n\tstatic getDefaults(): ContextOptions {\n\t\treturn {\n\t\t\tclockSource: \"worker\",\n\t\t\tlatencyHint: \"interactive\",\n\t\t\tlookAhead: 0.1,\n\t\t\tupdateInterval: 0.05,\n\t\t} as ContextOptions;\n\t}\n\n\t/**\n\t * Finish setting up the context. **You usually do not need to do this manually.**\n\t */\n\tprivate initialize(): this {\n\t\tif (!this._initialized) {\n\t\t\t// add any additional modules\n\t\t\tinitializeContext(this);\n\t\t\tthis._initialized = true;\n\t\t}\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn this._context.createAnalyser();\n\t}\n\tcreateOscillator(): OscillatorNode {\n\t\treturn this._context.createOscillator();\n\t}\n\tcreateBufferSource(): AudioBufferSourceNode {\n\t\treturn this._context.createBufferSource();\n\t}\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn this._context.createBiquadFilter();\n\t}\n\tcreateBuffer(\n\t\tnumberOfChannels: number,\n\t\tlength: number,\n\t\tsampleRate: number\n\t): AudioBuffer {\n\t\treturn this._context.createBuffer(numberOfChannels, length, sampleRate);\n\t}\n\tcreateChannelMerger(\n\t\tnumberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn this._context.createChannelMerger(numberOfInputs);\n\t}\n\tcreateChannelSplitter(\n\t\tnumberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn this._context.createChannelSplitter(numberOfOutputs);\n\t}\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn this._context.createConstantSource();\n\t}\n\tcreateConvolver(): ConvolverNode {\n\t\treturn this._context.createConvolver();\n\t}\n\tcreateDelay(maxDelayTime?: number | undefined): DelayNode {\n\t\treturn this._context.createDelay(maxDelayTime);\n\t}\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn this._context.createDynamicsCompressor();\n\t}\n\tcreateGain(): GainNode {\n\t\treturn this._context.createGain();\n\t}\n\tcreateIIRFilter(\n\t\tfeedForward: number[] | Float32Array,\n\t\tfeedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\t// @ts-ignore\n\t\treturn this._context.createIIRFilter(feedForward, feedback);\n\t}\n\tcreatePanner(): PannerNode {\n\t\treturn this._context.createPanner();\n\t}\n\tcreatePeriodicWave(\n\t\treal: number[] | Float32Array,\n\t\timag: number[] | Float32Array,\n\t\tconstraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn this._context.createPeriodicWave(real, imag, constraints);\n\t}\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn this._context.createStereoPanner();\n\t}\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn this._context.createWaveShaper();\n\t}\n\tcreateMediaStreamSource(stream: MediaStream): MediaStreamAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamSource(stream);\n\t}\n\tcreateMediaElementSource(\n\t\telement: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaElementSource(element);\n\t}\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\tassert(\n\t\t\tisAudioContext(this._context),\n\t\t\t\"Not available if OfflineAudioContext\"\n\t\t);\n\t\tconst context = this._context as AudioContext;\n\t\treturn context.createMediaStreamDestination();\n\t}\n\tdecodeAudioData(audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn this._context.decodeAudioData(audioData);\n\t}\n\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget state(): AudioContextState {\n\t\treturn this._context.state;\n\t}\n\t/**\n\t * The current time in seconds of the AudioContext.\n\t */\n\tget sampleRate(): number {\n\t\treturn this._context.sampleRate;\n\t}\n\n\t/**\n\t * The listener\n\t */\n\tget listener(): Listener {\n\t\tthis.initialize();\n\t\treturn this._listener;\n\t}\n\tset listener(l) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The listener cannot be set after initialization.\"\n\t\t);\n\t\tthis._listener = l;\n\t}\n\n\t/**\n\t * There is only one Transport per Context. It is created on initialization.\n\t */\n\tget transport(): Transport {\n\t\tthis.initialize();\n\t\treturn this._transport;\n\t}\n\tset transport(t: Transport) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The transport cannot be set after initialization.\"\n\t\t);\n\t\tthis._transport = t;\n\t}\n\n\t/**\n\t * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n\t */\n\tget draw(): Draw {\n\t\tthis.initialize();\n\t\treturn this._draw;\n\t}\n\tset draw(d) {\n\t\tassert(!this._initialized, \"Draw cannot be set after initialization.\");\n\t\tthis._draw = d;\n\t}\n\n\t/**\n\t * A reference to the Context's destination node.\n\t */\n\tget destination(): Destination {\n\t\tthis.initialize();\n\t\treturn this._destination;\n\t}\n\tset destination(d: Destination) {\n\t\tassert(\n\t\t\t!this._initialized,\n\t\t\t\"The destination cannot be set after initialization.\"\n\t\t);\n\t\tthis._destination = d;\n\t}\n\n\t//--------------------------------------------\n\t// AUDIO WORKLET\n\t//--------------------------------------------\n\n\t/**\n\t * Maps a module name to promise of the addModule method\n\t */\n\tprivate _workletModules: Map<string, Promise<void>> = new Map();\n\n\t/**\n\t * Create an audio worklet node from a name and options. The module\n\t * must first be loaded using [[addAudioWorkletModule]].\n\t */\n\tcreateAudioWorkletNode(\n\t\tname: string,\n\t\toptions?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn createAudioWorkletNode(this.rawContext, name, options);\n\t}\n\n\t/**\n\t * Add an AudioWorkletProcessor module\n\t * @param url The url of the module\n\t * @param name The name of the module\n\t */\n\tasync addAudioWorkletModule(url: string, name: string): Promise<void> {\n\t\tassert(\n\t\t\tisDefined(this.rawContext.audioWorklet),\n\t\t\t\"AudioWorkletNode is only available in a secure context (https or localhost)\"\n\t\t);\n\t\tif (!this._workletModules.has(name)) {\n\t\t\tthis._workletModules.set(\n\t\t\t\tname,\n\t\t\t\tthis.rawContext.audioWorklet.addModule(url)\n\t\t\t);\n\t\t}\n\t\tawait this._workletModules.get(name);\n\t}\n\n\t/**\n\t * Returns a promise which resolves when all of the worklets have been loaded on this context\n\t */\n\tprotected async workletsAreReady(): Promise<void> {\n\t\tconst promises: Promise<void>[] = [];\n\t\tthis._workletModules.forEach((promise) => promises.push(promise));\n\t\tawait Promise.all(promises);\n\t}\n\n\t//---------------------------\n\t// TICKER\n\t//---------------------------\n\n\t/**\n\t * How often the interval callback is invoked.\n\t * This number corresponds to how responsive the scheduling\n\t * can be. context.updateInterval + context.lookAhead gives you the\n\t * total latency between scheduling an event and hearing it.\n\t */\n\tget updateInterval(): Seconds {\n\t\treturn this._ticker.updateInterval;\n\t}\n\tset updateInterval(interval: Seconds) {\n\t\tthis._ticker.updateInterval = interval;\n\t}\n\n\t/**\n\t * What the source of the clock is, either \"worker\" (default),\n\t * \"timeout\", or \"offline\" (none).\n\t */\n\tget clockSource(): TickerClockSource {\n\t\treturn this._ticker.type;\n\t}\n\tset clockSource(type: TickerClockSource) {\n\t\tthis._ticker.type = type;\n\t}\n\n\t/**\n\t * The type of playback, which affects tradeoffs between audio\n\t * output latency and responsiveness.\n\t * In addition to setting the value in seconds, the latencyHint also\n\t * accepts the strings \"interactive\" (prioritizes low latency),\n\t * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t * latency and performance).\n\t * @example\n\t * // prioritize sustained playback\n\t * const context = new Tone.Context({ latencyHint: \"playback\" });\n\t * // set this context as the global Context\n\t * Tone.setContext(context);\n\t * // the global context is gettable with Tone.getContext()\n\t * console.log(Tone.getContext().latencyHint);\n\t */\n\tget latencyHint(): ContextLatencyHint | Seconds {\n\t\treturn this._latencyHint;\n\t}\n\n\t/**\n\t * Update the lookAhead and updateInterval based on the latencyHint\n\t */\n\tprivate _setLatencyHint(hint: ContextLatencyHint | Seconds): void {\n\t\tlet lookAheadValue = 0;\n\t\tthis._latencyHint = hint;\n\t\tif (isString(hint)) {\n\t\t\tswitch (hint) {\n\t\t\t\tcase \"interactive\":\n\t\t\t\t\tlookAheadValue = 0.1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"playback\":\n\t\t\t\t\tlookAheadValue = 0.5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"balanced\":\n\t\t\t\t\tlookAheadValue = 0.25;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.lookAhead = lookAheadValue;\n\t\tthis.updateInterval = lookAheadValue / 2;\n\t}\n\n\t/**\n\t * The unwrapped AudioContext or OfflineAudioContext\n\t */\n\tget rawContext(): AnyAudioContext {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * The current audio context time plus a short [[lookAhead]].\n\t */\n\tnow(): Seconds {\n\t\treturn this._context.currentTime + this.lookAhead;\n\t}\n\n\t/**\n\t * The current audio context time without the [[lookAhead]].\n\t * In most cases it is better to use [[now]] instead of [[immediate]] since\n\t * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n\t * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n\t * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n\t */\n\timmediate(): Seconds {\n\t\treturn this._context.currentTime;\n\t}\n\n\t/**\n\t * Starts the audio context from a suspended state. This is required\n\t * to initially start the AudioContext. See [[Tone.start]]\n\t */\n\tresume(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\treturn this._context.resume();\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\t/**\n\t * Close the context. Once closed, the context can no longer be used and\n\t * any AudioNodes created from the context will be silent.\n\t */\n\tasync close(): Promise<void> {\n\t\tif (isAudioContext(this._context)) {\n\t\t\tawait this._context.close();\n\t\t}\n\t\tif (this._initialized) {\n\t\t\tcloseContext(this);\n\t\t}\n\t}\n\n\t/**\n\t * **Internal** Generate a looped buffer at some constant value.\n\t */\n\tgetConstant(val: number): AudioBufferSourceNode {\n\t\tif (this._constants.has(val)) {\n\t\t\treturn this._constants.get(val) as AudioBufferSourceNode;\n\t\t} else {\n\t\t\tconst buffer = this._context.createBuffer(\n\t\t\t\t1,\n\t\t\t\t128,\n\t\t\t\tthis._context.sampleRate\n\t\t\t);\n\t\t\tconst arr = buffer.getChannelData(0);\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = val;\n\t\t\t}\n\t\t\tconst constant = this._context.createBufferSource();\n\t\t\tconstant.channelCount = 1;\n\t\t\tconstant.channelCountMode = \"explicit\";\n\t\t\tconstant.buffer = buffer;\n\t\t\tconstant.loop = true;\n\t\t\tconstant.start(0);\n\t\t\tthis._constants.set(val, constant);\n\t\t\treturn constant;\n\t\t}\n\t}\n\n\t/**\n\t * Clean up. Also closes the audio context.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._ticker.dispose();\n\t\tthis._timeouts.dispose();\n\t\tObject.keys(this._constants).map((val) =>\n\t\t\tthis._constants[val].disconnect()\n\t\t);\n\t\treturn this;\n\t}\n\n\t//---------------------------\n\t// TIMEOUTS\n\t//---------------------------\n\n\t/**\n\t * The private loop which keeps track of the context scheduled timeouts\n\t * Is invoked from the clock source\n\t */\n\tprivate _timeoutLoop(): void {\n\t\tconst now = this.now();\n\t\tlet firstEvent = this._timeouts.peek();\n\t\twhile (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n\t\t\t// invoke the callback\n\t\t\tfirstEvent.callback();\n\t\t\t// shift the first event off\n\t\t\tthis._timeouts.shift();\n\t\t\t// get the next one\n\t\t\tfirstEvent = this._timeouts.peek();\n\t\t}\n\t}\n\n\t/**\n\t * A setTimeout which is guaranteed by the clock source.\n\t * Also runs in the offline context.\n\t * @param  fn       The callback to invoke\n\t * @param  timeout  The timeout in seconds\n\t * @returns ID to use when invoking Context.clearTimeout\n\t */\n\tsetTimeout(fn: (...args: any[]) => void, timeout: Seconds): number {\n\t\tthis._timeoutIds++;\n\t\tconst now = this.now();\n\t\tthis._timeouts.add({\n\t\t\tcallback: fn,\n\t\t\tid: this._timeoutIds,\n\t\t\ttime: now + timeout,\n\t\t});\n\t\treturn this._timeoutIds;\n\t}\n\n\t/**\n\t * Clears a previously scheduled timeout with Tone.context.setTimeout\n\t * @param  id  The ID returned from setTimeout\n\t */\n\tclearTimeout(id: number): this {\n\t\tthis._timeouts.forEach((event) => {\n\t\t\tif (event.id === id) {\n\t\t\t\tthis._timeouts.remove(event);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clear the function scheduled by [[setInterval]]\n\t */\n\tclearInterval(id: number): this {\n\t\treturn this.clearTimeout(id);\n\t}\n\n\t/**\n\t * Adds a repeating event to the context's callback clock\n\t */\n\tsetInterval(fn: (...args: any[]) => void, interval: Seconds): number {\n\t\tconst id = ++this._timeoutIds;\n\t\tconst intervalFn = () => {\n\t\t\tconst now = this.now();\n\t\t\tthis._timeouts.add({\n\t\t\t\tcallback: () => {\n\t\t\t\t\t// invoke the callback\n\t\t\t\t\tfn();\n\t\t\t\t\t// invoke the event to repeat it\n\t\t\t\t\tintervalFn();\n\t\t\t\t},\n\t\t\t\tid,\n\t\t\t\ttime: now + interval,\n\t\t\t});\n\t\t};\n\t\t// kick it off\n\t\tintervalFn();\n\t\treturn id;\n\t}\n}\n","import { BaseContext } from \"./BaseContext\";\nimport { Seconds } from \"../type/Units\";\nimport { AnyAudioContext } from \"./AudioContext\";\n\ntype Draw = import(\"../util/Draw\").Draw;\ntype Destination = import(\"./Destination\").Destination;\ntype Transport = import(\"../clock/Transport\").Transport;\ntype Listener = import(\"./Listener\").Listener;\n\nexport class DummyContext extends BaseContext {\n\t//---------------------------\n\t// BASE AUDIO CONTEXT METHODS\n\t//---------------------------\n\tcreateAnalyser(): AnalyserNode {\n\t\treturn {} as AnalyserNode;\n\t}\n\n\tcreateOscillator(): OscillatorNode {\n\t\treturn {} as OscillatorNode;\n\t}\n\n\tcreateBufferSource() {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tcreateBiquadFilter(): BiquadFilterNode {\n\t\treturn {} as BiquadFilterNode;\n\t}\n\n\tcreateBuffer(\n\t\t_numberOfChannels: number,\n\t\t_length: number,\n\t\t_sampleRate: number\n\t): AudioBuffer {\n\t\treturn {} as AudioBuffer;\n\t}\n\n\tcreateChannelMerger(\n\t\t_numberOfInputs?: number | undefined\n\t): ChannelMergerNode {\n\t\treturn {} as ChannelMergerNode;\n\t}\n\n\tcreateChannelSplitter(\n\t\t_numberOfOutputs?: number | undefined\n\t): ChannelSplitterNode {\n\t\treturn {} as ChannelSplitterNode;\n\t}\n\n\tcreateConstantSource(): ConstantSourceNode {\n\t\treturn {} as ConstantSourceNode;\n\t}\n\n\tcreateConvolver(): ConvolverNode {\n\t\treturn {} as ConvolverNode;\n\t}\n\n\tcreateDelay(_maxDelayTime?: number | undefined): DelayNode {\n\t\treturn {} as DelayNode;\n\t}\n\n\tcreateDynamicsCompressor(): DynamicsCompressorNode {\n\t\treturn {} as DynamicsCompressorNode;\n\t}\n\n\tcreateGain(): GainNode {\n\t\treturn {} as GainNode;\n\t}\n\n\tcreateIIRFilter(\n\t\t_feedForward: number[] | Float32Array,\n\t\t_feedback: number[] | Float32Array\n\t): IIRFilterNode {\n\t\treturn {} as IIRFilterNode;\n\t}\n\n\tcreatePanner(): PannerNode {\n\t\treturn {} as PannerNode;\n\t}\n\n\tcreatePeriodicWave(\n\t\t_real: number[] | Float32Array,\n\t\t_imag: number[] | Float32Array,\n\t\t_constraints?: PeriodicWaveConstraints | undefined\n\t): PeriodicWave {\n\t\treturn {} as PeriodicWave;\n\t}\n\n\tcreateStereoPanner(): StereoPannerNode {\n\t\treturn {} as StereoPannerNode;\n\t}\n\n\tcreateWaveShaper(): WaveShaperNode {\n\t\treturn {} as WaveShaperNode;\n\t}\n\n\tcreateMediaStreamSource(_stream: MediaStream): MediaStreamAudioSourceNode {\n\t\treturn {} as MediaStreamAudioSourceNode;\n\t}\n\n\tcreateMediaElementSource(\n\t\t_element: HTMLMediaElement\n\t): MediaElementAudioSourceNode {\n\t\treturn {} as MediaElementAudioSourceNode;\n\t}\n\n\tcreateMediaStreamDestination(): MediaStreamAudioDestinationNode {\n\t\treturn {} as MediaStreamAudioDestinationNode;\n\t}\n\n\tdecodeAudioData(_audioData: ArrayBuffer): Promise<AudioBuffer> {\n\t\treturn Promise.resolve({} as AudioBuffer);\n\t}\n\n\t//---------------------------\n\t// TONE AUDIO CONTEXT METHODS\n\t//---------------------------\n\n\tcreateAudioWorkletNode(\n\t\t_name: string,\n\t\t_options?: Partial<AudioWorkletNodeOptions>\n\t): AudioWorkletNode {\n\t\treturn {} as AudioWorkletNode;\n\t}\n\n\tget rawContext(): AnyAudioContext {\n\t\treturn {} as AnyAudioContext;\n\t}\n\n\tasync addAudioWorkletModule(_url: string, _name: string): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tlookAhead = 0;\n\n\tlatencyHint = 0;\n\n\tresume(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tsetTimeout(_fn: (...args: any[]) => void, _timeout: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearTimeout(_id: number): this {\n\t\treturn this;\n\t}\n\n\tsetInterval(_fn: (...args: any[]) => void, _interval: Seconds): number {\n\t\treturn 0;\n\t}\n\n\tclearInterval(_id: number): this {\n\t\treturn this;\n\t}\n\n\tgetConstant(_val: number): AudioBufferSourceNode {\n\t\treturn {} as AudioBufferSourceNode;\n\t}\n\n\tget currentTime(): Seconds {\n\t\treturn 0;\n\t}\n\n\tget state(): AudioContextState {\n\t\treturn {} as AudioContextState;\n\t}\n\n\tget sampleRate(): number {\n\t\treturn 0;\n\t}\n\n\tget listener(): Listener {\n\t\treturn {} as Listener;\n\t}\n\n\tget transport(): Transport {\n\t\treturn {} as Transport;\n\t}\n\n\tget draw(): Draw {\n\t\treturn {} as Draw;\n\t}\n\tset draw(_d) {}\n\n\tget destination(): Destination {\n\t\treturn {} as Destination;\n\t}\n\tset destination(_d: Destination) {}\n\n\tnow() {\n\t\treturn 0;\n\t}\n\n\timmediate() {\n\t\treturn 0;\n\t}\n\n\treadonly isOffline: boolean = false;\n}\n","import { isArray } from \"./TypeCheck\";\n\n// return an interface which excludes certain keys\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => readOnly(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\tenumerable: true,\n\t\t\twritable: false,\n\t\t});\n\t}\n}\n\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target: object, property: string | string[]): void {\n\tif (isArray(property)) {\n\t\tproperty.forEach(str => writable(target, str));\n\t} else {\n\t\tObject.defineProperty(target, property, {\n\t\t\twritable: true,\n\t\t});\n\t}\n}\n\nexport const noOp: (...args: any[]) => any = () => {\n\t// no operation here!\n};\n\n/**\n * Recursive Partial taken from here: https://stackoverflow.com/a/51365037\n */\nexport type RecursivePartial<T> = {\n\t[P in keyof T]?:\n\tT[P] extends Array<infer U> ? Array<RecursivePartial<U>> :\n\t\tT[P] extends object ? RecursivePartial<T[P]> :\n\t\t\tT[P];\n};\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { Samples, Seconds } from \"../type/Units\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n\ninterface ToneAudioBufferOptions {\n\turl?: string | AudioBuffer | ToneAudioBuffer;\n\treverse: boolean;\n\tonload: (buffer?: ToneAudioBuffer) => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffer\";\n\n\t/**\n\t * stores the loaded AudioBuffer\n\t */\n\tprivate _buffer?: AudioBuffer;\n\n\t/**\n\t * indicates if the buffer should be reversed or not\n\t */\n\tprivate _reversed!: boolean;\n\n\t/**\n\t * Callback when the buffer is loaded.\n\t */\n\tonload: (buffer: ToneAudioBuffer) => void = noOp;\n\n\t/**\n\t *\n\t * @param url The url to load, or the audio buffer to set.\n\t * @param onload A callback which is invoked after the buffer is loaded.\n\t *                           It's recommended to use `ToneAudioBuffer.on('load', callback)` instead\n\t *                           since it will give you a callback when _all_ buffers are loaded.\n\t * @param onerror The callback to invoke if there is an error\n\t */\n\tconstructor(\n\t\turl?: string | ToneAudioBuffer | AudioBuffer,\n\t\tonload?: (buffer: ToneAudioBuffer) => void,\n\t\tonerror?: (error: Error) => void,\n\t);\n\tconstructor(options?: Partial<ToneAudioBufferOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tconst options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n\n\t\tthis.reverse = options.reverse;\n\t\tthis.onload = options.onload;\n\n\t\tif (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n\t\t\tthis.set(options.url);\n\t\t} else if (isString(options.url)) {\n\t\t\t// initiate the download\n\t\t\tthis.load(options.url).catch(options.onerror);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneAudioBufferOptions {\n\t\treturn {\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\treverse: false,\n\t\t};\n\t}\n\n\t/**\n\t * The sample rate of the AudioBuffer\n\t */\n\tget sampleRate(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.sampleRate;\n\t\t} else {\n\t\t\treturn getContext().sampleRate;\n\t\t}\n\t}\n\n\t/**\n\t * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n\t */\n\tset(buffer: AudioBuffer | ToneAudioBuffer): this {\n\t\tif (buffer instanceof ToneAudioBuffer) {\n\t\t\t// if it's loaded, set it\n\t\t\tif (buffer.loaded) {\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\t// otherwise when it's loaded, invoke it's callback\n\t\t\t\tbuffer.onload = () => {\n\t\t\t\t\tthis.set(buffer);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\tthis._buffer = buffer;\n\t\t}\n\t\t// reverse it initially\n\t\tif (this._reversed) {\n\t\t\tthis._reverse();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The audio buffer stored in the object.\n\t */\n\tget(): AudioBuffer | undefined {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n\t * Invokes the callback once the audio buffer loads.\n\t * @param url The url of the buffer to load. filetype support depends on the browser.\n\t * @returns A Promise which resolves with this ToneAudioBuffer\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tconst doneLoading: Promise<void> = ToneAudioBuffer.load(url).then(audioBuffer => {\n\t\t\tthis.set(audioBuffer);\n\t\t\t// invoke the onload method\n\t\t\tthis.onload(this);\n\t\t});\n\t\tToneAudioBuffer.downloads.push(doneLoading);\n\t\ttry {\n\t\t\tawait doneLoading;\n\t\t} finally {\n\t\t\t// remove the downloaded file\n\t\t\tconst index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n\t\t\tToneAudioBuffer.downloads.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffer = undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the audio buffer from the array.\n\t * To create a multichannel AudioBuffer, pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t */\n\tfromArray(array: Float32Array | Float32Array[]): this {\n\t\tconst isMultidimensional = isArray(array) && array[0].length > 0;\n\t\tconst channels = isMultidimensional ? array.length : 1;\n\t\tconst len = isMultidimensional ? (array[0] as Float32Array).length : array.length;\n\t\tconst context = getContext();\n\t\tconst buffer = context.createBuffer(channels, len, context.sampleRate);\n\t\tconst multiChannelArray: Float32Array[] = !isMultidimensional && channels === 1 ?\n\t\t\t[array as Float32Array] : array as Float32Array[];\n\n\t\tfor (let c = 0; c < channels; c++) {\n\t\t\tbuffer.copyToChannel(multiChannelArray[c], c);\n\t\t}\n\t\tthis._buffer = buffer;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sums multiple channels into 1 channel\n\t * @param chanNum Optionally only copy a single channel from the array.\n\t */\n\ttoMono(chanNum?: number): this {\n\t\tif (isNumber(chanNum)) {\n\t\t\tthis.fromArray(this.toArray(chanNum));\n\t\t} else {\n\t\t\tlet outputArray = new Float32Array(this.length as number);\n\t\t\tconst numChannels = this.numberOfChannels;\n\t\t\tfor (let channel = 0; channel < numChannels; channel++) {\n\t\t\t\tconst channelArray = this.toArray(channel) as Float32Array;\n\t\t\t\tfor (let i = 0; i < channelArray.length; i++) {\n\t\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// divide by the number of channels\n\t\t\toutputArray = outputArray.map(sample => sample / numChannels);\n\t\t\tthis.fromArray(outputArray);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n\t * Float32Array, and multichannel buffers will return multidimensional arrays.\n\t * @param channel Optionally only copy a single channel from the array.\n\t */\n\ttoArray(channel?: number): Float32Array | Float32Array[] {\n\t\tif (isNumber(channel)) {\n\t\t\treturn this.getChannelData(channel);\n\t\t} else if (this.numberOfChannels === 1) {\n\t\t\treturn this.toArray(0);\n\t\t} else {\n\t\t\tconst ret: Float32Array[] = [];\n\t\t\tfor (let c = 0; c < this.numberOfChannels; c++) {\n\t\t\t\tret[c] = this.getChannelData(c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Float32Array representing the PCM audio data for the specific channel.\n\t * @param  channel  The channel number to return\n\t * @return The audio as a TypedArray\n\t */\n\tgetChannelData(channel: number): Float32Array {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.getChannelData(channel);\n\t\t} else {\n\t\t\treturn new Float32Array(0);\n\t\t}\n\t}\n\n\t/**\n\t * Cut a subsection of the array and return a buffer of the\n\t * subsection. Does not modify the original buffer\n\t * @param start The time to start the slice\n\t * @param end The end time to slice. If none is given will default to the end of the buffer\n\t */\n\tslice(start: Seconds, end: Seconds = this.duration): ToneAudioBuffer {\n\t\tconst startSamples = Math.floor(start * this.sampleRate);\n\t\tconst endSamples = Math.floor(end * this.sampleRate);\n\t\tassert(startSamples < endSamples, \"The start time must be less than the end time\");\n\t\tconst length = endSamples - startSamples;\n\t\tconst retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n\t\tfor (let channel = 0; channel < this.numberOfChannels; channel++) {\n\t\t\tretBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n\t\t}\n\t\treturn new ToneAudioBuffer(retBuffer);\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tprivate _reverse(): this {\n\t\tif (this.loaded) {\n\t\t\tfor (let i = 0; i < this.numberOfChannels; i++) {\n\t\t\t\tthis.getChannelData(i).reverse();\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffer is loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this.length > 0;\n\t}\n\n\t/**\n\t * The duration of the buffer in seconds.\n\t */\n\tget duration(): Seconds {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.duration;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The length of the buffer in samples\n\t */\n\tget length(): Samples {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n\t */\n\tget numberOfChannels(): number {\n\t\tif (this._buffer) {\n\t\t\treturn this._buffer.numberOfChannels;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Reverse the buffer.\n\t */\n\tget reverse(): boolean {\n\t\treturn this._reversed;\n\t}\n\tset reverse(rev: boolean) {\n\t\tif (this._reversed !== rev) {\n\t\t\tthis._reversed = rev;\n\t\t\tthis._reverse();\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// STATIC METHODS\n\t//-------------------------------------\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tstatic baseUrl = \"\";\n\n\t/**\n\t * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n\t * pass in a multidimensional array.\n\t * @param array The array to fill the audio buffer\n\t * @return A ToneAudioBuffer created from the array\n\t */\n\tstatic fromArray(array: Float32Array | Float32Array[]): ToneAudioBuffer {\n\t\treturn (new ToneAudioBuffer()).fromArray(array);\n\t}\n\n\t/**\n\t * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n\t * @param  url The url to load.\n\t * @return A promise which resolves to a ToneAudioBuffer\n\t */\n\tstatic async fromUrl(url: string): Promise<ToneAudioBuffer> {\n\t\tconst buffer = new ToneAudioBuffer();\n\t\treturn await buffer.load(url);\n\t}\n\n\t/**\n\t * All of the downloads\n\t */\n\tstatic downloads: Array<Promise<void>> = [];\n\n\t/**\n\t * Loads a url using fetch and returns the AudioBuffer.\n\t */\n\tstatic async load(url: string): Promise<AudioBuffer> {\n\n\t\t// test if the url contains multiple extensions\n\t\tconst matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n\t\tif (matches) {\n\t\t\tconst extensions = matches[1].split(\"|\");\n\t\t\tlet extension = extensions[0];\n\t\t\tfor (const ext of extensions) {\n\t\t\t\tif (ToneAudioBuffer.supportsType(ext)) {\n\t\t\t\t\textension = ext;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\turl = url.replace(matches[0], extension);\n\t\t}\n\n\t\t// make sure there is a slash between the baseUrl and the url\n\t\tconst baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n\t\tconst response = await fetch(baseUrl + url);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`could not load url: ${url}`);\n\t\t}\n\t\tconst arrayBuffer = await response.arrayBuffer();\n\n\t\tconst audioBuffer = await getContext().decodeAudioData(arrayBuffer);\n\n\t\treturn audioBuffer;\n\t}\n\n\t/**\n\t * Checks a url's extension to see if the current browser can play that file type.\n\t * @param url The url/extension to test\n\t * @return If the file extension can be played\n\t * @static\n\t * @example\n\t * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n\t * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n\t */\n\tstatic supportsType(url: string): boolean {\n\t\tconst extensions = url.split(\".\");\n\t\tconst extension = extensions[extensions.length - 1];\n\t\tconst response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n\t\treturn response !== \"\";\n\t}\n\n\t/**\n\t * Returns a Promise which resolves when all of the buffers have loaded\n\t */\n\tstatic async loaded(): Promise<void> {\n\t\t// this makes sure that the function is always async\n\t\tawait Promise.resolve();\n\t\twhile (ToneAudioBuffer.downloads.length) {\n\t\t\tawait ToneAudioBuffer.downloads[0];\n\t\t}\n\t}\n}\n","import { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { Seconds } from \"../type/Units\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n\n\treadonly name: string = \"OfflineContext\";\n\n\t/**\n\t * A private reference to the duration\n\t */\n\tprivate readonly _duration: Seconds;\n\n\t/**\n\t * An artificial clock source\n\t */\n\tprivate _currentTime: Seconds = 0;\n\n\t/**\n\t * Private reference to the OfflineAudioContext.\n\t */\n\tprotected _context!: OfflineAudioContext;\n\n\treadonly isOffline: boolean = true;\n\n\t/**\n\t * @param  channels  The number of channels to render\n\t * @param  duration  The duration to render in seconds\n\t * @param sampleRate the sample rate to render at\n\t */\n\tconstructor(\n\t\tchannels: number,\n\t\tduration: Seconds, \n\t\tsampleRate: number,\n\t);\n\tconstructor(context: OfflineAudioContext);\n\tconstructor() {\n\n\t\tsuper({\n\t\t\tclockSource: \"offline\",\n\t\t\tcontext: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\targuments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n\t\t\tlookAhead: 0,\n\t\t\tupdateInterval: isOfflineAudioContext(arguments[0]) ?\n\t\t\t\t128 / arguments[0].sampleRate : 128 / arguments[2],\n\t\t});\n\n\t\tthis._duration = isOfflineAudioContext(arguments[0]) ?\n\t\t\targuments[0].length / arguments[0].sampleRate : arguments[1];\n\t}\n\n\t/**\n\t * Override the now method to point to the internal clock time\n\t */\n\tnow(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Same as this.now()\n\t */\n\tget currentTime(): Seconds {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * Render just the clock portion of the audio context.\n\t */\n\tprivate async _renderClock(asynchronous: boolean): Promise<void> {\n\t\tlet index = 0;\n\t\twhile (this._duration - this._currentTime >= 0) {\n\n\t\t\t// invoke all the callbacks on that time\n\t\t\tthis.emit(\"tick\");\n\n\t\t\t// increment the clock in block-sized chunks\n\t\t\tthis._currentTime += 128 / this.sampleRate;\n\n\t\t\t// yield once a second of audio\n\t\t\tindex++;\n\t\t\tconst yieldEvery = Math.floor(this.sampleRate / 128);\n\t\t\tif (asynchronous && index % yieldEvery === 0) {\n\t\t\t\tawait new Promise(done => setTimeout(done, 1));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Render the output of the OfflineContext\n\t * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n\t */\n\tasync render(asynchronous = true): Promise<ToneAudioBuffer> {\n\t\tawait this.workletsAreReady();\n\t\tawait this._renderClock(asynchronous);\n\t\tconst buffer = await this._context.startRendering();\n\t\treturn new ToneAudioBuffer(buffer);\n\t}\n\n\t/**\n\t * Close the context\n\t */\n\tclose(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n","import { version } from \"../version\";\nimport { AnyAudioContext, hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { BaseContext } from \"./context/BaseContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext: BaseContext = dummyContext;\n\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext(): BaseContext {\n\tif (globalContext === dummyContext && hasAudioContext) {\n\t\tsetContext(new Context());\n\t}\n\treturn globalContext;\n}\n\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context: BaseContext | AnyAudioContext): void {\n\tif (isAudioContext(context)) {\n\t\tglobalContext = new Context(context);\n\t} else if (isOfflineAudioContext(context)) {\n\t\tglobalContext = new OfflineContext(context);\n\t} else {\n\t\tglobalContext = context;\n\t}\n}\n\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start(): Promise<void> {\n\treturn globalContext.resume();\n}\n\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n\tlet prefix = \"v\";\n\tif (version === \"dev\") {\n\t\tprefix = \"\";\n\t}\n\tconst printString = ` * Tone.js ${prefix}${version} * `;\n\t// eslint-disable-next-line no-console\n\tconsole.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n","import { Decibels, GainFactor, Hertz, Interval, MidiNote, NormalRange } from \"./Units\";\n\n/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent: NormalRange): number {\n\tconst piFactor = 0.5 * Math.PI;\n\treturn Math.sin(percent * piFactor);\n}\n\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db: Decibels): GainFactor {\n\treturn Math.pow(10, db / 20);\n}\n\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain: GainFactor): Decibels {\n\treturn 20 * (Math.log(gain) / Math.LN10);\n}\n\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval: Interval): number {\n\treturn Math.pow(2, (interval / 12));\n}\n\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4: Hertz = 440;\n\nexport function getA4(): Hertz {\n\treturn A4;\n}\n\nexport function setA4(freq: Hertz): void {\n\tA4 = freq;\n}\n\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency: Hertz): MidiNote {\n\treturn Math.round(ftomf(frequency)) as MidiNote;\n}\n\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency: Hertz): number {\n\treturn 69 + 12 * Math.log2(frequency / A4);\n}\n\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi: MidiNote): Hertz {\n\treturn A4 * Math.pow(2, (midi - 69) / 12);\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\nimport { BPM, Hertz, MidiNote, Milliseconds, Samples, Seconds, Ticks, Time } from \"./Units\";\n\nexport type TimeValue = Time | TimeBaseClass<any, any>;\n\n/**\n * The units that the TimeBase can accept. extended by other classes\n */\nexport type TimeBaseUnit = \"s\" | \"n\" | \"t\" | \"m\" | \"i\" | \"hz\" | \"tr\" | \"samples\" | \"number\";\n\nexport interface TypeFunction {\n\tregexp: RegExp;\n\tmethod: (value: string, ...args: string[]) => number;\n}\n\nexport interface TimeExpression<Type extends number> {\n\t[key: string]: {\n\t\tregexp: RegExp;\n\t\tmethod: (value: string, ...args: string[]) => Type;\n\t};\n}\n\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport abstract class TimeBaseClass<Type extends number, Unit extends string> extends Tone {\n\n\treadonly context: BaseContext;\n\n\t/**\n\t * The value of the units\n\t */\n\tprotected _val?: TimeValue;\n\n\t/**\n\t * The units of time\n\t */\n\tprotected _units?: Unit;\n\n\t/**\n\t * All of the conversion expressions\n\t */\n\tprotected _expressions: TimeExpression<Type>;\n\n\t/**\n\t * The default units\n\t */\n\treadonly defaultUnits: Unit = \"s\" as Unit;\n\n\t/**\n\t * @param context The context associated with the time value. Used to compute\n\t * Transport and context-relative timing.\n\t * @param  value  The time value as a number, string or object\n\t * @param  units  Unit values\n\t */\n\tconstructor(context: BaseContext, value?: TimeValue, units?: Unit) {\n\t\tsuper();\n\n\t\tthis._val = value;\n\t\tthis._units = units;\n\t\tthis.context = context;\n\t\tthis._expressions = this._getExpressions();\n\t}\n\n\t/**\n\t * All of the time encoding expressions\n\t */\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn {\n\t\t\thz: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\t\t},\n\t\t\ti: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._ticksToUnits(parseInt(value, 10));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)i$/i,\n\t\t\t},\n\t\t\tm: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)m$/i,\n\t\t\t},\n\t\t\tn: {\n\t\t\t\tmethod: (value, dot) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\tconst scalar = dot === \".\" ? 1.5 : 1;\n\t\t\t\t\tif (numericValue === 1) {\n\t\t\t\t\t\treturn this._beatsToUnits(this._getTimeSignature()) * scalar as Type;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._beatsToUnits(4 / numericValue) * scalar as Type;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)n(\\.?)$/i,\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn this._expressions[this.defaultUnits].method.call(this, value);\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)$/,\n\t\t\t},\n\t\t\ts: {\n\t\t\t\tmethod: (value): Type => {\n\t\t\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?)s$/,\n\t\t\t},\n\t\t\tsamples: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\treturn parseInt(value, 10) / this.context.sampleRate as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)samples$/,\n\t\t\t},\n\t\t\tt: {\n\t\t\t\tmethod: (value) => {\n\t\t\t\t\tconst numericValue = parseInt(value, 10);\n\t\t\t\t\treturn this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+)t$/i,\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tmethod: (m, q, s) => {\n\t\t\t\t\tlet total = 0;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\t\t},\n\t\t};\n\t}\n\n\t//-------------------------------------\n\t// \tVALUE OF\n\t//-------------------------------------\n\n\t/**\n\t * Evaluate the time value. Returns the time in seconds.\n\t */\n\tvalueOf(): Type {\n\t\tif (this._val instanceof TimeBaseClass) {\n\t\t\tthis.fromType(this._val);\n\t\t}\n\t\tif (isUndef(this._val)) {\n\t\t\treturn this._noArg();\n\t\t} else if (isString(this._val) && isUndef(this._units)) {\n\t\t\tfor (const units in this._expressions) {\n\t\t\t\tif (this._expressions[units].regexp.test(this._val.trim())) {\n\t\t\t\t\tthis._units = units as Unit;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isObject(this._val)) {\n\t\t\tlet total = 0;\n\t\t\tfor (const typeName in this._val) {\n\t\t\t\tif (isDefined(this._val[typeName])) {\n\t\t\t\t\tconst quantity = this._val[typeName];\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconst time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n\t\t\t\t\ttotal += time;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn total as Type;\n\t\t}\n\t\tif (isDefined(this._units)) {\n\t\t\tconst expr = this._expressions[this._units];\n\t\t\tconst matching = this._val.toString().trim().match(expr.regexp);\n\t\t\tif (matching) {\n\t\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t\t} else {\n\t\t\t\treturn expr.method.call(this, this._val);\n\t\t\t}\n\t\t} else if (isString(this._val)) {\n\t\t\treturn parseFloat(this._val) as Type;\n\t\t} else {\n\t\t\treturn this._val as Type;\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn 1 / freq as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn (60 / this._getBpm()) * beats as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn seconds as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn (ticks * (this._beatsToUnits(1)) / this._getPPQ()) as Type;\n\t}\n\n\t/**\n\t * With no arguments, return 'now'\n\t */\n\tprotected _noArg(): Type {\n\t\treturn this._now();\n\t}\n\n\t//-------------------------------------\n\t// \tTEMPO CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the bpm\n\t */\n\tprotected _getBpm(): BPM {\n\t\treturn this.context.transport.bpm.value;\n\t}\n\n\t/**\n\t * Return the timeSignature\n\t */\n\tprotected _getTimeSignature(): number {\n\t\treturn this.context.transport.timeSignature as number;\n\t}\n\n\t/**\n\t * Return the PPQ or 192 if Transport is not available\n\t */\n\tprotected _getPPQ(): number {\n\t\treturn this.context.transport.PPQ;\n\t}\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected abstract _now(): Type;\n\n\t//-------------------------------------\n\t// \tCONVERSION INTERFACE\n\t//-------------------------------------\n\n\t/**\n\t * Coerce a time type into this units type.\n\t * @param type Any time type units\n\t */\n\tfromType(type: TimeBaseClass<any, any>): this {\n\t\tthis._units = undefined;\n\t\tswitch (this.defaultUnits) {\n\t\t\tcase \"s\":\n\t\t\t\tthis._val = type.toSeconds();\n\t\t\t\tbreak;\n\t\t\tcase \"i\":\n\t\t\t\tthis._val = type.toTicks();\n\t\t\t\tbreak;\n\t\t\tcase \"hz\":\n\t\t\t\tthis._val = type.toFrequency();\n\t\t\t\tbreak;\n\t\t\tcase \"midi\":\n\t\t\t\tthis._val = type.toMidi();\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the value in seconds\n\t */\n\tabstract toSeconds(): Seconds;\n\n\t/**\n\t * Return the value as a Midi note\n\t */\n\tabstract toMidi(): MidiNote;\n\n\t/**\n\t * Convert the value into ticks\n\t */\n\tabstract toTicks(): Ticks;\n\n\t/**\n\t * Return the value in hertz\n\t */\n\ttoFrequency(): Hertz {\n\t\treturn 1 / this.toSeconds();\n\t}\n\n\t/**\n\t * Return the time in samples\n\t */\n\ttoSamples(): Samples {\n\t\treturn this.toSeconds() * this.context.sampleRate;\n\t}\n\n\t/**\n\t * Return the time in milliseconds.\n\t */\n\ttoMilliseconds(): Milliseconds {\n\t\treturn this.toSeconds() * 1000;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass, TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { BarsBeatsSixteenths, MidiNote, Seconds, Subdivision, Ticks, Time } from \"./Units\";\n\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass<Type extends Seconds | Ticks = Seconds, Unit extends string = TimeBaseUnit>\n\textends TimeBaseClass<Type, Unit> {\n\n\treadonly name: string = \"TimeClass\";\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign(super._getExpressions(), {\n\t\t\tnow: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\treturn this._now() + new (this.constructor as typeof TimeClass)(this.context, capture).valueOf() as Type;\n\t\t\t\t},\n\t\t\t\tregexp: /^\\+(.+)/,\n\t\t\t},\n\t\t\tquantize: {\n\t\t\t\tmethod: (capture: string): Type => {\n\t\t\t\t\tconst quantTo = new TimeClass(this.context, capture).valueOf();\n\t\t\t\t\treturn this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n\t\t\t\t},\n\t\t\t\tregexp: /^@(.+)/,\n\t\t\t},\n\t\t});\n\t}\n\n\t/**\n\t * Quantize the time by the given subdivision. Optionally add a\n\t * percentage which will move the time value towards the ideal\n\t * quantized value by that percentage.\n\t * @param  subdiv    The subdivision to quantize to\n\t * @param  percent  Move the time value towards the quantized value by a percentage.\n\t * @example\n\t * Tone.Time(21).quantize(2); // returns 22\n\t * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n\t */\n\tquantize(subdiv: Time, percent = 1): Type {\n\t\tconst subdivision = new (this.constructor as typeof TimeClass)(this.context, subdiv).valueOf();\n\t\tconst value = this.valueOf();\n\t\tconst multiple = Math.round(value / subdivision);\n\t\tconst ideal = multiple * subdivision;\n\t\tconst diff = ideal - value;\n\t\treturn value + diff * percent as Type;\n\t}\n\n\t//-------------------------------------\n\t// CONVERSIONS\n\t//-------------------------------------\n\t/**\n\t * Convert a Time to Notation. The notation values are will be the\n\t * closest representation between 1m to 128th note.\n\t * @return {Notation}\n\t * @example\n\t * // if the Transport is at 120bpm:\n\t * Tone.Time(2).toNotation(); // returns \"1m\"\n\t */\n\ttoNotation(): Subdivision {\n\t\tconst time = this.toSeconds();\n\t\tconst testNotations: Subdivision[] = [\"1m\"];\n\t\tfor (let power = 1; power < 9; power++) {\n\t\t\tconst subdiv = Math.pow(2, power);\n\t\t\ttestNotations.push(subdiv + \"n.\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"n\" as Subdivision);\n\t\t\ttestNotations.push(subdiv + \"t\" as Subdivision);\n\t\t}\n\t\ttestNotations.push(\"0\");\n\t\t// find the closets notation representation\n\t\tlet closest = testNotations[0];\n\t\tlet closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n\t\ttestNotations.forEach(notation => {\n\t\t\tconst notationSeconds = new TimeClass(this.context, notation).toSeconds();\n\t\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n\t\t\t\tclosest = notation;\n\t\t\t\tclosestSeconds = notationSeconds;\n\t\t\t}\n\t\t});\n\t\treturn closest;\n\t}\n\n\t/**\n\t * Return the time encoded as Bars:Beats:Sixteenths.\n\t */\n\ttoBarsBeatsSixteenths(): BarsBeatsSixteenths {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tlet quarters = this.valueOf() / quarterTime;\n\t\tquarters = parseFloat(quarters.toFixed(4));\n\t\tconst measures = Math.floor(quarters / this._getTimeSignature());\n\t\tlet sixteenths = (quarters % 1) * 4;\n\t\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\t\tconst sixteenthString = sixteenths.toString();\n\t\tif (sixteenthString.length > 3) {\n\t\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\t\tsixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n\t\t}\n\t\tconst progress = [measures, quarters, sixteenths];\n\t\treturn progress.join(\":\");\n\t}\n\n\t/**\n\t * Return the time in ticks.\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn Math.round(quarters * this._getPPQ());\n\t}\n\n\t/**\n\t * Return the time in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn this.valueOf();\n\t}\n\n\t/**\n\t * Return the value as a midi note.\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.toFrequency());\n\t}\n\n\tprotected _now(): Type {\n\t\treturn this.context.now() as Type;\n\t}\n}\n\n/**\n * Create a TimeClass from a time string or number. The time is computed against the \n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value?: TimeValue, units?: TimeBaseUnit): TimeClass<Seconds> {\n\treturn new TimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeExpression, TimeValue } from \"./TimeBase\";\nimport { Frequency, Hertz, Interval, MidiNote, Note, Seconds, Ticks } from \"./Units\";\n\nexport type FrequencyUnit = TimeBaseUnit | \"midi\";\n\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass<Type extends number = Hertz> extends TimeClass<Type, FrequencyUnit> {\n\n\treadonly name: string = \"Frequency\";\n\n\treadonly defaultUnits: FrequencyUnit = \"hz\";\n\n\t/**\n\t * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n\t * to generate all the other pitch values from notes. A4's values in Hertz.\n\t */\n\tstatic get A4(): Hertz {\n\t\treturn getA4();\n\t}\n\tstatic set A4(freq: Hertz) {\n\t\tsetA4(freq);\n\t}\n\n\t//-------------------------------------\n\t// \tAUGMENT BASE EXPRESSIONS\n\t//-------------------------------------\n\n\tprotected _getExpressions(): TimeExpression<Type> {\n\t\treturn Object.assign({}, super._getExpressions(), {\n\t\t\tmidi: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t\t\tmethod(value): number {\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tregexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t\t\tmethod(pitch, octave): number {\n\t\t\t\t\tconst index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\t\t\tconst noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n\t\t\t\t\tif (this.defaultUnits === \"midi\") {\n\t\t\t\t\t\treturn noteNumber;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn FrequencyClass.mtof(noteNumber);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\ttr: {\n\t\t\t\tregexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t\t\tmethod(m, q, s): number {\n\t\t\t\t\tlet total = 1;\n\t\t\t\t\tif (m && m !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t\t}\n\t\t\t\t\tif (q && q !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t\t\t}\n\t\t\t\t\tif (s && s !== \"0\") {\n\t\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t\t}\n\t\t\t\t\treturn total;\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tEXPRESSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Transposes the frequency by the given number of semitones.\n\t * @return  A new transposed frequency\n\t * @example\n\t * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n\t */\n\ttranspose(interval: Interval): FrequencyClass {\n\t\treturn new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n\t}\n\n\t/**\n\t * Takes an array of semitone intervals and returns\n\t * an array of frequencies transposed by those intervals.\n\t * @return  Returns an array of Frequencies\n\t * @example\n\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n\t */\n\tharmonize(intervals: Interval[]): FrequencyClass[] {\n\t\treturn intervals.map(interval => {\n\t\t\treturn this.transpose(interval);\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS\n\t//-------------------------------------\n\n\t/**\n\t * Return the value of the frequency as a MIDI note\n\t * @example\n\t * Tone.Frequency(\"C4\").toMidi(); // 60\n\t */\n\ttoMidi(): MidiNote {\n\t\treturn ftom(this.valueOf());\n\t}\n\n\t/**\n\t * Return the value of the frequency in Scientific Pitch Notation\n\t * @example\n\t * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n\t */\n\ttoNote(): Note {\n\t\tconst freq = this.toFrequency();\n\t\tconst log = Math.log2(freq / FrequencyClass.A4);\n\t\tlet noteNumber = Math.round(12 * log) + 57;\n\t\tconst octave = Math.floor(noteNumber / 12);\n\t\tif (octave < 0) {\n\t\t\tnoteNumber += -12 * octave;\n\t\t}\n\t\tconst noteName = scaleIndexToNote[noteNumber % 12];\n\t\treturn noteName + octave.toString() as Note;\n\t}\n\n\t/**\n\t * Return the duration of one cycle in seconds.\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn 1 / super.toSeconds();\n\t}\n\n\t/**\n\t * Return the duration of one cycle in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\tconst quarterTime = this._beatsToUnits(1);\n\t\tconst quarters = this.valueOf() / quarterTime;\n\t\treturn Math.floor(quarters * this._getPPQ());\n\t}\n\n\t//-------------------------------------\n\t// \tUNIT CONVERSIONS HELPERS\n\t//-------------------------------------\n\n\t/**\n\t * With no arguments, return 0\n\t */\n\tprotected _noArg(): Type {\n\t\treturn 0 as Type;\n\t}\n\n\t/**\n\t * Returns the value of a frequency in the current units\n\t */\n\tprotected _frequencyToUnits(freq: Hertz): Type {\n\t\treturn freq as Type;\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Type {\n\t\treturn 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ())) as Type;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Type {\n\t\treturn 1 / super._beatsToUnits(beats) as Type;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Type {\n\t\treturn 1 / seconds as Type;\n\t}\n\n\t/**\n\t * Convert a MIDI note to frequency value.\n\t * @param  midi The midi number to convert.\n\t * @return The corresponding frequency value\n\t */\n\tstatic mtof(midi: MidiNote): Hertz {\n\t\treturn mtof(midi);\n\t}\n\n\t/**\n\t * Convert a frequency value to a MIDI note.\n\t * @param frequency The value to frequency value to convert.\n\t */\n\tstatic ftom(frequency: Hertz): MidiNote {\n\t\treturn ftom(frequency);\n\t}\n}\n\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n\n/**\n * Note to scale index. \n * @hidden\n */\nconst noteToScaleIndex = {\n\tcbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n\tdbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n\tebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n\tfbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n\tgbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n\tabb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n\tbbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value?: TimeValue | Frequency, units?: FrequencyUnit): FrequencyClass {\n\treturn new FrequencyClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Seconds, Ticks } from \"../type/Units\";\nimport { TimeClass } from \"./Time\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\n\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass<Type extends Seconds | Ticks = Seconds> extends TimeClass<Type> {\n\n\treadonly name: string = \"TransportTime\";\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t */\n\tprotected _now(): Type {\n\t\treturn this.context.transport.seconds as Type;\n\t}\n}\n\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value?: TimeValue, units?: TimeBaseUnit): TransportTimeClass {\n\treturn new TransportTimeClass(getContext(), value, units);\n}\n","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { RecursivePartial } from \"../util/Interface\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\nimport { BaseContext } from \"./BaseContext\";\n\n/**\n * A unit which process audio\n */\nexport interface ToneWithContextOptions {\n\tcontext: BaseContext;\n}\n\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport abstract class ToneWithContext<Options extends ToneWithContextOptions> extends Tone {\n\n\t/**\n\t * The context belonging to the node.\n\t */\n\treadonly context: BaseContext;\n\n\t/**\n\t * The default context to use if no AudioContext is passed in to the constructor.\n\t * Probably should not be set manually. Used internally.\n\t * @hidden\n\t */\n\treadonly defaultContext?: BaseContext;\n\n\t/**\n\t * Pass in a constructor as the first argument\n\t */\n\tconstructor(context?: BaseContext)\n\tconstructor(options?: Partial<ToneWithContextOptions>);\n\tconstructor() {\n\t\tsuper();\n\t\tconst options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n\t\tif (this.defaultContext) {\n\t\t\tthis.context = this.defaultContext;\n\t\t} else {\n\t\t\tthis.context = options.context;\n\t\t}\n\t}\n\n\tstatic getDefaults(): ToneWithContextOptions {\n\t\treturn {\n\t\t\tcontext: getContext(),\n\t\t};\n\t}\n\n\t/**\n\t * Return the current time of the Context clock plus the lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.now());\n\t * }, 100);\n\t */\n\tnow(): Seconds {\n\t\treturn this.context.currentTime + this.context.lookAhead;\n\t}\n\n\t/**\n\t * Return the current time of the Context clock without any lookAhead.\n\t * @example\n\t * setInterval(() => {\n\t * \tconsole.log(Tone.immediate());\n\t * }, 100);\n\t */\n\timmediate(): Seconds {\n\t\treturn this.context.currentTime;\n\t}\n\n\t/**\n\t * The duration in seconds of one sample.\n\t * @example\n\t * console.log(Tone.Transport.sampleTime);\n\t */\n\tget sampleTime(): Seconds {\n\t\treturn 1 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * The number of seconds of 1 processing block (128 samples)\n\t * @example\n\t * console.log(Tone.Destination.blockTime);\n\t */\n\tget blockTime(): Seconds {\n\t\treturn 128 / this.context.sampleRate;\n\t}\n\n\t/**\n\t * Convert the incoming time to seconds. \n\t * This is calculated against the current [[Tone.Transport]] bpm\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n\t * // ramp the tempo to 60 bpm over 30 seconds\n\t * Tone.getTransport().bpm.rampTo(60, 30);\n\t */\n\ttoSeconds(time?: Time): Seconds {\n\t\treturn new TimeClass(this.context, time).toSeconds();\n\t}\n\n\t/**\n\t * Convert the input to a frequency number\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toFrequency(\"4n\"));\n\t */\n\ttoFrequency(freq: Frequency): Hertz {\n\t\treturn new FrequencyClass(this.context, freq).toFrequency();\n\t}\n\n\t/**\n\t * Convert the input time into ticks\n\t * @example\n\t * const gain = new Tone.Gain();\n\t * console.log(gain.toTicks(\"4n\"));\n\t */\n\ttoTicks(time?: Time | TimeClass): Ticks {\n\t\treturn new TransportTimeClass(this.context, time).toTicks();\n\t}\n\n\t//-------------------------------------\n\t// \tGET/SET\n\t//-------------------------------------\n\n\t/**\n\t * Get a subset of the properties which are in the partial props\n\t */\n\tprotected _getPartialProperties(props: Options): Partial<Options> {\n\t\tconst options = this.get();\n\t\t// remove attributes from the prop that are not in the partial\n\t\tObject.keys(options).forEach(name => {\n\t\t\tif (isUndef(props[name])) {\n\t\t\t\tdelete options[name];\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t}\n\n\t/**\n\t * Get the object's attributes.\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * console.log(osc.get());\n\t */\n\tget(): Options {\n\t\tconst defaults = getDefaultsFromInstance(this) as Options;\n\t\tObject.keys(defaults).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute)) {\n\t\t\t\tconst member = this[attribute];\n\t\t\t\tif (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n\t\t\t\t\tdefaults[attribute] = member.value;\n\t\t\t\t} else if (member instanceof ToneWithContext) {\n\t\t\t\t\tdefaults[attribute] = member._getPartialProperties(defaults[attribute]);\n\t\t\t\t\t// otherwise make sure it's a serializable type\n\t\t\t\t} else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n\t\t\t\t\tdefaults[attribute] = member;\n\t\t\t\t} else {\n\t\t\t\t\t// remove all undefined and unserializable attributes\n\t\t\t\t\tdelete defaults[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn defaults;\n\t}\n\n\t/**\n\t * Set multiple properties at once with an object.\n\t * @example\n\t * const filter = new Tone.Filter().toDestination();\n\t * // set values using an object\n\t * filter.set({\n\t * \tfrequency: \"C6\",\n\t * \ttype: \"highpass\"\n\t * });\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n\t * player.autostart = true;\n\t */\n\tset(props: RecursivePartial<Options>): this {\n\t\tObject.keys(props).forEach(attribute => {\n\t\t\tif (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n\t\t\t\tif (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n\t\t\t\t\t// small optimization\n\t\t\t\t\tif (this[attribute].value !== props[attribute]) {\n\t\t\t\t\t\tthis[attribute].value = props[attribute];\n\t\t\t\t\t}\n\t\t\t\t} else if (this[attribute] instanceof ToneWithContext) {\n\t\t\t\t\tthis[attribute].set(props[attribute]);\n\t\t\t\t} else {\n\t\t\t\t\tthis[attribute] = props[attribute];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n}\n","import { Seconds } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n\nexport type BasicPlaybackState = \"started\" | \"stopped\";\nexport type PlaybackState = BasicPlaybackState | \"paused\";\n\nexport interface StateTimelineEvent extends TimelineEvent {\n\tstate: PlaybackState;\n}\n\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline<AdditionalOptions extends {} = {}> extends Timeline<StateTimelineEvent & AdditionalOptions> {\n\n\treadonly name: string = \"StateTimeline\";\n\n\t/**\n\t * The initial state\n\t */\n\tprivate _initial: PlaybackState;\n\n\tconstructor(initial: PlaybackState = \"stopped\") {\n\t\tsuper();\n\t\tthis._initial = initial;\n\t\tthis.setStateAtTime(this._initial, 0);\n\t}\n\n\t/**\n\t * Returns the scheduled state scheduled before or at\n\t * the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t */\n\tgetValueAtTime(time: Seconds): PlaybackState {\n\t\tconst event = this.get(time);\n\t\tif (event !== null) {\n\t\t\treturn event.state;\n\t\t} else {\n\t\t\treturn this._initial;\n\t\t}\n\t}\n\n\t/**\n\t * Add a state to the timeline.\n\t * @param  state The name of the state to set.\n\t * @param  time  The time to query.\n\t * @param options Any additional options that are needed in the timeline.\n\t */\n\tsetStateAtTime(state: PlaybackState, time: Seconds, options?: AdditionalOptions): this {\n\t\tassertRange(time, 0);\n\t\tthis.add(Object.assign({}, options, {\n\t\t\tstate,\n\t\t\ttime,\n\t\t}));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the event before the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check before\n\t * @return  The event with the given state before the time\n\t */\n\tgetLastState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tfor (let i = index; i >= 0; i--) {\n\t\t\tconst event = this._timeline[i];\n\t\t\tif (event.state === state) {\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return the event after the time with the given state\n\t * @param  state The state to look for\n\t * @param  time  When to check from\n\t * @return  The event with the given state after the time\n\t */\n\tgetNextState(state: PlaybackState, time: number): StateTimelineEvent & AdditionalOptions | undefined {\n\t\t// time = this.toSeconds(time);\n\t\tconst index = this._search(time);\n\t\tif (index !== -1) {\n\t\t\tfor (let i = index; i < this._timeline.length; i++) {\n\t\t\t\tconst event = this._timeline[i];\n\t\t\t\tif (event.state === state) {\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AbstractParam } from \"../context/AbstractParam\";\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { Decibels, Frequency, Positive, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n\nexport interface ParamOptions<TypeName extends UnitName> extends ToneWithContextOptions {\n\tunits: TypeName;\n\tvalue?: UnitMap[TypeName];\n\tparam: AudioParam | Param<TypeName>;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n\tswappable?: boolean;\n}\n\n/**\n * the possible automation types\n */\ntype AutomationType = \"linearRampToValueAtTime\" | \"exponentialRampToValueAtTime\" | \"setValueAtTime\" | \"setTargetAtTime\" | \"cancelScheduledValues\";\n\ninterface TargetAutomationEvent {\n\ttype: \"setTargetAtTime\";\n\ttime: number;\n\tvalue: number;\n\tconstant: number;\n}\n\ninterface NormalAutomationEvent {\n\ttype: Exclude<AutomationType, \"setTargetAtTime\">;\n\ttime: number;\n\tvalue: number;\n}\n/**\n * The events on the automation\n */\nexport type AutomationEvent = NormalAutomationEvent | TargetAutomationEvent;\n\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param<TypeName extends UnitName = \"number\">\n\textends ToneWithContext<ParamOptions<TypeName>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Param\";\n\n\treadonly input: GainNode | AudioParam;\n\n\treadonly units: UnitName;\n\tconvert: boolean;\n\toverridden = false;\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<AutomationEvent>;\n\n\t/**\n\t * The native parameter to control\n\t */\n\tprotected _param: AudioParam;\n\n\t/**\n\t * The default value before anything is assigned\n\t */\n\tprotected _initialValue: number;\n\n\t/**\n\t * The minimum output value\n\t */\n\tprivate _minOutput = 1e-7;\n\n\t/**\n\t * Private reference to the min and max values if passed into the constructor\n\t */\n\tprivate readonly _minValue?: number;\n\tprivate readonly _maxValue?: number;\n\n\t/**\n\t * If the underlying AudioParam can be swapped out\n\t * using the setParam method. \n\t */\n\tprotected readonly _swappable: boolean;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\tconstructor(param: AudioParam, units?: TypeName, convert?: boolean);\n\tconstructor(options: Partial<ParamOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n\n\t\tconst options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n\n\t\tassert(isDefined(options.param) &&\n\t\t\t(isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n\n\t\twhile (!isAudioParam(options.param)) {\n\t\t\toptions.param = options.param._param;\n\t\t}\n\n\t\tthis._swappable = isDefined(options.swappable) ? options.swappable : false;\n\t\tif (this._swappable) {\n\t\t\tthis.input = this.context.createGain();\n\t\t\t// initialize\n\t\t\tthis._param = options.param;\n\t\t\tthis.input.connect(this._param);\n\t\t} else {\n\t\t\tthis._param = this.input = options.param;\n\t\t}\n\t\tthis._events = new Timeline<AutomationEvent>(1000);\n\t\tthis._initialValue = this._param.defaultValue;\n\t\tthis.units = options.units;\n\t\tthis.convert = options.convert;\n\t\tthis._minValue = options.minValue;\n\t\tthis._maxValue = options.maxValue;\n\n\t\t// if the value is defined, set it immediately\n\t\tif (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n\t\t\tthis.setValueAtTime(options.value, 0);\n\t\t}\n\t}\n\n\tstatic getDefaults(): ParamOptions<any> {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t} as ParamOptions<any>);\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\tconst now = this.now();\n\t\treturn this.getValueAtTime(now);\n\t}\n\tset value(value) {\n\t\tthis.cancelScheduledValues(this.now());\n\t\tthis.setValueAtTime(value, this.now());\n\t}\n\n\tget minValue(): number {\n\t\t// if it's not the default minValue, return it\n\t\tif (isDefined(this._minValue)) {\n\t\t\treturn this._minValue;\n\t\t} else if (this.units === \"time\" || this.units === \"frequency\" ||\n\t\t\tthis.units === \"normalRange\" || this.units === \"positive\" ||\n\t\t\tthis.units === \"transportTime\" || this.units === \"ticks\" ||\n\t\t\tthis.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n\t\t\treturn 0;\n\t\t} else if (this.units === \"audioRange\") {\n\t\t\treturn -1;\n\t\t} else if (this.units === \"decibels\") {\n\t\t\treturn -Infinity;\n\t\t} else {\n\t\t\treturn this._param.minValue;\n\t\t}\n\t}\n\n\tget maxValue(): number {\n\t\tif (isDefined(this._maxValue)) {\n\t\t\treturn this._maxValue;\n\t\t} else if (this.units === \"normalRange\" ||\n\t\t\tthis.units === \"audioRange\") {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn this._param.maxValue;\n\t\t}\n\t}\n\n\t/**\n\t * Type guard based on the unit name\n\t */\n\tprivate _is<T>(arg: any, type: UnitName): arg is T {\n\t\treturn this.units === type;\n\t}\n\n\t/**\n\t * Make sure the value is always in the defined range\n\t */\n\tprivate _assertRange(value: number): number {\n\t\tif (isDefined(this.maxValue) && isDefined(this.minValue)) {\n\t\t\tassertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Convert the given value from the type specified by Param.units\n\t * into the destination value (such as Gain or Frequency).\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.convert && !this.overridden) {\n\t\t\tif (this._is<Time>(val, \"time\")) {\n\t\t\t\treturn this.toSeconds(val);\n\t\t\t} else if (this._is<Decibels>(val, \"decibels\")) {\n\t\t\t\treturn dbToGain(val);\n\t\t\t} else if (this._is<Frequency>(val, \"frequency\")) {\n\t\t\t\treturn this.toFrequency(val);\n\t\t\t} else {\n\t\t\t\treturn val as number;\n\t\t\t}\n\t\t} else if (this.overridden) {\n\t\t\t// if it's overridden, should only schedule 0s\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn val as number;\n\t\t}\n\t}\n\n\t/**\n\t * Convert the parameters value into the units specified by Param.units.\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.convert && this.units === \"decibels\") {\n\t\t\treturn gainToDb(val) as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn val as UnitMap[TypeName];\n\t\t}\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// all docs are generated from ParamInterface.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst numericValue = this._fromType(value);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis.log(this.units, \"setValueAtTime\", value, computedTime);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis._param.setValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\tconst computedTime = Math.max(this.toSeconds(time), 0);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tconst before = this._events.get(computedTime);\n\t\tlet value = this._initialValue;\n\t\t// if it was set by\n\t\tif (before === null) {\n\t\t\tvalue = this._initialValue;\n\t\t} else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\tlet previousVal;\n\t\t\tif (previous === null) {\n\t\t\t\tpreviousVal = this._initialValue;\n\t\t\t} else {\n\t\t\t\tpreviousVal = previous.value;\n\t\t\t}\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n\t\t\t}\n\t\t} else if (after === null) {\n\t\t\tvalue = before.value;\n\t\t} else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n\t\t\tlet beforeValue = before.value;\n\t\t\tif (before.type === \"setTargetAtTime\") {\n\t\t\t\tconst previous = this._events.getBefore(before.time);\n\t\t\t\tif (previous === null) {\n\t\t\t\t\tbeforeValue = this._initialValue;\n\t\t\t\t} else {\n\t\t\t\t\tbeforeValue = previous.value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tvalue = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t} else {\n\t\t\t\tvalue = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = before.value;\n\t\t}\n\t\treturn this._toType(value);\n\t}\n\n\tsetRampPoint(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tlet currentVal = this.getValueAtTime(time);\n\t\tthis.cancelAndHoldAtTime(time);\n\t\tif (this._fromType(currentVal) === 0) {\n\t\t\tcurrentVal = this._toType(this._minOutput);\n\t\t}\n\t\tthis.setValueAtTime(currentVal, time);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tconst numericValue = this._fromType(value);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\tthis._assertRange(numericValue);\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"linearRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n\t\tthis._param.linearRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], endTime: Time): this {\n\t\tlet numericValue = this._fromType(value);\n\t\t// the value can't be 0\n\t\tnumericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n\t\tthis._assertRange(numericValue);\n\t\tconst computedTime = this.toSeconds(endTime);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n\t\t// store the event\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"exponentialRampToValueAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n\t\tthis._param.exponentialRampToValueAtTime(numericValue, computedTime);\n\t\treturn this;\n\t}\n\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t}\n\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\t\treturn this;\n\t}\n\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\trampTime = this.toSeconds(rampTime);\n\t\tconst timeConstant = Math.log(rampTime + 1) / Math.log(200);\n\t\tthis.setTargetAtTime(value, time, timeConstant);\n\t\t// at 90% start a linear ramp to the final value\n\t\tthis.cancelAndHoldAtTime(time + rampTime * 0.9);\n\t\tthis.linearRampToValueAtTime(value, time + rampTime);\n\t\treturn this;\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: Positive): this {\n\t\tconst numericValue = this._fromType(value);\n\t\t// The value will never be able to approach without timeConstant > 0.\n\t\tassert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n\t\tconst computedTime = this.toSeconds(startTime);\n\t\tthis._assertRange(numericValue);\n\t\tassert(isFinite(numericValue) && isFinite(computedTime),\n\t\t\t`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n\t\tthis._events.add({\n\t\t\tconstant: timeConstant,\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setTargetAtTime\",\n\t\t\tvalue: numericValue,\n\t\t});\n\t\tthis.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n\t\tthis._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n\t\treturn this;\n\t}\n\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling = 1): this {\n\t\tduration = this.toSeconds(duration);\n\t\tstartTime = this.toSeconds(startTime);\n\t\tconst startingValue = this._fromType(values[0]) * scaling;\n\t\tthis.setValueAtTime(this._toType(startingValue), startTime);\n\t\tconst segTime = duration / (values.length - 1);\n\t\tfor (let i = 1; i < values.length; i++) {\n\t\t\tconst numericValue = this._fromType(values[i]) * scaling;\n\t\t\tthis.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tcancelScheduledValues(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n\t\tthis._events.cancel(computedTime);\n\t\tthis._param.cancelScheduledValues(computedTime);\n\t\tthis.log(this.units, \"cancelScheduledValues\", computedTime);\n\t\treturn this;\n\t}\n\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n\t\t// remove the schedule events\n\t\tassert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n\n\t\tthis.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n\t\t\n\t\t// if there is an event at the given computedTime\n\t\t// and that even is not a \"set\"\n\t\tconst before = this._events.get(computedTime);\n\t\tconst after = this._events.getAfter(computedTime);\n\t\tif (before && EQ(before.time, computedTime)) {\n\t\t\t// remove everything after\n\t\t\tif (after) {\n\t\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t\tthis._events.cancel(after.time);\n\t\t\t} else {\n\t\t\t\tthis._param.cancelAndHoldAtTime(computedTime);\n\t\t\t\tthis._events.cancel(computedTime + this.sampleTime);\n\t\t\t}\n\t\t} else if (after) {\n\t\t\tthis._param.cancelScheduledValues(after.time);\n\t\t\t// cancel the next event(s)\n\t\t\tthis._events.cancel(after.time);\n\t\t\tif (after.type === \"linearRampToValueAtTime\") {\n\t\t\t\tthis.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t} else if (after.type === \"exponentialRampToValueAtTime\") {\n\t\t\t\tthis.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n\t\t\t}\n\t\t}\n\n\t\t// set the value at the given time\n\t\tthis._events.add({\n\t\t\ttime: computedTime,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: valueAtTime,\n\t\t});\n\t\tthis._param.setValueAtTime(valueAtTime, computedTime);\n\t\treturn this;\n\t}\n\n\trampTo(value: UnitMap[TypeName], rampTime: Time = 0.1, startTime?: Time): this {\n\t\tif (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n\t\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t\t} else {\n\t\t\tthis.linearRampTo(value, rampTime, startTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n\t * The applied values will start at the context's current time and schedule\n\t * all of the events which are scheduled on this Param onto the passed in param.\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tconst now = this.context.currentTime;\n\t\t// set the param's value at the current time and schedule everything else\n\t\tparam.setValueAtTime(this.getValueAtTime(now) as number, now);\n\t\t// if the previous event was a curve, then set the rest of it\n\t\tconst previousEvent = this._events.get(now);\n\t\tif (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n\t\t\t// approx it until the next event with linear ramps\n\t\t\tconst nextEvent = this._events.getAfter(previousEvent.time);\n\t\t\t// or for 2 seconds if there is no event\n\t\t\tconst endTime = nextEvent ? nextEvent.time : now + 2;\n\t\t\tconst subdivisions = (endTime - now) / 10;\n\t\t\tfor (let i = now; i < endTime; i += subdivisions) {\n\t\t\t\tparam.linearRampToValueAtTime(this.getValueAtTime(i) as number, i);\n\t\t\t}\n\t\t}\n\t\tthis._events.forEachAfter(this.context.currentTime, event => {\n\t\t\tif (event.type === \"cancelScheduledValues\") {\n\t\t\t\tparam.cancelScheduledValues(event.time);\n\t\t\t} else if (event.type === \"setTargetAtTime\") {\n\t\t\t\tparam.setTargetAtTime(event.value, event.time, event.constant);\n\t\t\t} else {\n\t\t\t\tparam[event.type](event.value, event.time);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Replace the Param's internal AudioParam. Will apply scheduled curves \n\t * onto the parameter and replace the connections.\n\t */\n\tsetParam(param: AudioParam): this {\n\t\tassert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n\t\tconst input = this.input as GainNode;\n\t\tinput.disconnect(this._param);\n\t\tthis.apply(param);\n\t\tthis._param = param;\n\t\tinput.connect(this._param);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\treturn this;\n\t}\n\n\tget defaultValue(): UnitMap[TypeName] {\n\t\treturn this._toType(this._param.defaultValue);\n\t}\n\n\t//-------------------------------------\n\t// \tAUTOMATION CURVE CALCULATIONS\n\t// \tMIT License, copyright (c) 2014 Jordan Santell\n\t//-------------------------------------\n\n\t// Calculates the the value along the curve produced by setTargetAtTime\n\tprotected _exponentialApproach(t0: number, v0: number, v1: number, timeConstant: number, t: number): number {\n\t\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t}\n\n\t// Calculates the the value along the curve produced by linearRampToValueAtTime\n\tprotected _linearInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t}\n\n\t// Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\tprotected _exponentialInterpolate(t0: number, v0: number, t1: number, v1: number, t: number): number {\n\t\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t}\n}\n","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext, ToneWithContextOptions } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n\nexport type InputNode = ToneAudioNode | AudioNode | Param<any> | AudioParam;\nexport type OutputNode = ToneAudioNode | AudioNode;\n\ninterface ChannelProperties {\n\tchannelCount: number;\n\tchannelCountMode: ChannelCountMode;\n\tchannelInterpretation: ChannelInterpretation;\n}\n\n/**\n * The possible options for this node\n */\nexport type ToneAudioNodeOptions = ToneWithContextOptions;\n\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport abstract class ToneAudioNode<Options extends ToneAudioNodeOptions = ToneAudioNodeOptions>\n\textends ToneWithContext<Options> {\n\n\t/**\n\t * The name of the class\n\t */\n\tabstract readonly name: string = \"ToneAudioNode\";\n\n\t/**\n\t * The input node or nodes. If the object is a source,\n\t * it does not have any input and this.input is undefined.\n\t */\n\tabstract input: InputNode | undefined;\n\n\t/**\n\t * The output nodes. If the object is a sink,\n\t * it does not have any output and this.output is undefined.\n\t */\n\tabstract output: OutputNode | undefined;\n\n\t/**\n\t * The number of inputs feeding into the AudioNode.\n\t * For source nodes, this will be 0.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfInputs);\n\t */\n\tget numberOfInputs(): number {\n\t\tif (isDefined(this.input)) {\n\t\t\tif (isAudioParam(this.input) || this.input instanceof Param) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn this.input.numberOfInputs;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The number of outputs of the AudioNode.\n\t * @example\n\t * const node = new Tone.Gain();\n\t * console.log(node.numberOfOutputs);\n\t */\n\tget numberOfOutputs(): number {\n\t\tif (isDefined(this.output)) {\n\t\t\treturn this.output.numberOfOutputs;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * List all of the node that must be set to match the ChannelProperties\n\t */\n\tprotected _internalChannels: OutputNode[] = [];\n\n\t//-------------------------------------\n\t// AUDIO PROPERTIES\n\t//-------------------------------------\n\n\t/**\n\t * Used to decide which nodes to get/set properties on\n\t */\n\tprivate _isAudioNode(node: any): node is AudioNode | ToneAudioNode {\n\t\treturn isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n\t}\n\n\t/**\n\t * Get all of the audio nodes (either internal or input/output) which together\n\t * make up how the class node responds to channel input/output\n\t */\n\tprivate _getInternalNodes(): OutputNode[] {\n\t\tconst nodeList = this._internalChannels.slice(0);\n\t\tif (this._isAudioNode(this.input)) {\n\t\t\tnodeList.push(this.input);\n\t\t}\n\t\tif (this._isAudioNode(this.output)) {\n\t\t\tif (this.input !== this.output) {\n\t\t\t\tnodeList.push(this.output);\n\t\t\t}\n\t\t}\n\t\treturn nodeList;\n\t}\n\n\t/**\n\t * Set the audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t * @param options\n\t */\n\tprivate _setChannelProperties(options: ChannelProperties): void {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tnodeList.forEach(node => {\n\t\t\tnode.channelCount = options.channelCount;\n\t\t\tnode.channelCountMode = options.channelCountMode;\n\t\t\tnode.channelInterpretation = options.channelInterpretation;\n\t\t});\n\t}\n\n\t/**\n\t * Get the current audio options for this node such as channelInterpretation\n\t * channelCount, etc.\n\t */\n\tprivate _getChannelProperties(): ChannelProperties {\n\t\tconst nodeList = this._getInternalNodes();\n\t\tassert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n\t\t// use the first node to get properties\n\t\t// they should all be the same\n\t\tconst node = nodeList[0];\n\t\treturn {\n\t\t\tchannelCount: node.channelCount,\n\t\t\tchannelCountMode: node.channelCountMode,\n\t\t\tchannelInterpretation: node.channelInterpretation,\n\t\t};\n\t}\n\n\t/**\n\t * channelCount is the number of channels used when up-mixing and down-mixing\n\t * connections to any inputs to the node. The default value is 2 except for\n\t * specific nodes where its value is specially determined.\n\t */\n\tget channelCount(): number {\n\t\treturn this._getChannelProperties().channelCount;\n\t}\n\tset channelCount(channelCount) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCount }));\n\t}\n\n\t/**\n\t * channelCountMode determines how channels will be counted when up-mixing and\n\t * down-mixing connections to any inputs to the node.\n\t * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n\t * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n\t * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n\t * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n\t */\n\tget channelCountMode(): ChannelCountMode {\n\t\treturn this._getChannelProperties().channelCountMode;\n\t}\n\tset channelCountMode(channelCountMode) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelCountMode }));\n\t}\n\n\t/**\n\t * channelInterpretation determines how individual channels will be treated\n\t * when up-mixing and down-mixing connections to any inputs to the node.\n\t * The default value is \"speakers\".\n\t */\n\tget channelInterpretation(): ChannelInterpretation {\n\t\treturn this._getChannelProperties().channelInterpretation;\n\t}\n\tset channelInterpretation(channelInterpretation) {\n\t\tconst props = this._getChannelProperties();\n\t\t// merge it with the other properties\n\t\tthis._setChannelProperties(Object.assign(props, { channelInterpretation }));\n\t}\n\n\t//-------------------------------------\n\t// CONNECTIONS\n\t//-------------------------------------\n\n\t/**\n\t * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n\t * @param destination The output to connect to\n\t * @param outputNum The output to connect from\n\t * @param inputNum The input to connect to\n\t */\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C2\").start();\n\t * osc.toDestination();\n\t */\n\ttoDestination(): this {\n\t\tthis.connect(this.context.destination);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output to the context's destination node.\n\t * See [[toDestination]]\n\t * @deprecated\n\t */\n\ttoMaster(): this {\n\t\twarn(\"toMaster() has been renamed toDestination()\");\n\t\treturn this.toDestination();\n\t}\n\n\t/**\n\t * disconnect the output\n\t */\n\tdisconnect(destination?: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tdisconnect(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the output of this node to the rest of the nodes in series.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n\t * player.autostart = true;\n\t * const filter = new Tone.AutoFilter(4).start();\n\t * const distortion = new Tone.Distortion(0.5);\n\t * // connect the player to the filter, distortion and then to the master output\n\t * player.chain(filter, distortion, Tone.Destination);\n\t */\n\tchain(...nodes: InputNode[]): this {\n\t\tconnectSeries(this, ...nodes);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the output of this node to the rest of the nodes in parallel.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n\t * player.autostart = true;\n\t * const pitchShift = new Tone.PitchShift(4).toDestination();\n\t * const filter = new Tone.Filter(\"G5\").toDestination();\n\t * // connect a node to the pitch shift and filter in parallel\n\t * player.fan(pitchShift, filter);\n\t */\n\tfan(...nodes: InputNode[]): this {\n\t\tnodes.forEach(node => this.connect(node));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Dispose and disconnect\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (isDefined(this.input)) {\n\t\t\tif (this.input instanceof ToneAudioNode) {\n\t\t\t\tthis.input.dispose();\n\t\t\t} else if (isAudioNode(this.input)) {\n\t\t\t\tthis.input.disconnect();\n\t\t\t}\n\t\t}\n\t\tif (isDefined(this.output)) {\n\t\t\tif (this.output instanceof ToneAudioNode) {\n\t\t\t\tthis.output.dispose();\n\t\t\t} else if (isAudioNode(this.output)) {\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t}\n\t\tthis._internalChannels = [];\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes: InputNode[]): void {\n\tconst first = nodes.shift();\n\tnodes.reduce((prev, current) => {\n\t\tif (prev instanceof ToneAudioNode) {\n\t\t\tprev.connect(current);\n\t\t} else if (isAudioNode(prev)) {\n\t\t\tconnect(prev, current);\n\t\t}\n\t\treturn current;\n\t}, first);\n}\n\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode: OutputNode, dstNode: InputNode, outputNumber = 0, inputNumber = 0): void {\n\n\tassert(isDefined(srcNode), \"Cannot connect from undefined node\");\n\tassert(isDefined(dstNode), \"Cannot connect to undefined node\");\n\n\tif (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n\t\tassert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n\t}\n\tassert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n\n\t// resolve the input of the dstNode\n\twhile ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n\t\tif (isDefined(dstNode.input)) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\twhile (srcNode instanceof ToneAudioNode) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\t// make the connection\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.connect(dstNode as AudioParam, outputNumber);\n\t} else {\n\t\tsrcNode.connect(dstNode, outputNumber, inputNumber);\n\t}\n}\n\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(\n\tsrcNode: OutputNode,\n\tdstNode?: InputNode,\n\toutputNumber = 0,\n\tinputNumber = 0,\n): void {\n\n\t// resolve the destination node\n\tif (isDefined(dstNode)) {\n\t\twhile (dstNode instanceof ToneAudioNode) {\n\t\t\tdstNode = dstNode.input;\n\t\t}\n\t}\n\n\t// resolve the src node\n\twhile (!(isAudioNode(srcNode))) {\n\t\tif (isDefined(srcNode.output)) {\n\t\t\tsrcNode = srcNode.output;\n\t\t}\n\t}\n\n\tif (isAudioParam(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber);\n\t} else if (isAudioNode(dstNode)) {\n\t\tsrcNode.disconnect(dstNode, outputNumber, inputNumber);\n\t} else {\n\t\tsrcNode.disconnect();\n\t}\n}\n","import { Param } from \"../context/Param\";\nimport { UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface GainOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tgain: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain<TypeName extends \"gain\" | \"decibels\" | \"normalRange\" = \"gain\"> extends ToneAudioNode<GainOptions<TypeName>> {\n\n\treadonly name: string = \"Gain\";\n\n\t/**\n\t * The gain parameter of the gain node.\n\t * @example\n\t * const gainNode = new Tone.Gain(0).toDestination();\n\t * const osc = new Tone.Oscillator().connect(gainNode).start();\n\t * gainNode.gain.rampTo(1, 0.1);\n\t * gainNode.gain.rampTo(0, 2, \"+0.5\");\n\t */\n\treadonly gain: Param<TypeName>;\n\n\t/**\n\t * The wrapped GainNode.\n\t */\n\tprivate _gainNode: GainNode = this.context.createGain();\n\n\t// input = output\n\treadonly input: GainNode = this._gainNode;\n\treadonly output: GainNode = this._gainNode;\n\n\t/**\n\t * @param  gain The initial gain of the GainNode\n\t * @param units The units of the gain parameter.\n\t */\n\tconstructor(gain?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<GainOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n\t\tconst options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n\n\t\tthis.gain = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._gainNode.gain,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.gain,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\treadOnly(this, \"gain\");\n\t}\n\n\tstatic getDefaults(): GainOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tgain: 1,\n\t\t\tunits: \"gain\",\n\t\t});\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\tthis.gain.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport {\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode\";\nimport { GainFactor, Seconds, Time } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\nimport { BasicPlaybackState } from \"../core/util/StateTimeline\";\n\nexport type OneShotSourceCurve = \"linear\" | \"exponential\";\n\ntype onEndedCallback = (source: OneShotSource<any>) => void;\n\nexport interface OneShotSourceOptions extends ToneAudioNodeOptions {\n\tonended: onEndedCallback;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tcurve: OneShotSourceCurve;\n}\n\n/**\n * Base class for fire-and-forget nodes\n */\nexport abstract class OneShotSource<\n\tOptions extends ToneAudioNodeOptions\n> extends ToneAudioNode<Options> {\n\t/**\n\t * The callback to invoke after the\n\t * source is done playing.\n\t */\n\tonended: onEndedCallback = noOp;\n\n\t/**\n\t * Sources do not have input nodes\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The start time\n\t */\n\tprotected _startTime = -1;\n\n\t/**\n\t * The stop time\n\t */\n\tprotected _stopTime = -1;\n\n\t/**\n\t * The id of the timeout\n\t */\n\tprivate _timeout = -1;\n\n\t/**\n\t * The public output node\n\t */\n\toutput: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output gain node.\n\t */\n\tprotected _gainNode = this.output;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tprotected _curve: OneShotSourceCurve;\n\n\tconstructor(options: OneShotSourceOptions) {\n\t\tsuper(options);\n\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t\tthis._curve = options.curve;\n\t\tthis.onended = options.onended;\n\t}\n\n\tstatic getDefaults(): OneShotSourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tcurve: \"linear\" as OneShotSourceCurve,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tonended: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Stop the source node\n\t */\n\tprotected abstract _stopSource(time: Seconds): void;\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the node\n\t */\n\tprotected abstract start(time?: Time): this;\n\t/**\n\t * Start the source at the given time\n\t * @param  time When to start the source\n\t */\n\tprotected _startGain(time: Seconds, gain: GainFactor = 1): this {\n\t\tassert(\n\t\t\tthis._startTime === -1,\n\t\t\t\"Source cannot be started more than once\"\n\t\t);\n\t\t// apply a fade in envelope\n\t\tconst fadeInTime = this.toSeconds(this._fadeIn);\n\n\t\t// record the start time\n\t\tthis._startTime = time + fadeInTime;\n\t\tthis._startTime = Math.max(this._startTime, this.context.currentTime);\n\n\t\t// schedule the envelope\n\t\tif (fadeInTime > 0) {\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampToValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime + fadeInTime\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.exponentialApproachValueAtTime(\n\t\t\t\t\tgain,\n\t\t\t\t\ttime,\n\t\t\t\t\tfadeInTime\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._gainNode.gain.setValueAtTime(gain, time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source node at the given time.\n\t * @param time When to stop the source\n\t */\n\tstop(time?: Time): this {\n\t\tthis.log(\"stop\", time);\n\t\tthis._stopGain(this.toSeconds(time));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the given time\n\t * @param  time When to stop the source\n\t */\n\tprotected _stopGain(time: Seconds): this {\n\t\tassert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t\t// cancel the previous stop\n\t\tthis.cancelStop();\n\n\t\t// the fadeOut time\n\t\tconst fadeOutTime = this.toSeconds(this._fadeOut);\n\n\t\t// schedule the stop callback\n\t\tthis._stopTime = this.toSeconds(time) + fadeOutTime;\n\t\tthis._stopTime = Math.max(this._stopTime, this.context.currentTime);\n\t\tif (fadeOutTime > 0) {\n\t\t\t// start the fade out curve at the given time\n\t\t\tif (this._curve === \"linear\") {\n\t\t\t\tthis._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n\t\t\t} else {\n\t\t\t\tthis._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n\t\t\t}\n\t\t} else {\n\t\t\t// stop any ongoing ramps, and set the value to 0\n\t\t\tthis._gainNode.gain.cancelAndHoldAtTime(time);\n\t\t\tthis._gainNode.gain.setValueAtTime(0, time);\n\t\t}\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._timeout = this.context.setTimeout(() => {\n\t\t\t// allow additional time for the exponential curve to fully decay\n\t\t\tconst additionalTail =\n\t\t\t\tthis._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n\t\t\tthis._stopSource(this.now() + additionalTail);\n\t\t\tthis._onended();\n\t\t}, this._stopTime - this.context.currentTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the onended callback\n\t */\n\tprotected _onended(): void {\n\t\tif (this.onended !== noOp) {\n\t\t\tthis.onended(this);\n\t\t\t// overwrite onended to make sure it only is called once\n\t\t\tthis.onended = noOp;\n\t\t\t// dispose when it's ended to free up for garbage collection only in the online context\n\t\t\tif (!this.context.isOffline) {\n\t\t\t\tconst disposeCallback = () => this.dispose();\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (typeof window.requestIdleCallback !== \"undefined\") {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\twindow.requestIdleCallback(disposeCallback);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(disposeCallback, 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the playback state at the given time\n\t */\n\tgetStateAtTime = function(time: Time): BasicPlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (\n\t\t\tthis._startTime !== -1 &&\n\t\t\tcomputedTime >= this._startTime &&\n\t\t\t(this._stopTime === -1 || computedTime <= this._stopTime)\n\t\t) {\n\t\t\treturn \"started\";\n\t\t} else {\n\t\t\treturn \"stopped\";\n\t\t}\n\t};\n\n\t/**\n\t * Get the playback state at the current time\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Cancel a scheduled stop event\n\t */\n\tcancelStop(): this {\n\t\tthis.log(\"cancelStop\");\n\t\tassert(this._startTime !== -1, \"Source is not started\");\n\t\t// cancel the stop envelope\n\t\tthis._gainNode.gain.cancelScheduledValues(\n\t\t\tthis._startTime + this.sampleTime\n\t\t);\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tthis._stopTime = -1;\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.disconnect();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { Seconds, Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../source/OneShotSource\";\n\nexport interface ToneConstantSourceOptions<TypeName extends UnitName> extends OneShotSourceOptions {\n\tconvert: boolean;\n\toffset: UnitMap[TypeName];\n\tunits: TypeName;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource<TypeName extends UnitName = \"number\"> extends OneShotSource<ToneConstantSourceOptions<TypeName>> {\n\n\treadonly name: string = \"ToneConstantSource\";\n\n\t/**\n\t * The signal generator\n\t */\n\tprivate _source = this.context.createConstantSource();\n\n\t/**\n\t * The offset of the signal generator\n\t */\n\treadonly offset: Param<TypeName>;\n\n\t/**\n\t * @param  offset   The offset value\n\t */\n\tconstructor(offset: UnitMap[TypeName]);\n\tconstructor(options?: Partial<ToneConstantSourceOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n\t\tconst options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\n\t\tthis.offset = new Param({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tparam: this._source.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.offset,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t}\n\n\tstatic getDefaults(): ToneConstantSourceOptions<any> {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\toffset: 1,\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the source node at the given time\n\t * @param  time When to start the source\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._source.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._source.stop(time);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._source.disconnect();\n\t\tthis.offset.dispose();\n\t\treturn this;\n\t}\n}\n","import { AbstractParam } from \"../core/context/AbstractParam\";\nimport { Param } from \"../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { Time, UnitMap, UnitName } from \"../core/type/Units\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n\nexport interface SignalOptions<TypeName extends UnitName> extends ToneAudioNodeOptions {\n\tvalue: UnitMap[TypeName];\n\tunits: TypeName;\n\tconvert: boolean;\n\tminValue?: number;\n\tmaxValue?: number;\n}\n\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal<TypeName extends UnitName = \"number\"> extends ToneAudioNode<SignalOptions<any>>\n\timplements AbstractParam<TypeName> {\n\n\treadonly name: string = \"Signal\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection.\n\t */\n\treadonly override: boolean = true;\n\n\t/**\n\t * The constant source node which generates the signal\n\t */\n\tprotected _constantSource: ToneConstantSource<TypeName>;\n\treadonly output: OutputNode;\n\tprotected _param: Param<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value Initial value of the signal\n\t * @param units The unit name, e.g. \"frequency\"\n\t */\n\tconstructor(value?: UnitMap[TypeName], units?: TypeName);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n\n\t\tconst options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]) as SignalOptions<TypeName>;\n\n\t\tthis.output = this._constantSource = new ToneConstantSource({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\toffset: options.value,\n\t\t\tunits: options.units,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\t\tthis._constantSource.start(0);\n\t\tthis.input = this._param = this._constantSource.offset;\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tconvert: true,\n\t\t\tunits: \"number\" as UnitName,\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\t// start it only when connected to something\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\tthis._constantSource.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// ABSTRACT PARAM INTERFACE\n\t// just a proxy for the ConstantSourceNode's offset AudioParam\n\t// all docs are generated from AbstractParam.ts\n\t//-------------------------------------\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.setValueAtTime(value, time);\n\t\treturn this;\n\t}\n\tgetValueAtTime(time: Time): UnitMap[TypeName] {\n\t\treturn this._param.getValueAtTime(time);\n\t}\n\tsetRampPoint(time: Time): this {\n\t\tthis._param.setRampPoint(time);\n\t\treturn this;\n\t}\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.linearRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tthis._param.exponentialRampToValueAtTime(value, time);\n\t\treturn this;\n\t}\n\texponentialRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.exponentialRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\tlinearRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.linearRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\ttargetRampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.targetRampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\texponentialApproachValueAtTime(value: UnitMap[TypeName], time: Time, rampTime: Time): this {\n\t\tthis._param.exponentialApproachValueAtTime(value, time, rampTime);\n\t\treturn this;\n\t}\n\tsetTargetAtTime(value: UnitMap[TypeName], startTime: Time, timeConstant: number): this {\n\t\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\t\treturn this;\n\t}\n\tsetValueCurveAtTime(values: UnitMap[TypeName][], startTime: Time, duration: Time, scaling?: number): this {\n\t\tthis._param.setValueCurveAtTime(values, startTime, duration, scaling);\n\t\treturn this;\n\t}\n\tcancelScheduledValues(time: Time): this {\n\t\tthis._param.cancelScheduledValues(time);\n\t\treturn this;\n\t}\n\tcancelAndHoldAtTime(time: Time): this {\n\t\tthis._param.cancelAndHoldAtTime(time);\n\t\treturn this;\n\t}\n\trampTo(value: UnitMap[TypeName], rampTime: Time, startTime?: Time): this {\n\t\tthis._param.rampTo(value, rampTime, startTime);\n\t\treturn this;\n\t}\n\n\tget value(): UnitMap[TypeName] {\n\t\treturn this._param.value;\n\t}\n\tset value(value: UnitMap[TypeName]) {\n\t\tthis._param.value = value;\n\t}\n\n\tget convert(): boolean {\n\t\treturn this._param.convert;\n\t}\n\tset convert(convert: boolean) {\n\t\tthis._param.convert = convert;\n\t}\n\n\tget units(): UnitName {\n\t\treturn this._param.units;\n\t}\n\n\tget overridden(): boolean {\n\t\treturn this._param.overridden;\n\t}\n\tset overridden(overridden: boolean) {\n\t\tthis._param.overridden = overridden;\n\t}\n\n\tget maxValue(): number {\n\t\treturn this._param.maxValue;\n\t}\n\tget minValue(): number {\n\t\treturn this._param.minValue;\n\t}\n\n\t/**\n\t * See [[Param.apply]].\n\t */\n\tapply(param: Param | AudioParam): this {\n\t\tthis._param.apply(param);\n\t\treturn this;\n\t}\n}\n\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal: OutputNode, destination: InputNode, outputNum?: number, inputNum?: number): void {\n\tif (destination instanceof Param || isAudioParam(destination) ||\n\t\t(destination instanceof Signal && destination.override)) {\n\t\t// cancel changes\n\t\tdestination.cancelScheduledValues(0);\n\t\t// reset the value\n\t\tdestination.setValueAtTime(0, 0);\n\t\t// mark the value as overridden\n\t\tif (destination instanceof Signal) {\n\t\t\tdestination.overridden = true;\n\t\t}\n\t}\n\tconnect(signal, destination, outputNum, inputNum);\n}\n","import { AutomationEvent, Param, ParamOptions } from \"../context/Param\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n\ntype TickAutomationEvent = AutomationEvent & {\n\tticks: number;\n};\n\ninterface TickParamOptions<TypeName extends UnitName> extends ParamOptions<TypeName> {\n\tmultiplier: number;\n}\n\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam<TypeName extends \"hertz\" | \"bpm\"> extends Param<TypeName> {\n\n\treadonly name: string = \"TickParam\";\n\n\t/**\n\t * The timeline which tracks all of the automations.\n\t */\n\tprotected _events: Timeline<TickAutomationEvent> = new Timeline(Infinity);\n\n\t/**\n\t * The internal holder for the multiplier value\n\t */\n\tprivate _multiplier = 1;\n\n\t/**\n\t * @param param The AudioParam to wrap\n\t * @param units The unit name\n\t * @param convert Whether or not to convert the value to the target units\n\t */\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: number);\n\tconstructor(options: Partial<TickParamOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n\n\t\t// set the multiplier\n\t\tthis._multiplier = options.multiplier;\n\n\t\t// clear the ticks from the beginning\n\t\tthis._events.cancel(0);\n\t\t// set an initial event\n\t\tthis._events.add({\n\t\t\tticks: 0,\n\t\t\ttime: 0,\n\t\t\ttype: \"setValueAtTime\",\n\t\t\tvalue: this._fromType(options.value),\n\t\t});\n\t\tthis.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): TickParamOptions<any> {\n\t\treturn Object.assign(Param.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tsetTargetAtTime(value: UnitMap[TypeName], time: Time, constant: number): this {\n\t\t// approximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tthis.setRampPoint(time);\n\t\tconst computedValue = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\tconst segments = Math.round(Math.max(1 / constant, 1));\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = constant * i + time;\n\t\t\tconst rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.setValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\tlinearRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tsuper.linearRampToValueAtTime(value, time);\n\t\tconst event = this._events.get(computedTime) as TickAutomationEvent;\n\t\tconst previousEvent = this._events.previousEvent(event);\n\t\tconst ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\treturn this;\n\t}\n\n\texponentialRampToValueAtTime(value: UnitMap[TypeName], time: Time): this {\n\t\t// aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tconst computedVal = this._fromType(value);\n\n\t\t// start from previously scheduled value\n\t\tconst prevEvent = this._events.get(time) as TickAutomationEvent;\n\t\t// approx 10 segments per second\n\t\tconst segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n\t\tconst segmentDur = ((time - prevEvent.time) / segments);\n\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\tconst segTime = segmentDur * i + prevEvent.time;\n\t\t\tconst rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toType(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  event The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tprivate _getTicksUntilEvent(event: TickAutomationEvent | null, time: number): Ticks {\n\t\tif (event === null) {\n\t\t\tevent = {\n\t\t\t\tticks: 0,\n\t\t\t\ttime: 0,\n\t\t\t\ttype: \"setValueAtTime\",\n\t\t\t\tvalue: 0,\n\t\t\t};\n\t\t} else if (isUndef(event.ticks)) {\n\t\t\tconst previousEvent = this._events.previousEvent(event);\n\t\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t\t}\n\t\tconst val0 = this._fromType(this.getValueAtTime(event.time));\n\t\tlet val1 = this._fromType(this.getValueAtTime(time));\n\t\t// if it's right on the line, take the previous value\n\t\tconst onTheLineEvent = this._events.get(time);\n\t\tif (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n\t\t\tval1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n\t\t}\n\t\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t}\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  time The time to get the tick count at\n\t * @return The number of ticks which have elapsed at the time given any automations.\n\t */\n\tgetTicksAtTime(time: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst event = this._events.get(computedTime);\n\t\treturn Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n\t}\n\n\t/**\n\t * Return the elapsed time of the number of ticks from the given time\n\t * @param ticks The number of ticks to calculate\n\t * @param  time The time to get the next tick from\n\t * @return The duration of the number of ticks from the given time in seconds\n\t */\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst currentTick = this.getTicksAtTime(time);\n\t\treturn this.getTimeOfTick(currentTick + ticks) - computedTime;\n\t}\n\n\t/**\n\t * Given a tick, returns the time that tick occurs at.\n\t * @return The time that the tick occurs.\n\t */\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\tconst before = this._events.get(tick, \"ticks\");\n\t\tconst after = this._events.getAfter(tick, \"ticks\");\n\t\tif (before && before.ticks === tick) {\n\t\t\treturn before.time;\n\t\t} else if (before && after &&\n\t\t\tafter.type === \"linearRampToValueAtTime\" &&\n\t\t\tbefore.value !== after.value) {\n\t\t\tconst val0 = this._fromType(this.getValueAtTime(before.time));\n\t\t\tconst val1 = this._fromType(this.getValueAtTime(after.time));\n\t\t\tconst delta = (val1 - val0) / (after.time - before.time);\n\t\t\tconst k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\t\tconst sol1 = (-val0 + k) / delta;\n\t\t\tconst sol2 = (-val0 - k) / delta;\n\t\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t\t} else if (before) {\n\t\t\tif (before.value === 0) {\n\t\t\t\treturn Infinity;\n\t\t\t} else {\n\t\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn tick / this._initialValue;\n\t\t}\n\t}\n\n\t/**\n\t * Convert some number of ticks their the duration in seconds accounting\n\t * for any automation curves starting at the given time.\n\t * @param  ticks The number of ticks to convert to seconds.\n\t * @param  when  When along the automation timeline to convert the ticks.\n\t * @return The duration in seconds of the ticks.\n\t */\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this.getDurationOfTicks(ticks, when);\n\t}\n\n\t/**\n\t * The inverse of [[ticksToTime]]. Convert a duration in\n\t * seconds to the corresponding number of ticks accounting for any\n\t * automation curves starting at the given time.\n\t * @param  duration The time interval to convert to ticks.\n\t * @param  when When along the automation timeline to convert the ticks.\n\t * @return The duration in ticks.\n\t */\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tconst startTicks = this.getTicksAtTime(computedTime);\n\t\tconst endTicks = this.getTicksAtTime(computedTime + computedDuration);\n\t\treturn endTicks - startTicks;\n\t}\n\n\t/**\n\t * Convert from the type when the unit value is BPM\n\t */\n\tprotected _fromType(val: UnitMap[TypeName]): number {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn 1 / (60 / val / this.multiplier);\n\t\t} else {\n\t\t\treturn super._fromType(val);\n\t\t}\n\t}\n\n\t/**\n\t * Special case of type conversion where the units === \"bpm\"\n\t */\n\tprotected _toType(val: number): UnitMap[TypeName] {\n\t\tif (this.units === \"bpm\" && this.multiplier) {\n\t\t\treturn (val / this.multiplier) * 60 as UnitMap[TypeName];\n\t\t} else {\n\t\t\treturn super._toType(val);\n\t\t}\n\t}\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\t// get and reset the current value with the new multiplier\n\t\t// might be necessary to clear all the previous values\n\t\tconst currentVal = this.value;\n\t\tthis._multiplier = m;\n\t\tthis.cancelScheduledValues(0);\n\t\tthis.setValueAtTime(currentVal, 0);\n\t}\n}\n","import { Signal, SignalOptions } from \"../../signal/Signal\";\nimport { InputNode } from \"../context/ToneAudioNode\";\nimport { Seconds, Ticks, Time, UnitMap, UnitName } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n\ninterface TickSignalOptions<TypeName extends UnitName> extends SignalOptions<TypeName> {\n\tvalue: UnitMap[TypeName];\n\tmultiplier: number;\n}\n\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal<TypeName extends \"hertz\" | \"bpm\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"TickSignal\";\n\n\t/**\n\t * The param which controls the output signal value\n\t */\n\tprotected _param: TickParam<TypeName>;\n\treadonly input: InputNode;\n\n\t/**\n\t * @param value The initial value of the signal\n\t */\n\tconstructor(value?: UnitMap[TypeName]);\n\tconstructor(options: Partial<TickSignalOptions<TypeName>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n\t\tconst options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis.input = this._param = new TickParam({\n\t\t\tcontext: this.context,\n\t\t\tconvert: options.convert,\n\t\t\tmultiplier: options.multiplier,\n\t\t\tparam: this._constantSource.offset,\n\t\t\tunits: options.units,\n\t\t\tvalue: options.value,\n\t\t});\n\t}\n\n\tstatic getDefaults(): TickSignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tmultiplier: 1,\n\t\t\tunits: \"hertz\",\n\t\t\tvalue: 1,\n\t\t});\n\t}\n\n\tticksToTime(ticks: Ticks, when: Time): Seconds {\n\t\treturn this._param.ticksToTime(ticks, when);\n\t}\n\n\ttimeToTicks(duration: Time, when: Time): Ticks {\n\t\treturn this._param.timeToTicks(duration, when);\n\t}\n\n\tgetTimeOfTick(tick: Ticks): Seconds {\n\t\treturn this._param.getTimeOfTick(tick);\n\t}\n\n\tgetDurationOfTicks(ticks: Ticks, time: Time): Seconds {\n\t\treturn this._param.getDurationOfTicks(ticks, time);\n\t}\n\n\tgetTicksAtTime(time: Time): Ticks {\n\t\treturn this._param.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n\t */\n\tget multiplier(): number {\n\t\treturn this._param.multiplier;\n\t}\n\tset multiplier(m: number) {\n\t\tthis._param.multiplier = m;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._param.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline, StateTimelineEvent } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n\ninterface TickSourceOptions extends ToneWithContextOptions {\n\tfrequency: number;\n\tunits: \"bpm\" | \"hertz\";\n}\n\ninterface TickSourceOffsetEvent {\n\tticks: number;\n\ttime: number;\n\tseconds: number;\n}\n\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource<TypeName extends \"bpm\" | \"hertz\"> extends ToneWithContext<TickSourceOptions> {\n\n\treadonly name: string = \"TickSource\";\n\n\t/**\n\t * The frequency the callback function should be invoked.\n\t */\n\treadonly frequency: TickSignal<TypeName>;\n\n\t/**\n\t * The state timeline\n\t */\n\tprivate _state: StateTimeline = new StateTimeline();\n\n\t/**\n\t * The offset values of the ticks\n\t */\n\tprivate _tickOffset: Timeline<TickSourceOffsetEvent> = new Timeline();\n\n\t/**\n\t * @param frequency The initial frequency that the signal ticks at\n\t */\n\tconstructor(frequency?: number);\n\tconstructor(options?: Partial<TickSourceOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n\t\tconst options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n\n\t\tthis.frequency = new TickSignal({\n\t\t\tcontext: this.context,\n\t\t\tunits: options.units as TypeName,\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\t// set the initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\t\t// add the first event\n\t\tthis.setTicksAtTime(0, 0);\n\t}\n\n\tstatic getDefaults(): TickSourceOptions {\n\t\treturn Object.assign({\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\" as \"hertz\",\n\t\t}, ToneWithContext.getDefaults());\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset The number of ticks to start the source at\n\t */\n\tstart(time: Time, offset?: Ticks): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (isDefined(offset)) {\n\t\t\t\tthis.setTicksAtTime(offset, computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t */\n\tstop(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// cancel the previous stop\n\t\tif (this._state.getValueAtTime(computedTime) === \"stopped\") {\n\t\t\tconst event = this._state.get(computedTime);\n\t\t\tif (event && event.time > 0) {\n\t\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\t\tthis._state.cancel(event.time);\n\t\t\t}\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis.setTicksAtTime(0, computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n\t * @param time When to clear the events after\n\t */\n\tcancel(time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._tickOffset.cancel(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the elapsed ticks at the given time\n\t * @param  time  When to get the tick value\n\t * @return The number of ticks\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", computedTime) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time: computedTime };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = stopEvent;\n\t\tlet elapsedTicks = 0;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// return the ticks\n\t\treturn elapsedTicks;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked. Returns -1 when stopped.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this.getTicksAtTime(this.now());\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis.setTicksAtTime(t, this.now());\n\t}\n\n\t/**\n\t * The time since ticks=0 that the TickSource has been running. Accounts\n\t * for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this.getSecondsAtTime(this.now());\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this.frequency.timeToTicks(s, now);\n\t\tthis.setTicksAtTime(ticks, now);\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\ttime = this.toSeconds(time);\n\t\tconst stopEvent = this._state.getLastState(\"stopped\", time) as StateTimelineEvent;\n\t\t// this event allows forEachBetween to iterate until the current time\n\t\tconst tmpEvent: StateTimelineEvent = { state: \"paused\", time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t// keep track of the previous offset event\n\t\tlet lastState = stopEvent;\n\t\tlet elapsedSeconds = 0;\n\n\t\t// iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n\t\t\tlet periodStartTime = lastState.time;\n\t\t\t// if there is an offset event in this period use that\n\t\t\tconst offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent && offsetEvent.time >= lastState.time) {\n\t\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === \"started\" && e.state !== \"started\") {\n\t\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t\t}\n\t\t\tlastState = e;\n\t\t});\n\n\t\t// remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t// return the ticks\n\t\treturn elapsedSeconds;\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._tickOffset.add({\n\t\t\tseconds: this.frequency.getDurationOfTicks(ticks, time),\n\t\t\tticks,\n\t\t\ttime,\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\tconst offset = this._tickOffset.get(before) as TickSourceOffsetEvent;\n\t\tconst event = this._state.get(before) as StateTimelineEvent;\n\t\tconst startTime = Math.max(offset.time, event.time);\n\t\tconst absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\t\treturn this.frequency.getTimeOfTick(absoluteTicks);\n\t}\n\n\t/**\n\t * Invoke the callback event at all scheduled ticks between the\n\t * start time and the end time\n\t * @param  startTime  The beginning of the search range\n\t * @param  endTime    The end of the search range\n\t * @param  callback   The callback to invoke with each tick\n\t */\n\tforEachTickBetween(startTime: number, endTime: number, callback: (when: Seconds, ticks: Ticks) => void): this {\n\t\t// only iterate through the sections where it is \"started\"\n\t\tlet lastStateEvent = this._state.get(startTime);\n\t\tthis._state.forEachBetween(startTime, endTime, event => {\n\t\t\tif (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n\t\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t\t}\n\t\t\tlastStateEvent = event;\n\t\t});\n\n\t\tlet error: Error | null = null;\n\n\t\tif (lastStateEvent && lastStateEvent.state === \"started\") {\n\t\t\tconst maxStartTime = Math.max(lastStateEvent.time, startTime);\n\t\t\t// figure out the difference between the frequency ticks and the\n\t\t\tconst startTicks = this.frequency.getTicksAtTime(maxStartTime);\n\t\t\tconst ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\t\tconst diff = startTicks - ticksAtStart;\n\t\t\tlet offset = Math.ceil(diff) - diff;\n\t\t\t// guard against floating point issues\n\t\t\toffset = EQ(offset, 1) ? 0 : offset;\n\t\t\tlet nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\t\twhile (nextTickTime < endTime) {\n\t\t\t\ttry {\n\t\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t}\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._state.dispose();\n\t\tthis._tickOffset.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Frequency, Hertz, Seconds, Ticks, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { PlaybackState, StateTimeline } from \"../util/StateTimeline\";\nimport { TickSignal } from \"./TickSignal\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n\ntype ClockCallback = (time: Seconds, ticks?: Ticks) => void;\n\ninterface ClockOptions extends ToneWithContextOptions {\n\tfrequency: Hertz;\n\tcallback: ClockCallback;\n\tunits: \"hertz\" | \"bpm\";\n}\n\ntype ClockEvent = \"start\" | \"stop\" | \"pause\";\n\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock<TypeName extends \"bpm\" | \"hertz\" = \"hertz\">\n\textends ToneWithContext<ClockOptions> implements Emitter<ClockEvent> {\n\n\treadonly name: string = \"Clock\";\n\n\t/**\n\t * The callback function to invoke at the scheduled tick.\n\t */\n\tcallback: ClockCallback = noOp;\n\n\t/**\n\t * The tick counter\n\t */\n\tprivate _tickSource: TickSource<TypeName>;\n\n\t/**\n\t * The last time the loop callback was invoked\n\t */\n\tprivate _lastUpdate = 0;\n\n\t/**\n\t * Keep track of the playback state\n\t */\n\tprivate _state: StateTimeline = new StateTimeline(\"stopped\");\n\n\t/**\n\t * Context bound reference to the _loop method\n\t * This is necessary to remove the event in the end.\n\t */\n\tprivate _boundLoop: () => void = this._loop.bind(this);\n\n\t/**\n\t * The rate the callback function should be invoked.\n\t */\n\tfrequency: TickSignal<TypeName>;\n\n\t/**\n\t * @param callback The callback to be invoked with the time of the audio event\n\t * @param frequency The rate of the callback\n\t */\n\tconstructor(callback?: ClockCallback, frequency?: Frequency);\n\tconstructor(options: Partial<ClockOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n\t\tconst options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._tickSource = new TickSource({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tunits: options.units,\n\t\t});\n\t\tthis._lastUpdate = 0;\n\t\tthis.frequency = this._tickSource.frequency;\n\t\treadOnly(this, \"frequency\");\n\n\t\t// add an initial state\n\t\tthis._state.setStateAtTime(\"stopped\", 0);\n\n\t\t// bind a callback to the worker thread\n\t\tthis.context.on(\"tick\", this._boundLoop);\n\t}\n\n\tstatic getDefaults(): ClockOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tcallback: noOp as ClockCallback,\n\t\t\tfrequency: 1,\n\t\t\tunits: \"hertz\",\n\t\t}) as ClockOptions;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._state.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the clock at the given time. Optionally pass in an offset\n\t * of where to start the tick counter from.\n\t * @param  time    The time the clock should start\n\t * @param offset  Where the tick counter starts counting from.\n\t */\n\tstart(time?: Time, offset?: Ticks): this {\n\t\t// make sure the context is running\n\t\tassertContextRunning(this.context);\n\t\t// start the loop\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) !== \"started\") {\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis._tickSource.start(computedTime, offset);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"start\", computedTime, offset);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the clock. Stopping the clock resets the tick counter to 0.\n\t * @param time The time when the clock should stop.\n\t * @example\n\t * const clock = new Tone.Clock(time => {\n\t * \tconsole.log(time);\n\t * }, 1);\n\t * clock.start();\n\t * // stop the clock after 10 seconds\n\t * clock.stop(\"+10\");\n\t */\n\tstop(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"stop\", computedTime);\n\t\tthis._state.cancel(computedTime);\n\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\tthis._tickSource.stop(computedTime);\n\t\tif (computedTime < this._lastUpdate) {\n\t\t\tthis.emit(\"stop\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the clock. Pausing does not reset the tick counter.\n\t * @param time The time when the clock should stop.\n\t */\n\tpause(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tthis._state.setStateAtTime(\"paused\", computedTime);\n\t\t\tthis._tickSource.pause(computedTime);\n\t\t\tif (computedTime < this._lastUpdate) {\n\t\t\t\tthis.emit(\"pause\", computedTime);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of times the callback was invoked. Starts counting at 0\n\t * and increments after the callback was invoked.\n\t */\n\tget ticks(): Ticks {\n\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t}\n\tset ticks(t: Ticks) {\n\t\tthis._tickSource.ticks = t;\n\t}\n\n\t/**\n\t * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._tickSource.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tthis._tickSource.seconds = s;\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._tickSource.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  ticks The tick value to set\n\t * @param  time  When to set the tick value\n\t */\n\tsetTicksAtTime(ticks: Ticks, time: Time): this {\n\t\tthis._tickSource.setTicksAtTime(ticks, time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value.\n\t * @param  tick The tick number.\n\t * @param  before When to measure the tick value from.\n\t * @return The time of the tick\n\t */\n\tgetTimeOfTick(tick: Ticks, before = this.now()): Seconds {\n\t\treturn this._tickSource.getTimeOfTick(tick, before);\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn this._tickSource.getTicksAtTime(time);\n\t}\n\n\t/**\n\t * Get the time of the next tick\n\t * @param  offset The tick number.\n\t */\n\tnextTickTime(offset: Ticks, when: Time): Seconds {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tconst currentTick = this.getTicksAtTime(computedTime);\n\t\treturn this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n\t}\n\n\t/**\n\t * The scheduling loop.\n\t */\n\tprivate _loop(): void {\n\n\t\tconst startTime = this._lastUpdate;\n\t\tconst endTime = this.now();\n\t\tthis._lastUpdate = endTime;\n\t\tthis.log(\"loop\", startTime, endTime);\n\n\t\tif (startTime !== endTime) {\n\t\t\t// the state change events\n\t\t\tthis._state.forEachBetween(startTime, endTime, e => {\n\t\t\t\tswitch (e.state) {\n\t\t\t\t\tcase \"started\":\n\t\t\t\t\t\tconst offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stopped\":\n\t\t\t\t\t\tif (e.time !== 0) {\n\t\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"paused\":\n\t\t\t\t\t\tthis.emit(\"pause\", e.time);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// the tick callbacks\n\t\t\tthis._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n\t\t\t\tthis.callback(time, ticks);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns the scheduled state at the given time.\n\t * @param  time  The time to query.\n\t * @return  The name of the state input in setStateAtTime.\n\t * @example\n\t * const clock = new Tone.Clock();\n\t * clock.start(\"+0.1\");\n\t * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n\t */\n\tgetStateAtTime(time: Time): PlaybackState {\n\t\tconst computedTime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(computedTime);\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.context.off(\"tick\", this._boundLoop);\n\t\tthis._tickSource.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\tonce!: (event: ClockEvent, callback: (...args: any[]) => void) => this;\n\toff!: (event: ClockEvent, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Clock);\n","import { Param } from \"../context/Param\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\nexport interface DelayOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst delay = new Tone.Delay(0.1).toDestination();\n * \t// connect the signal to both the delay and the destination\n * \tconst pulse = new Tone.PulseOscillator().connect(delay).toDestination();\n * \t// start and stop the pulse\n * \tpulse.start(0).stop(0.01);\n * }, 0.5, 1);\n */\nexport class Delay extends ToneAudioNode<DelayOptions> {\n\n\treadonly name: string = \"Delay\";\n\n\t/**\n\t * Private holder of the max delay time\n\t */\n\tprivate _maxDelay: Seconds;\n\n\t/**\n\t * The amount of time the incoming signal is delayed.\n\t * @example\n\t * const delay = new Tone.Delay().toDestination();\n\t * // modulate the delayTime between 0.1 and 1 seconds\n\t * const delayLFO = new Tone.LFO(0.5, 0.1, 1).start().connect(delay.delayTime);\n\t * const pulse = new Tone.PulseOscillator().connect(delay).start();\n\t * // the change in delayTime causes the pitch to go up and down\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * Private reference to the internal DelayNode\n\t */\n\tprivate _delayNode: DelayNode;\n\treadonly input: DelayNode;\n\treadonly output: DelayNode;\n\n\t/**\n\t * @param delayTime The delay applied to the incoming signal.\n\t * @param maxDelay The maximum delay time.\n\t */\n\tconstructor(delayTime?: Time, maxDelay?: Time);\n\tconstructor(options?: Partial<DelayOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n\n\t\tconst options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n\n\t\tconst maxDelayInSeconds = this.toSeconds(options.maxDelay);\n\t\tthis._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n\n\t\tthis._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n\n\t\tthis.delayTime = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._delayNode.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tvalue: options.delayTime,\n\t\t\tminValue: 0,\n\t\t\tmaxValue: this.maxDelay,\n\t\t});\n\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): DelayOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The maximum delay time. This cannot be changed after\n\t * the value is passed into the constructor.\n\t */\n\tget maxDelay(): Seconds {\n\t\treturn this._maxDelay;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.disconnect();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n\nexport interface ToneAudioBuffersUrlMap {\n\t[name: string]: string | AudioBuffer | ToneAudioBuffer;\n\t[name: number]: string | AudioBuffer | ToneAudioBuffer;\n}\n\ninterface ToneAudioBuffersOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tonload: () => void;\n\tonerror?: (error: Error) => void;\n\tbaseUrl: string;\n}\n\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n\n\treadonly name: string = \"ToneAudioBuffers\";\n\n\t/**\n\t * All of the buffers\n\t */\n\tprivate _buffers: Map<string, ToneAudioBuffer> = new Map();\n\n\t/**\n\t * A path which is prefixed before every url.\n\t */\n\tbaseUrl: string;\n\n\t/**\n\t * Keep track of the number of loaded buffers\n\t */\n\tprivate _loadingCount = 0;\n\n\t/**\n\t * @param  urls  An object literal or array of urls to load.\n\t * @param onload  The callback to invoke when the buffers are loaded.\n\t * @param baseUrl A prefix url to add before all the urls\n\t */\n\tconstructor(\n\t\turls?: ToneAudioBuffersUrlMap,\n\t\tonload?: () => void,\n\t\tbaseUrl?: string,\n\t);\n\tconstructor(options?: Partial<ToneAudioBuffersOptions>);\n\tconstructor() {\n\n\t\tsuper();\n\t\tconst options = optionsFromArguments(\n\t\t\tToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\",\n\t\t);\n\n\t\tthis.baseUrl = options.baseUrl;\n\t\t// add each one\n\t\tObject.keys(options.urls).forEach(name => {\n\t\t\tthis._loadingCount++;\n\t\t\tconst url = options.urls[name];\n\t\t\tthis.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n\t\t});\n\n\t}\n\n\tstatic getDefaults(): ToneAudioBuffersOptions {\n\t\treturn {\n\t\t\tbaseUrl: \"\",\n\t\t\tonerror: noOp,\n\t\t\tonload: noOp,\n\t\t\turls: {},\n\t\t};\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param  name  The key or index of the buffer.\n\t */\n\thas(name: string | number): boolean {\n\t\treturn this._buffers.has(name.toString());\n\t}\n\n\t/**\n\t * Get a buffer by name. If an array was loaded,\n\t * then use the array index.\n\t * @param  name  The key or index of the buffer.\n\t */\n\tget(name: string | number): ToneAudioBuffer {\n\t\tassert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n\t\treturn this._buffers.get(name.toString()) as ToneAudioBuffer;\n\t}\n\n\t/**\n\t * A buffer was loaded. decrement the counter.\n\t */\n\tprivate _bufferLoaded(callback: () => void): void {\n\t\tthis._loadingCount--;\n\t\tif (this._loadingCount === 0 && callback) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n\t}\n\n\t/**\n\t * Add a buffer by name and url to the Buffers\n\t * @param  name      A unique name to give the buffer\n\t * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t * @param  onerror  Invoked if the buffer can't be loaded\n\t */\n\tadd(\n\t\tname: string | number,\n\t\turl: string | AudioBuffer | ToneAudioBuffer,\n\t\tcallback: () => void = noOp,\n\t\tonerror: (e: Error) => void = noOp,\n\t): this {\n\t\tif (isString(url)) {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n\t\t} else {\n\t\t\tthis._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n\t\t}\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.forEach(buffer => buffer.dispose());\n\t\tthis._buffers.clear();\n\t\treturn this;\n\t}\n}\n","import { getContext } from \"../Global\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\nimport { TransportTimeClass } from \"./TransportTime\";\nimport { Seconds, Ticks } from \"./Units\";\n\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass<Ticks> {\n\n\treadonly name: string = \"Ticks\";\n\n\treadonly defaultUnits: TimeBaseUnit = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t */\n\tprotected _now(): Ticks {\n\t\treturn this.context.transport.ticks;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Ticks {\n\t\treturn this._getPPQ() * beats;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Ticks {\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Ticks {\n\t\treturn ticks;\n\t}\n\n\t/**\n\t * Return the time in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\treturn this.valueOf() as Ticks;\n\t}\n\n\t/**\n\t * Return the time in seconds\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t}\n}\n\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value?: TimeValue, units?: TimeBaseUnit): TicksClass {\n\treturn new TicksClass(getContext(), value, units);\n}\n","import { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { Seconds, Time } from \"../type/Units\";\nimport { Timeline, TimelineEvent } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n\ninterface DrawEvent extends TimelineEvent {\n\tcallback: () => void;\n}\n\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext<ToneWithContextOptions> {\n\n\treadonly name: string = \"Draw\";\n\n\t/**\n\t * The duration after which events are not invoked.\n\t */\n\texpiration: Seconds = 0.25;\n\n\t/**\n\t * The amount of time before the scheduled time\n\t * that the callback can be invoked. Default is\n\t * half the time of an animation frame (0.008 seconds).\n\t */\n\tanticipation: Seconds = 0.008;\n\n\t/**\n\t * All of the events.\n\t */\n\tprivate _events: Timeline<DrawEvent> = new Timeline();\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _boundDrawLoop = this._drawLoop.bind(this);\n\n\t/**\n\t * The animation frame id\n\t */\n\tprivate _animationFrame = -1;\n\n\t/**\n\t * Schedule a function at the given time to be invoked\n\t * on the nearest animation frame.\n\t * @param  callback  Callback is invoked at the given time.\n\t * @param  time      The time relative to the AudioContext time to invoke the callback.\n\t * @example\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tTone.Draw.schedule(() => console.log(time), time);\n\t * }, 1);\n\t * Tone.Transport.start();\n\t */\n\tschedule(callback: () => void, time: Time): this {\n\t\tthis._events.add({\n\t\t\tcallback,\n\t\t\ttime: this.toSeconds(time),\n\t\t});\n\t\t// start the draw loop on the first event\n\t\tif (this._events.length === 1) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancel events scheduled after the given time\n\t * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._events.cancel(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * The draw loop\n\t */\n\tprivate _drawLoop(): void {\n\t\tconst now = this.context.currentTime;\n\t\twhile (this._events.length && (this._events.peek() as DrawEvent).time - this.anticipation <= now) {\n\t\t\tconst event = this._events.shift();\n\t\t\tif (event && now - event.time <= this.expiration) {\n\t\t\t\tevent.callback();\n\t\t\t}\n\t\t}\n\t\tif (this._events.length > 0) {\n\t\t\tthis._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._events.dispose();\n\t\tcancelAnimationFrame(this._animationFrame);\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.draw = new Draw({ context });\n});\n\nonContextClose(context => {\n\tcontext.draw.dispose();\n});\n","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n\n/**\n * An IntervalTimeline event must have a time and duration\n */\nexport interface IntervalTimelineEvent {\n\ttime: number;\n\tduration: number;\n\t[propName: string]: any;\n}\n\ntype IteratorCallback = (event: IntervalTimelineEvent) => void;\n\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n\n\treadonly name: string = \"IntervalTimeline\";\n\n\t/**\n\t * The root node of the inteval tree\n\t */\n\tprivate _root: IntervalNode | null = null;\n\n\t/**\n\t * Keep track of the length of the timeline.\n\t */\n\tprivate _length = 0;\n\n\t/**\n\t * The event to add to the timeline. All events must\n\t * have a time and duration value\n\t * @param  event  The event to add to the timeline\n\t */\n\tadd(event: IntervalTimelineEvent): this {\n\t\tassert(isDefined(event.time), \"Events must have a time property\");\n\t\tassert(isDefined(event.duration), \"Events must have a duration parameter\");\n\n\t\tevent.time = event.time.valueOf();\n\t\tlet node: IntervalNode | null = new IntervalNode(event.time, event.time + event.duration, event);\n\t\tif (this._root === null) {\n\t\t\tthis._root = node;\n\t\t} else {\n\t\t\tthis._root.insert(node);\n\t\t}\n\t\tthis._length++;\n\t\t// Restructure tree to be balanced\n\t\twhile (node !== null) {\n\t\t\tnode.updateHeight();\n\t\t\tnode.updateMax();\n\t\t\tthis._rebalance(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove an event from the timeline.\n\t * @param  event  The event to remove from the timeline\n\t */\n\tremove(event: IntervalTimelineEvent): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(event.time, results);\n\t\t\tfor (const node of results) {\n\t\t\t\tif (node.event === event) {\n\t\t\t\t\tthis._removeNode(node);\n\t\t\t\t\tthis._length--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * The number of items in the timeline.\n\t * @readOnly\n\t */\n\tget length(): number {\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Remove events whose time time is after the given time\n\t * @param  after  The time to query.\n\t */\n\tcancel(after: number): this {\n\t\tthis.forEachFrom(after, event => this.remove(event));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the root node as the given node\n\t */\n\tprivate _setRoot(node: IntervalNode | null): void {\n\t\tthis._root = node;\n\t\tif (this._root !== null) {\n\t\t\tthis._root.parent = null;\n\t\t}\n\t}\n\n\t/**\n\t * Replace the references to the node in the node's parent\n\t * with the replacement node.\n\t */\n\tprivate _replaceNodeInParent(node: IntervalNode, replacement: IntervalNode | null): void {\n\t\tif (node.parent !== null) {\n\t\t\tif (node.isLeftChild()) {\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t\tthis._rebalance(node.parent);\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t}\n\n\t/**\n\t * Remove the node from the tree and replace it with\n\t * a successor which follows the schema.\n\t */\n\tprivate _removeNode(node: IntervalNode): void {\n\t\tif (node.left === null && node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, null);\n\t\t} else if (node.right === null) {\n\t\t\tthis._replaceNodeInParent(node, node.left);\n\t\t} else if (node.left === null) {\n\t\t\tthis._replaceNodeInParent(node, node.right);\n\t\t} else {\n\t\t\tconst balance = node.getBalance();\n\t\t\tlet replacement: IntervalNode;\n\t\t\tlet temp: IntervalNode | null = null;\n\t\t\tif (balance > 0) {\n\t\t\t\tif (node.left.right === null) {\n\t\t\t\t\treplacement = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\ttemp = replacement;\n\t\t\t\t} else {\n\t\t\t\t\treplacement = node.left.right;\n\t\t\t\t\twhile (replacement.right !== null) {\n\t\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t\t}\n\t\t\t\t\tif (replacement.parent) {\n\t\t\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (node.right.left === null) {\n\t\t\t\treplacement = node.right;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.right.left;\n\t\t\t\twhile (replacement.left !== null) {\n\t\t\t\t\treplacement = replacement.left;\n\t\t\t\t}\n\t\t\t\tif (replacement.parent) {\n\t\t\t\t\treplacement.parent.left = replacement.right;\n\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node.parent !== null) {\n\t\t\t\tif (node.isLeftChild()) {\n\t\t\t\t\tnode.parent.left = replacement;\n\t\t\t\t} else {\n\t\t\t\t\tnode.parent.right = replacement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setRoot(replacement);\n\t\t\t}\n\t\t\tif (temp) {\n\t\t\t\tthis._rebalance(temp);\n\t\t\t}\n\t\t}\n\t\tnode.dispose();\n\t}\n\n\t/**\n\t * Rotate the tree to the left\n\t */\n\tprivate _rotateLeft(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.right the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.right;\n\t\tif (pivotNode) {\n\t\t\tnode.right = pivotNode.left;\n\t\t\tpivotNode.left = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Rotate the tree to the right\n\t */\n\tprivate _rotateRight(node: IntervalNode): void {\n\t\tconst parent = node.parent;\n\t\tconst isLeftChild = node.isLeftChild();\n\n\t\t// Make node.left the new root of this sub tree (instead of node)\n\t\tconst pivotNode = node.left;\n\t\tif (pivotNode) {\n\t\t\tnode.left = pivotNode.right;\n\t\t\tpivotNode.right = node;\n\t\t}\n\n\t\tif (parent !== null) {\n\t\t\tif (isLeftChild) {\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t}\n\n\t/**\n\t * Balance the BST\n\t */\n\tprivate _rebalance(node: IntervalNode): void {\n\t\tconst balance = node.getBalance();\n\t\tif (balance > 1 && node.left) {\n\t\t\tif (node.left.getBalance() < 0) {\n\t\t\t\tthis._rotateLeft(node.left);\n\t\t\t} else {\n\t\t\t\tthis._rotateRight(node);\n\t\t\t}\n\t\t} else if (balance < -1 && node.right) {\n\t\t\tif (node.right.getBalance() > 0) {\n\t\t\t\tthis._rotateRight(node.right);\n\t\t\t} else {\n\t\t\t\tthis._rotateLeft(node);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get an event whose time and duration span the give time. Will\n\t * return the match whose \"time\" value is closest to the given time.\n\t * @return  The event which spans the desired time\n\t */\n\tget(time: number): IntervalTimelineEvent | null {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tif (results.length > 0) {\n\t\t\t\tlet max = results[0];\n\t\t\t\tfor (let i = 1; i < results.length; i++) {\n\t\t\t\t\tif (results[i].low > max.low) {\n\t\t\t\t\t\tmax = results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn max.event;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Iterate over everything in the timeline.\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEach(callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst allNodes: IntervalNode[] = [];\n\t\t\tthis._root.traverse(node => allNodes.push(node));\n\t\t\tallNodes.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the given time\n\t * overlaps with the time and duration time of the event.\n\t * @param  time The time to check if items are overlapping\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachAtTime(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Iterate over everything in the array in which the time is greater\n\t * than or equal to the given time.\n\t * @param  time The time to check if items are before\n\t * @param  callback The callback to invoke with every item\n\t */\n\tforEachFrom(time: number, callback: IteratorCallback): this {\n\t\tif (this._root !== null) {\n\t\t\tconst results: IntervalNode[] = [];\n\t\t\tthis._root.searchAfter(time, results);\n\t\t\tresults.forEach(node => {\n\t\t\t\tif (node.event) {\n\t\t\t\t\tcallback(node.event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._root !== null) {\n\t\t\tthis._root.traverse(node => node.dispose());\n\t\t}\n\t\tthis._root = null;\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n\n\t// the event container\n\tevent: IntervalTimelineEvent | null;\n\t// the low value\n\tlow: number;\n\t// the high value\n\thigh: number;\n\t// the high value for this and all child nodes\n\tmax: number;\n\t// the nodes to the left\n\tprivate _left: IntervalNode | null = null;\n\t// the nodes to the right\n\tprivate _right: IntervalNode | null = null;\n\t// the parent node\n\tparent: IntervalNode | null = null;\n\t// the number of child nodes\n\theight = 0;\n\n\tconstructor(low: number, high: number, event: IntervalTimelineEvent) {\n\t\tthis.event = event;\n\t\t// the low value\n\t\tthis.low = low;\n\t\t// the high value\n\t\tthis.high = high;\n\t\t// the high value for this and all child nodes\n\t\tthis.max = this.high;\n\t}\n\n\t/**\n\t * Insert a node into the correct spot in the tree\n\t */\n\tinsert(node: IntervalNode): void {\n\t\tif (node.low <= this.low) {\n\t\t\tif (this.left === null) {\n\t\t\t\tthis.left = node;\n\t\t\t} else {\n\t\t\t\tthis.left.insert(node);\n\t\t\t}\n\t\t} else if (this.right === null) {\n\t\t\tthis.right = node;\n\t\t} else {\n\t\t\tthis.right.insert(node);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which overlap\n\t * with the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearch(point: number, results: IntervalNode[]): void {\n\t\t// If p is to the right of the rightmost point of any interval\n\t\t// in this node and all children, there won't be any matches.\n\t\tif (point > this.max) {\n\t\t\treturn;\n\t\t}\n\t\t// Search left children\n\t\tif (this.left !== null) {\n\t\t\tthis.left.search(point, results);\n\t\t}\n\t\t// Check this node\n\t\tif (this.low <= point && this.high > point) {\n\t\t\tresults.push(this);\n\t\t}\n\t\t// If p is to the left of the time of this interval,\n\t\t// then it can't be in any child to the right.\n\t\tif (this.low > point) {\n\t\t\treturn;\n\t\t}\n\t\t// Search right children\n\t\tif (this.right !== null) {\n\t\t\tthis.right.search(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Search the tree for nodes which are less\n\t * than the given point\n\t * @param  point  The point to query\n\t * @param  results  The array to put the results\n\t */\n\tsearchAfter(point: number, results: IntervalNode[]): void {\n\t\t// Check this node\n\t\tif (this.low >= point) {\n\t\t\tresults.push(this);\n\t\t\tif (this.left !== null) {\n\t\t\t\tthis.left.searchAfter(point, results);\n\t\t\t}\n\t\t}\n\t\t// search the right side\n\t\tif (this.right !== null) {\n\t\t\tthis.right.searchAfter(point, results);\n\t\t}\n\t}\n\n\t/**\n\t * Invoke the callback on this element and both it's branches\n\t * @param  {Function}  callback\n\t */\n\ttraverse(callback: (self: IntervalNode) => void): void {\n\t\tcallback(this);\n\t\tif (this.left !== null) {\n\t\t\tthis.left.traverse(callback);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.right.traverse(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateHeight(): void {\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tthis.height = this.right.height + 1;\n\t\t} else if (this.left !== null) {\n\t\t\tthis.height = this.left.height + 1;\n\t\t} else {\n\t\t\tthis.height = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Update the height of the node\n\t */\n\tupdateMax(): void {\n\t\tthis.max = this.high;\n\t\tif (this.left !== null) {\n\t\t\tthis.max = Math.max(this.max, this.left.max);\n\t\t}\n\t\tif (this.right !== null) {\n\t\t\tthis.max = Math.max(this.max, this.right.max);\n\t\t}\n\t}\n\n\t/**\n\t * The balance is how the leafs are distributed on the node\n\t * @return  Negative numbers are balanced to the right\n\t */\n\tgetBalance(): number {\n\t\tlet balance = 0;\n\t\tif (this.left !== null && this.right !== null) {\n\t\t\tbalance = this.left.height - this.right.height;\n\t\t} else if (this.left !== null) {\n\t\t\tbalance = this.left.height + 1;\n\t\t} else if (this.right !== null) {\n\t\t\tbalance = -(this.right.height + 1);\n\t\t}\n\t\treturn balance;\n\t}\n\n\t/**\n\t * @returns true if this node is the left child of its parent\n\t */\n\tisLeftChild(): boolean {\n\t\treturn this.parent !== null && this.parent.left === this;\n\t}\n\n\t/**\n\t * get/set the left node\n\t */\n\tget left(): IntervalNode | null {\n\t\treturn this._left;\n\t}\n\n\tset left(node: IntervalNode | null) {\n\t\tthis._left = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * get/set the right node\n\t */\n\tget right(): IntervalNode | null {\n\t\treturn this._right;\n\t}\n\n\tset right(node: IntervalNode | null) {\n\t\tthis._right = node;\n\t\tif (node !== null) {\n\t\t\tnode.parent = this;\n\t\t}\n\t\tthis.updateHeight();\n\t\tthis.updateMax();\n\t}\n\n\t/**\n\t * null out references.\n\t */\n\tdispose(): void {\n\t\tthis.parent = null;\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis.event = null;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface VolumeOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode<VolumeOptions> {\n\n\treadonly name: string = \"Volume\";\n\n\t/**\n\t * the output node\n\t */\n\toutput: Gain<\"decibels\">;\n\n\t/**\n\t * Input and output are the same\n\t */\n\tinput: Gain<\"decibels\">;\n\n\t/**\n\t * The unmuted volume\n\t */\n\tprivate _unmutedVolume: Decibels;\n\n\t/**\n\t * The volume control in decibels.\n\t * @example\n\t * const vol = new Tone.Volume().toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * vol.volume.value = -20;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume the initial volume in decibels\n\t */\n\tconstructor(volume?: Decibels);\n\tconstructor(options?: Partial<VolumeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n\t\tconst options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.volume,\n\t\t\tunits: \"decibels\",\n\t\t});\n\t\tthis.volume = this.output.gain;\n\t\treadOnly(this, \"volume\");\n\t\tthis._unmutedVolume = options.volume;\n\n\t\t// set the mute initially\n\t\tthis.mute = options.mute;\n\t}\n\n\tstatic getDefaults(): VolumeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const vol = new Tone.Volume(-12).toDestination();\n\t * const osc = new Tone.Oscillator().connect(vol).start();\n\t * // mute the output\n\t * vol.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this.volume.value === -Infinity;\n\t}\n\tset mute(mute: boolean) {\n\t\tif (!this.mute && mute) {\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t// maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t} else if (this.mute && !mute) {\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t}\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Decibels } from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { Param } from \"./Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\n\ninterface DestinationOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n}\n\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.getDestination());\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode<DestinationOptions> {\n\n\treadonly name: string = \"Destination\";\n\n\tinput: Volume = new Volume({ context: this.context });\n\toutput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The volume of the master output in decibels. -Infinity is silent, and 0 is no change. \n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * osc.start();\n\t * // ramp the volume down to silent over 10 seconds\n\t * Tone.getDestination().volume.rampTo(-Infinity, 10);\n\t */\n\tvolume: Param<\"decibels\"> = this.input.volume;\n\n\tconstructor(options: Partial<DestinationOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Destination.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Destination.getDefaults(), arguments);\n\n\t\tconnectSeries(this.input, this.output, this.context.rawContext.destination);\n\n\t\tthis.mute = options.mute;\n\t\tthis._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n\t}\n\n\tstatic getDefaults(): DestinationOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const oscillator = new Tone.Oscillator().start().toDestination();\n\t * setTimeout(() => {\n\t * \t// mute the output\n\t * \tTone.Destination.mute = true;\n\t * }, 1000);\n\t */\n\tget mute(): boolean {\n\t\treturn this.input.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis.input.mute = mute;\n\t}\n\n\t/**\n\t * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t * chained in the master effects chain.\n\t * @param args All arguments will be connected in a row and the Master will be routed through it.\n\t * @example\n\t * // route all audio through a filter and compressor\n\t * const lowpass = new Tone.Filter(800, \"lowpass\");\n\t * const compressor = new Tone.Compressor(-18);\n\t * Tone.Destination.chain(lowpass, compressor);\n\t */\n\tchain(...args: Array<AudioNode | ToneAudioNode>): this {\n\t\tthis.input.disconnect();\n\t\targs.unshift(this.input);\n\t\targs.push(this.output);\n\t\tconnectSeries(...args);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The maximum number of channels the system can output\n\t * @example\n\t * console.log(Tone.Destination.maxChannelCount);\n\t */\n\tget maxChannelCount(): number {\n\t\treturn this.context.rawContext.destination.maxChannelCount;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.destination = new Destination({ context });\n});\n\nonContextClose(context => {\n\tcontext.destination.dispose();\n});\n","import { Timeline, TimelineEvent } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\nimport { Seconds } from \"../type/Units\";\n\ninterface TimelineValueEvent<T> extends TimelineEvent {\n\tvalue: T;\n}\n\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue<Type> extends Tone {\n\n\treadonly name: string = \"TimelineValue\";\n\n\t/**\n\t * The timeline which stores the values\n\t */\n\tprivate _timeline: Timeline<TimelineValueEvent<Type>> = new Timeline({ memory: 10 })\n\n\t/**\n\t * Hold the value to return if there is no scheduled values\n\t */\n\tprivate _initialValue: Type;\n\n\t/**\n\t * @param initialValue The value to return if there is no scheduled values\n\t */\n\tconstructor(initialValue: Type) {\n\n\t\tsuper();\n\t\tthis._initialValue = initialValue;\n\t}\n\n\t/**\n\t * Set the value at the given time\n\t */\n\tset(value: Type, time: Seconds): this {\n\t\tthis._timeline.add({\n\t\t\tvalue, time\n\t\t});\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Get the value at the given time\n\t */\n\tget(time: Seconds): Type {\n\t\tconst event = this._timeline.get(time);\n\t\tif (event) {\n\t\t\treturn event.value;\n\t\t} else {\n\t\t\treturn this._initialValue;\n\t\t}\n\t}\n}\n","import { Seconds, Ticks } from \"../type/Units\";\nimport { noOp } from \"../util/Interface\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\nexport interface TransportEventOptions {\n\tcallback: (time: number) => void;\n\tonce: boolean;\n\ttime: Ticks;\n}\n\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n\n\t/**\n\t * Reference to the Transport that created it\n\t */\n\tprotected transport: Transport;\n\n\t/**\n\t * The unique id of the event\n\t */\n\tid: number = TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t */\n\ttime: Ticks;\n\n\t/**\n\t * The callback to invoke\n\t */\n\tprivate callback?: (time: Seconds) => void;\n\n\t/**\n\t * If the event should be removed after being invoked.\n\t */\n\tprivate _once: boolean;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportEventOptions>) {\n\n\t\tconst options: TransportEventOptions = Object.assign(TransportEvent.getDefaults(), opts);\n\n\t\tthis.transport = transport;\n\t\tthis.callback = options.callback;\n\t\tthis._once = options.once;\n\t\tthis.time = options.time;\n\t}\n\n\tstatic getDefaults(): TransportEventOptions {\n\t\treturn {\n\t\t\tcallback: noOp,\n\t\t\tonce: false,\n\t\t\ttime: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Current ID counter\n\t */\n\tprivate static _eventId = 0;\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\tif (this.callback) {\n\t\t\tthis.callback(time);\n\t\t\tif (this._once) {\n\t\t\t\tthis.transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tthis.callback = undefined;\n\t\treturn this;\n\t}\n}\n","import { BaseContext } from \"../context/BaseContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { Seconds, Ticks, Time } from \"../type/Units\";\nimport { TransportEvent, TransportEventOptions } from \"./TransportEvent\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\ninterface TransportRepeatEventOptions extends TransportEventOptions {\n\tinterval: Ticks;\n\tduration: Ticks;\n}\n\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n\n\t/**\n\t * When the event should stop repeating\n\t */\n\tprivate duration: Ticks;\n\n\t/**\n\t * The interval of the repeated event\n\t */\n\tprivate _interval: Ticks;\n\n\t/**\n\t * The ID of the current timeline event\n\t */\n\tprivate _currentId = -1;\n\n\t/**\n\t * The ID of the next timeline event\n\t */\n\tprivate _nextId = -1;\n\n\t/**\n\t * The time of the next event\n\t */\n\tprivate _nextTick = this.time;\n\n\t/**\n\t * a reference to the bound start method\n\t */\n\tprivate _boundRestart = this._restart.bind(this);\n\n\t/**\n\t * The audio context belonging to this event\n\t */\n\tprotected context: BaseContext;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportRepeatEventOptions>) {\n\n\t\tsuper(transport, opts);\n\n\t\tconst options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n\n\t\tthis.duration = new TicksClass(transport.context, options.duration).valueOf();\n\t\tthis._interval = new TicksClass(transport.context, options.interval).valueOf();\n\t\tthis._nextTick = options.time;\n\t\tthis.transport.on(\"start\", this._boundRestart);\n\t\tthis.transport.on(\"loopStart\", this._boundRestart);\n\t\tthis.context = this.transport.context;\n\t\tthis._restart();\n\t}\n\n\tstatic getDefaults(): TransportRepeatEventOptions {\n\t\treturn Object.assign({}, TransportEvent.getDefaults(), {\n\t\t\tduration: Infinity,\n\t\t\tinterval: 1,\n\t\t\tonce: false,\n\t\t});\n\t}\n\n\t/**\n\t * Invoke the callback. Returns the tick time which\n\t * the next event should be scheduled at.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\t// create more events if necessary\n\t\tthis._createEvents(time);\n\t\t// call the super class\n\t\tsuper.invoke(time);\n\t}\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t */\n\tprivate _createEvents(time: Seconds): void {\n\t\t// schedule the next event\n\t\tconst ticks = this.transport.getTicksAtTime(time);\n\t\tif (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n\t\t\tthis._nextTick += this._interval;\n\t\t\tthis._currentId = this._nextId;\n\t\t\tthis._nextId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\t}\n\t}\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t */\n\tprivate _restart(time?: Time): void {\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\tthis._nextTick = this.time;\n\t\tconst ticks = this.transport.getTicksAtTime(time);\n\t\tif (ticks > this.time) {\n\t\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t\t}\n\t\tthis._currentId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t\tthis._nextTick += this._interval;\n\t\tthis._nextId = this.transport.scheduleOnce(this.invoke.bind(this),\n\t\t\tnew TicksClass(this.context, this._nextTick).toSeconds());\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.transport.clear(this._currentId);\n\t\tthis.transport.clear(this._nextId);\n\t\tthis.transport.off(\"start\", this._boundRestart);\n\t\tthis.transport.off(\"loopStart\", this._boundRestart);\n\t\treturn this;\n\t}\n}\n","import { TimeClass } from \"../../core/type/Time\";\nimport { PlaybackState } from \"../../core/util/StateTimeline\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { Signal } from \"../../signal/Signal\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext, ToneWithContextOptions } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport {\n\tBarsBeatsSixteenths, BPM, NormalRange, Seconds,\n\tSubdivision, Ticks, Time, TimeSignature, TransportTime\n} from \"../type/Units\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TickParam } from \"./TickParam\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n\ninterface TransportOptions extends ToneWithContextOptions {\n\tbpm: BPM;\n\tswing: NormalRange;\n\tswingSubdivision: Subdivision;\n\ttimeSignature: number;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tppq: number;\n}\n\ntype TransportEventNames = \"start\" | \"stop\" | \"pause\" | \"loop\" | \"loopEnd\" | \"loopStart\";\n\ninterface SyncedSignalEvent {\n\tsignal: Signal;\n\tinitial: number;\n\tratio: Gain;\n}\n\ntype TransportCallback = (time: Seconds) => void;\n\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext<TransportOptions> implements Emitter<TransportEventNames> {\n\n\treadonly name: string = \"Transport\";\n\n\t//-------------------------------------\n\t// \tLOOPING\n\t//-------------------------------------\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tprivate _loop: TimelineValue<boolean> = new TimelineValue(false);\n\n\t/**\n\t * The loop start position in ticks\n\t */\n\tprivate _loopStart: Ticks = 0;\n\n\t/**\n\t * The loop end position in ticks\n\t */\n\tprivate _loopEnd: Ticks = 0;\n\n\t//-------------------------------------\n\t// \tCLOCK/TEMPO\n\t//-------------------------------------\n\n\t/**\n\t * Pulses per quarter is the number of ticks per quarter note.\n\t */\n\tprivate _ppq: number;\n\n\t/**\n\t * watches the main oscillator for timing ticks\n\t * initially starts at 120bpm\n\t */\n\tprivate _clock: Clock<\"bpm\">;\n\n\t/**\n\t * The Beats Per Minute of the Transport.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * Tone.Transport.bpm.value = 80;\n\t * // start/stop the oscillator every quarter note\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"4n\");\n\t * Tone.Transport.start();\n\t * // ramp the bpm to 120 over 10 seconds\n\t * Tone.Transport.bpm.rampTo(120, 10);\n\t */\n\tbpm: TickParam<\"bpm\">;\n\n\t/**\n\t * The time signature, or more accurately the numerator\n\t * of the time signature over a denominator of 4.\n\t */\n\tprivate _timeSignature: number;\n\n\t//-------------------------------------\n\t// \tTIMELINE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * All the events in an object to keep track by ID\n\t */\n\tprivate _scheduledEvents = {};\n\n\t/**\n\t * The scheduled events.\n\t */\n\tprivate _timeline: Timeline<TransportEvent> = new Timeline();\n\n\t/**\n\t * Repeated events\n\t */\n\tprivate _repeatedEvents: IntervalTimeline = new IntervalTimeline();\n\n\t/**\n\t * All of the synced Signals\n\t */\n\tprivate _syncedSignals: SyncedSignalEvent[] = [];\n\n\t//-------------------------------------\n\t// \tSWING\n\t//-------------------------------------\n\n\t/**\n\t * The subdivision of the swing\n\t */\n\tprivate _swingTicks: Ticks;\n\n\t/**\n\t * The swing amount\n\t */\n\tprivate _swingAmount: NormalRange = 0;\n\n\tconstructor(options?: Partial<TransportOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Transport.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Transport.getDefaults(), arguments);\n\n\t\t// CLOCK/TEMPO\n\t\tthis._ppq = options.ppq;\n\t\tthis._clock = new Clock({\n\t\t\tcallback: this._processTick.bind(this),\n\t\t\tcontext: this.context,\n\t\t\tfrequency: 0,\n\t\t\tunits: \"bpm\",\n\t\t});\n\t\tthis._bindClockEvents();\n\t\tthis.bpm = this._clock.frequency as unknown as TickParam<\"bpm\">;\n\t\tthis._clock.frequency.multiplier = options.ppq;\n\t\tthis.bpm.setValueAtTime(options.bpm, 0);\n\t\treadOnly(this, \"bpm\");\n\t\tthis._timeSignature = options.timeSignature;\n\n\t\t// SWING\n\t\tthis._swingTicks = options.ppq / 2; // 8n\n\t}\n\n\tstatic getDefaults(): TransportOptions {\n\t\treturn Object.assign(ToneWithContext.getDefaults(), {\n\t\t\tbpm: 120,\n\t\t\tloopEnd: \"4m\" as Subdivision,\n\t\t\tloopStart: 0,\n\t\t\tppq: 192,\n\t\t\tswing: 0,\n\t\t\tswingSubdivision: \"8n\" as Subdivision,\n\t\t\ttimeSignature: 4,\n\t\t});\n\t}\n\n\t//-------------------------------------\n\t// \tTICKS\n\t//-------------------------------------\n\n\t/**\n\t * called on every tick\n\t * @param  tickTime clock relative tick time\n\t */\n\tprivate _processTick(tickTime: Seconds, ticks: Ticks): void {\n\t\t// do the loop test\n\t\tif (this._loop.get(tickTime)) {\n\t\t\tif (ticks >= this._loopEnd) {\n\t\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\t\tticks = this._loopStart;\n\t\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\t\tthis.emit(\"loop\", tickTime);\n\t\t\t}\n\t\t}\n\t\t// handle swing\n\t\tif (this._swingAmount > 0 &&\n\t\t\tticks % this._ppq !== 0 && // not on a downbeat\n\t\t\tticks % (this._swingTicks * 2) !== 0) {\n\t\t\t// add some swing\n\t\t\tconst progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\t\tconst amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\t\ttickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n\t\t}\n\t\t// invoke the timeline events scheduled on this tick\n\t\tthis._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n\t}\n\n\t//-------------------------------------\n\t// \tSCHEDULABLE EVENTS\n\t//-------------------------------------\n\n\t/**\n\t * Schedule an event along the timeline.\n\t * @param callback The callback to be invoked at the time.\n\t * @param time The time to invoke the callback at.\n\t * @return The id of the event which can be used for canceling the event.\n\t * @example\n\t * // schedule an event on the 16th measure\n\t * Tone.Transport.schedule((time) => {\n\t * \t// invoked on measure 16\n\t * \tconsole.log(\"measure 16!\");\n\t * }, \"16:0:0\");\n\t */\n\tschedule(callback: TransportCallback, time: TransportTime | TransportTimeClass): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Schedule a repeated event along the timeline. The event will fire\n\t * at the `interval` starting at the `startTime` and for the specified\n\t * `duration`.\n\t * @param  callback   The callback to invoke.\n\t * @param  interval   The duration between successive callbacks. Must be a positive number.\n\t * @param  startTime  When along the timeline the events should start being invoked.\n\t * @param  duration How long the event should repeat.\n\t * @return  The ID of the scheduled event. Use this to cancel the event.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // a callback invoked every eighth note after the first measure\n\t * Tone.Transport.scheduleRepeat((time) => {\n\t * \tosc.start(time).stop(time + 0.1);\n\t * }, \"8n\", \"1m\");\n\t */\n\tscheduleRepeat(\n\t\tcallback: TransportCallback,\n\t\tinterval: Time | TimeClass,\n\t\tstartTime?: TransportTime | TransportTimeClass,\n\t\tduration: Time = Infinity,\n\t): number {\n\t\tconst event = new TransportRepeatEvent(this, {\n\t\t\tcallback,\n\t\t\tduration: new TimeClass(this.context, duration).toTicks(),\n\t\t\tinterval: new TimeClass(this.context, interval).toTicks(),\n\t\t\ttime: new TransportTimeClass(this.context, startTime).toTicks(),\n\t\t});\n\t\t// kick it off if the Transport is started\n\t\t// @ts-ignore\n\t\treturn this._addEvent(event, this._repeatedEvents);\n\t}\n\n\t/**\n\t * Schedule an event that will be removed after it is invoked.\n\t * @param callback The callback to invoke once.\n\t * @param time The time the callback should be invoked.\n\t * @returns The ID of the scheduled event.\n\t */\n\tscheduleOnce(callback: TransportCallback, time: TransportTime | TransportTimeClass): number {\n\t\tconst event = new TransportEvent(this, {\n\t\t\tcallback,\n\t\t\tonce: true,\n\t\t\ttime: new TransportTimeClass(this.context, time).toTicks(),\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t}\n\n\t/**\n\t * Clear the passed in event id from the timeline\n\t * @param eventId The id of the event.\n\t */\n\tclear(eventId: number): this {\n\t\tif (this._scheduledEvents.hasOwnProperty(eventId)) {\n\t\t\tconst item = this._scheduledEvents[eventId.toString()];\n\t\t\titem.timeline.remove(item.event);\n\t\t\titem.event.dispose();\n\t\t\tdelete this._scheduledEvents[eventId.toString()];\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add an event to the correct timeline. Keep track of the\n\t * timeline it was added to.\n\t * @returns the event id which was just added\n\t */\n\tprivate _addEvent(event: TransportEvent, timeline: Timeline<TransportEvent>): number {\n\t\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\tevent,\n\t\t\ttimeline,\n\t\t};\n\t\ttimeline.add(event);\n\t\treturn event.id;\n\t}\n\n\t/**\n\t * Remove scheduled events from the timeline after\n\t * the given time. Repeated events will be removed\n\t * if their startTime is after the given time\n\t * @param after Clear all events after this time.\n\t */\n\tcancel(after: TransportTime = 0): this {\n\t\tconst computedAfter = this.toTicks(after);\n\t\tthis._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n\t\tthis._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSTART/STOP/PAUSE\n\t//-------------------------------------\n\n\t/**\n\t * Bind start/stop/pause events from the clock and emit them.\n\t */\n\tprivate _bindClockEvents(): void {\n\t\tthis._clock.on(\"start\", (time, offset) => {\n\t\t\toffset = new TicksClass(this.context, offset).toSeconds();\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t});\n\n\t\tthis._clock.on(\"stop\", (time) => {\n\t\t\tthis.emit(\"stop\", time);\n\t\t});\n\n\t\tthis._clock.on(\"pause\", (time) => {\n\t\t\tthis.emit(\"pause\", time);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t */\n\tget state(): PlaybackState {\n\t\treturn this._clock.getStateAtTime(this.now());\n\t}\n\n\t/**\n\t * Start the transport and all sources synced to the transport.\n\t * @param  time The time when the transport should start.\n\t * @param  offset The timeline offset to start the transport.\n\t * @example\n\t * // start the transport in one second starting at beginning of the 5th measure.\n\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t */\n\tstart(time?: Time, offset?: TransportTime): this {\n\t\tlet offsetTicks;\n\t\tif (isDefined(offset)) {\n\t\t\toffsetTicks = this.toTicks(offset);\n\t\t}\n\t\t// start the clock\n\t\tthis._clock.start(time, offsetTicks);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the transport and all sources synced to the transport.\n\t * @param time The time when the transport should stop.\n\t * @example\n\t * Tone.Transport.stop();\n\t */\n\tstop(time?: Time): this {\n\t\tthis._clock.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pause the transport and all sources synced to the transport.\n\t */\n\tpause(time?: Time): this {\n\t\tthis._clock.pause(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Toggle the current state of the transport. If it is\n\t * started, it will stop it, otherwise it will start the Transport.\n\t * @param  time The time of the event\n\t */\n\ttoggle(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._clock.getStateAtTime(time) !== \"started\") {\n\t\t\tthis.start(time);\n\t\t} else {\n\t\t\tthis.stop(time);\n\t\t}\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// \tSETTERS/GETTERS\n\t//-------------------------------------\n\n\t/**\n\t * The time signature as just the numerator over 4.\n\t * For example 4/4 would be just 4 and 6/8 would be 3.\n\t * @example\n\t * // common time\n\t * Tone.Transport.timeSignature = 4;\n\t * // 7/8\n\t * Tone.Transport.timeSignature = [7, 8];\n\t * // this will be reduced to a single number\n\t * Tone.Transport.timeSignature; // returns 3.5\n\t */\n\tget timeSignature(): TimeSignature {\n\t\treturn this._timeSignature;\n\t}\n\tset timeSignature(timeSig: TimeSignature) {\n\t\tif (isArray(timeSig)) {\n\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t}\n\t\tthis._timeSignature = timeSig;\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the starting position of the loop.\n\t */\n\tget loopStart(): Time {\n\t\treturn new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n\t}\n\tset loopStart(startPosition: Time) {\n\t\tthis._loopStart = this.toTicks(startPosition);\n\t}\n\n\t/**\n\t * When the Transport.loop = true, this is the ending position of the loop.\n\t */\n\tget loopEnd(): Time {\n\t\treturn new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n\t}\n\tset loopEnd(endPosition: Time) {\n\t\tthis._loopEnd = this.toTicks(endPosition);\n\t}\n\n\t/**\n\t * If the transport loops or not.\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop.get(this.now());\n\t}\n\tset loop(loop) {\n\t\tthis._loop.set(loop, this.now());\n\t}\n\n\t/**\n\t * Set the loop start and stop at the same time.\n\t * @example\n\t * // loop over the first measure\n\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t * Tone.Transport.loop = true;\n\t */\n\tsetLoopPoints(startPosition: TransportTime, endPosition: TransportTime): this {\n\t\tthis.loopStart = startPosition;\n\t\tthis.loopEnd = endPosition;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n\t */\n\tget swing(): NormalRange {\n\t\treturn this._swingAmount;\n\t}\n\tset swing(amount: NormalRange) {\n\t\t// scale the values to a normal range\n\t\tthis._swingAmount = amount;\n\t}\n\n\t/**\n\t * Set the subdivision which the swing will be applied to.\n\t * The default value is an 8th note. Value must be less\n\t * than a quarter note.\n\t */\n\tget swingSubdivision(): Subdivision {\n\t\treturn new TicksClass(this.context, this._swingTicks).toNotation();\n\t}\n\tset swingSubdivision(subdivision: Subdivision) {\n\t\tthis._swingTicks = this.toTicks(subdivision);\n\t}\n\n\t/**\n\t * The Transport's position in Bars:Beats:Sixteenths.\n\t * Setting the value will jump to that position right away.\n\t */\n\tget position(): BarsBeatsSixteenths | Time {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\treturn new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n\t}\n\tset position(progress: Time) {\n\t\tconst ticks = this.toTicks(progress);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's position in seconds\n\t * Setting the value will jump to that position right away.\n\t */\n\tget seconds(): Seconds {\n\t\treturn this._clock.seconds;\n\t}\n\tset seconds(s: Seconds) {\n\t\tconst now = this.now();\n\t\tconst ticks = this._clock.frequency.timeToTicks(s, now);\n\t\tthis.ticks = ticks;\n\t}\n\n\t/**\n\t * The Transport's loop position as a normalized value. Always\n\t * returns 0 if the transport if loop is not true.\n\t */\n\tget progress(): NormalRange {\n\t\tif (this.loop) {\n\t\t\tconst now = this.now();\n\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * The transports current tick position.\n\t */\n\tget ticks(): Ticks {\n\t\treturn this._clock.ticks;\n\t}\n\tset ticks(t: Ticks) {\n\t\tif (this._clock.ticks !== t) {\n\t\t\tconst now = this.now();\n\t\t\t// stop everything synced to the transport\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst ticks = this._clock.getTicksAtTime(now);\n\t\t\t\t// schedule to start on the next tick, #573\n\t\t\t\tconst remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);\n\t\t\t\tconst time = now + remainingTick;\n\t\t\t\tthis.emit(\"stop\", time);\n\t\t\t\tthis._clock.setTicksAtTime(t, time);\n\t\t\t\t// restart it with the new time\n\t\t\t\tthis.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n\t\t\t} else {\n\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  time  When to get the tick value\n\t * @return The tick value at the given time.\n\t */\n\tgetTicksAtTime(time?: Time): Ticks {\n\t\treturn Math.round(this._clock.getTicksAtTime(time));\n\t}\n\n\t/**\n\t * Return the elapsed seconds at the given time.\n\t * @param  time  When to get the elapsed seconds\n\t * @return  The number of elapsed seconds\n\t */\n\tgetSecondsAtTime(time: Time): Seconds {\n\t\treturn this._clock.getSecondsAtTime(time);\n\t}\n\n\t/**\n\t * Pulses Per Quarter note. This is the smallest resolution\n\t * the Transport timing supports. This should be set once\n\t * on initialization and not set again. Changing this value\n\t * after other objects have been created can cause problems.\n\t */\n\tget PPQ(): number {\n\t\treturn this._clock.frequency.multiplier;\n\t}\n\tset PPQ(ppq: number) {\n\t\tthis._clock.frequency.multiplier = ppq;\n\t}\n\n\t//-------------------------------------\n\t// \tSYNCING\n\t//-------------------------------------\n\n\t/**\n\t * Returns the time aligned to the next subdivision\n\t * of the Transport. If the Transport is not started,\n\t * it will return 0.\n\t * Note: this will not work precisely during tempo ramps.\n\t * @param  subdivision  The subdivision to quantize to\n\t * @return  The context time of the next subdivision.\n\t * @example\n\t * // the transport must be started, otherwise returns 0\n\t * Tone.Transport.start(); \n\t * Tone.Transport.nextSubdivision(\"4n\");\n\t */\n\tnextSubdivision(subdivision?: Time): Seconds {\n\t\tsubdivision = this.toTicks(subdivision);\n\t\tif (this.state !== \"started\") {\n\t\t\t// if the transport's not started, return 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tconst now = this.now();\n\t\t\t// the remainder of the current ticks and the subdivision\n\t\t\tconst transportPos = this.getTicksAtTime(now);\n\t\t\tconst remainingTicks = subdivision - transportPos % subdivision;\n\t\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t\t}\n\t}\n\n\t/**\n\t * Attaches the signal to the tempo control signal so that\n\t * any changes in the tempo will change the signal in the same\n\t * ratio.\n\t *\n\t * @param signal\n\t * @param ratio Optionally pass in the ratio between the two signals.\n\t * \t\t\tOtherwise it will be computed based on their current values.\n\t */\n\tsyncSignal(signal: Signal<any>, ratio?: number): this {\n\t\tif (!ratio) {\n\t\t\t// get the sync ratio\n\t\t\tconst now = this.now();\n\t\t\tif (signal.getValueAtTime(now) !== 0) {\n\t\t\t\tconst bpm = this.bpm.getValueAtTime(now);\n\t\t\t\tconst computedFreq = 1 / (60 / bpm / this.PPQ);\n\t\t\t\tratio = signal.getValueAtTime(now) / computedFreq;\n\t\t\t} else {\n\t\t\t\tratio = 0;\n\t\t\t}\n\t\t}\n\t\tconst ratioSignal = new Gain(ratio);\n\t\t// @ts-ignore\n\t\tthis.bpm.connect(ratioSignal);\n\t\t// @ts-ignore\n\t\tratioSignal.connect(signal._param);\n\t\tthis._syncedSignals.push({\n\t\t\tinitial: signal.value,\n\t\t\tratio: ratioSignal,\n\t\t\tsignal,\n\t\t});\n\t\tsignal.value = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsyncs a previously synced signal from the transport's control.\n\t * See Transport.syncSignal.\n\t */\n\tunsyncSignal(signal: Signal<any>): this {\n\t\tfor (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n\t\t\tconst syncedSignal = this._syncedSignals[i];\n\t\t\tif (syncedSignal.signal === signal) {\n\t\t\t\tsyncedSignal.ratio.dispose();\n\t\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._clock.dispose();\n\t\twritable(this, \"bpm\");\n\t\tthis._timeline.dispose();\n\t\tthis._repeatedEvents.dispose();\n\t\treturn this;\n\t}\n\n\t//-------------------------------------\n\t// EMITTER MIXIN TO SATISFY COMPILER\n\t//-------------------------------------\n\n\ton!: (event: TransportEventNames, callback: (...args: any[]) => void) => this;\n\tonce!: (event: TransportEventNames, callback: (...args: any[]) => void) => this;\n\toff!: (event: TransportEventNames, callback?: ((...args: any[]) => void) | undefined) => this;\n\temit!: (event: any, ...args: any[]) => this;\n}\n\nEmitter.mixin(Transport);\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.transport = new Transport({ context });\n});\n\nonContextClose(context => {\n\tcontext.transport.dispose();\n});\n","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Seconds, Time } from \"../core/type/Units\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { BasicPlaybackState, StateTimeline, StateTimelineEvent } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n\ntype onStopCallback = (source: Source<any>) => void;\n\nexport interface SourceOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n\tmute: boolean;\n\tonstop: onStopCallback;\n}\n\n/**\n * Base class for sources. \n * start/stop of this.context.transport.\n * \n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport abstract class Source<Options extends SourceOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The output note\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * Sources have no inputs\n\t */\n\tinput = undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const source = new Tone.PWMOscillator().toDestination();\n\t * source.volume.value = -6;\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * The callback to invoke when the source is stopped.\n\t */\n\tonstop: onStopCallback;\n\n\t/**\n\t * Keep track of the scheduled state.\n\t */\n\tprotected _state: StateTimeline<{\n\t\tduration?: Seconds;\n\t\toffset?: Seconds;\n\t\t/**\n\t\t * Either the buffer is explicitly scheduled to end using the stop method,\n\t\t * or it's implicitly ended when the buffer is over.\n\t\t */\n\t\timplicitEnd?: boolean;\n\t}> = new StateTimeline(\"stopped\");\n\n\t/**\n\t * The synced `start` callback function from the transport\n\t */\n\tprotected _synced = false;\n\n\t/**\n\t * Keep track of all of the scheduled event ids\n\t */\n\tprivate _scheduled: number[] = [];\n\n\t/**\n\t * Placeholder functions for syncing/unsyncing to transport\n\t */\n\tprivate _syncedStart: (time: Seconds, offset: Seconds) => void = noOp;\n\tprivate _syncedStop: (time: Seconds) => void = noOp;\n\n\tconstructor(options: SourceOptions) {\n\t\tsuper(options);\n\t\tthis._state.memory = 100;\n\t\tthis._state.increasing = true;\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tmute: options.mute,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis.onstop = options.onstop;\n\t}\n\n\tstatic getDefaults(): SourceOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tonstop: noOp,\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n\t * \tplayer.start();\n\t * \tconsole.log(player.state);\n\t * }).toDestination();\n\t */\n\tget state(): BasicPlaybackState {\n\t\tif (this._synced) {\n\t\t\tif (this.context.transport.state === \"started\") {\n\t\t\t\treturn this._state.getValueAtTime(this.context.transport.seconds) as BasicPlaybackState;\n\t\t\t} else {\n\t\t\t\treturn \"stopped\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._state.getValueAtTime(this.now()) as BasicPlaybackState;\n\t\t}\n\t}\n\n\t/**\n\t * Mute the output.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * // mute the output\n\t * osc.mute = true;\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute: boolean) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t// overwrite these functions\n\tprotected abstract _start(time: Time, offset?: Time, duration?: Time): void;\n\tprotected abstract _stop(time: Time): void;\n\tprotected abstract _restart(time: Seconds, offset?: Time, duration?: Time): void;\n\n\t/**\n\t * Ensure that the scheduled time is not before the current time.\n\t * Should only be used when scheduled unsynced.\n\t */\n\tprivate _clampToCurrentTime(time: Seconds): Seconds {\n\t\tif (this._synced) {\n\t\t\treturn time;\n\t\t} else {\n\t\t\treturn Math.max(time, this.context.currentTime);\n\t\t}\n\t}\n\n\t/**\n\t * Start the source at the specified time. If no time is given,\n\t * start the source now.\n\t * @param  time When the source should be started.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tlet computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\t// if it's started, stop it and restart it\n\t\tif (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\t// time should be strictly greater than the previous start time\n\t\t\tassert(GT(computedTime, (this._state.get(computedTime) as StateTimelineEvent).time), \"Start time must be strictly greater than previous start time\");\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tthis.log(\"restart\", computedTime);\n\t\t\tthis.restart(computedTime, offset, duration);\n\t\t} else {\n\t\t\tthis.log(\"start\", computedTime);\n\t\t\tthis._state.setStateAtTime(\"started\", computedTime);\n\t\t\tif (this._synced) {\n\t\t\t\t// add the offset time to the event\n\t\t\t\tconst event = this._state.get(computedTime);\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.offset = this.toSeconds(defaultArg(offset, 0));\n\t\t\t\t\tevent.duration = duration ? this.toSeconds(duration) : undefined;\n\t\t\t\t}\n\t\t\t\tconst sched = this.context.transport.schedule(t => {\n\t\t\t\t\tthis._start(t, offset, duration);\n\t\t\t\t}, computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\n\t\t\t\t// if the transport is already started\n\t\t\t\t// and the time is greater than where the transport is\n\t\t\t\tif (this.context.transport.state === \"started\" && \n\t\t\t\t\tthis.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {\n\t\t\t\t\tthis._syncedStart(this.now(), this.context.transport.seconds);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tassertContextRunning(this.context);\n\t\t\t\tthis._start(computedTime, offset, duration);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the source at the specified time. If no time is given,\n\t * stop the source now.\n\t * @param  time When the source should be stopped.\n\t * @example\n\t * const source = new Tone.Oscillator().toDestination();\n\t * source.start();\n\t * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n\t */\n\tstop(time?: Time): this {\n\t\tlet computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n\t\tcomputedTime = this._clampToCurrentTime(computedTime);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n\t\t\tthis.log(\"stop\", computedTime);\n\t\t\tif (!this._synced) {\n\t\t\t\tthis._stop(computedTime);\n\t\t\t} else {\n\t\t\t\tconst sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n\t\t\t\tthis._scheduled.push(sched);\n\t\t\t}\n\t\t\tthis._state.cancel(computedTime);\n\t\t\tthis._state.setStateAtTime(\"stopped\", computedTime);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Restart the source.\n\t */\n\trestart(time?: Time, offset?: Time, duration?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === \"started\") {\n\t\t\tthis._state.cancel(time);\n\t\t\tthis._restart(time, offset, duration);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the source to the Transport so that all subsequent\n\t * calls to `start` and `stop` are synced to the TransportTime\n\t * instead of the AudioContext time.\n\t *\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination();\n\t * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t * osc.sync().start(0).stop(0.3);\n\t * // start the transport.\n\t * Tone.Transport.start();\n\t * // set it to loop once a second\n\t * Tone.Transport.loop = true;\n\t * Tone.Transport.loopEnd = 1;\n\t */\n\tsync(): this {\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tthis._syncedStart = (time, offset) => {\n\t\t\t\tif (offset > 0) {\n\t\t\t\t\t// get the playback state at that time\n\t\t\t\t\tconst stateEvent = this._state.get(offset);\n\t\t\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\t\t\tif (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n\t\t\t\t\t\t// get the offset\n\t\t\t\t\t\tconst startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\t\t\tlet duration: number | undefined;\n\t\t\t\t\t\tif (stateEvent.duration) {\n\t\t\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._syncedStop = time => {\n\t\t\t\tconst seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\t\t\tif (this._state.getValueAtTime(seconds) === \"started\") {\n\t\t\t\t\tthis._stop(time);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.context.transport.on(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"loopStart\", this._syncedStart);\n\t\t\tthis.context.transport.on(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.on(\"loopEnd\", this._syncedStop);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the source to the Transport. See Source.sync\n\t */\n\tunsync(): this {\n\t\tif (this._synced) {\n\t\t\tthis.context.transport.off(\"stop\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"pause\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"loopEnd\", this._syncedStop);\n\t\t\tthis.context.transport.off(\"start\", this._syncedStart);\n\t\t\tthis.context.transport.off(\"loopStart\", this._syncedStart);\n\t\t}\n\t\tthis._synced = false;\n\t\t// clear all of the scheduled ids\n\t\tthis._scheduled.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduled = [];\n\t\tthis._state.cancel(0);\n\t\t// stop it also\n\t\tthis._stop(0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.onstop = noOp;\n\t\tthis.unsync();\n\t\tthis._volume.dispose();\n\t\tthis._state.dispose();\n\t\treturn this;\n\t}\n}\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { GainFactor, Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource, OneShotSourceCurve, OneShotSourceOptions } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n\nexport type ToneBufferSourceCurve = OneShotSourceCurve;\n\nexport interface ToneBufferSourceOptions extends OneShotSourceOptions {\n\turl: string | AudioBuffer | ToneAudioBuffer;\n\tcurve: ToneBufferSourceCurve;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\tloopStart: Time;\n\tloopEnd: Time;\n\tloop: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n}\n\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource<ToneBufferSourceOptions> {\n\n\treadonly name: string = \"ToneBufferSource\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _source = this.context.createBufferSource();\n\tprotected _internalChannels = [this._source];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly playbackRate: Param<\"positive\">;\n\n\t/**\n\t * The private instance of the buffer object\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * indicators if the source has started/stopped\n\t */\n\tprivate _sourceStarted = false;\n\tprivate _sourceStopped = false;\n\n\t/**\n\t * @param url The buffer to play or url to load\n\t * @param onload The callback to invoke when the buffer is done playing.\n\t */\n\tconstructor(url?: ToneAudioBuffer | AudioBuffer | string, onload?: () => void);\n\tconstructor(options?: Partial<ToneBufferSourceOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tconnect(this._source, this._gainNode);\n\t\tthis._source.onended = () => this._stopSource();\n\n\t\t/**\n\t\t * The playbackRate of the buffer\n\t\t */\n\t\tthis.playbackRate = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._source.playbackRate,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.playbackRate,\n\t\t});\n\n\t\t// set some values initially\n\t\tthis.loop = options.loop;\n\t\tthis.loopStart = options.loopStart;\n\t\tthis.loopEnd = options.loopEnd;\n\t\tthis._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n\n\t\tthis._internalChannels.push(this._source);\n\t}\n\n\tstatic getDefaults(): ToneBufferSourceOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\turl: new ToneAudioBuffer(),\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t});\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(t: Time) {\n\t\tthis._fadeIn = t;\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(t: Time) {\n\t\tthis._fadeOut = t;\n\t}\n\n\t/**\n\t * The curve applied to the fades, either \"linear\" or \"exponential\"\n\t */\n\tget curve(): ToneBufferSourceCurve {\n\t\treturn this._curve;\n\t}\n\tset curve(t) {\n\t\tthis._curve = t;\n\t}\n\n\t/**\n\t * Start the buffer\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t * @param  gain  The gain to play the buffer back at.\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time, gain: GainFactor = 1): this {\n\t\tassert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n\t\tconst computedTime = this.toSeconds(time);\n\n\t\t// apply the gain envelope\n\t\tthis._startGain(computedTime, gain);\n\n\t\t// if it's a loop the default offset is the loopstart point\n\t\tif (this.loop) {\n\t\t\toffset = defaultArg(offset, this.loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\t\t// make sure the offset is not less than 0\n\t\tlet computedOffset = Math.max(this.toSeconds(offset), 0);\n\n\t\t// start the buffer source\n\t\tif (this.loop) {\n\t\t\t// modify the offset if it's greater than the loop time\n\t\t\tconst loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\t\tconst loopStart = this.toSeconds(this.loopStart);\n\t\t\tconst loopDuration = loopEnd - loopStart;\n\t\t\t// move the offset back\n\t\t\tif (GTE(computedOffset, loopEnd)) {\n\t\t\t\tcomputedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n\t\t\t}\n\t\t\t// when the offset is very close to the duration, set it to 0\n\t\t\tif (EQ(computedOffset, this.buffer.duration)) {\n\t\t\t\tcomputedOffset = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// this.buffer.loaded would have return false if the AudioBuffer was undefined\n\t\tthis._source.buffer = this.buffer.get() as AudioBuffer;\n\t\tthis._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n\t\tif (LT(computedOffset, this.buffer.duration)) {\n\t\t\tthis._sourceStarted = true;\n\t\t\tthis._source.start(computedTime, computedOffset);\n\t\t}\n\n\t\t// if a duration is given, schedule a stop\n\t\tif (isDefined(duration)) {\n\t\t\tlet computedDur = this.toSeconds(duration);\n\t\t\t// make sure it's never negative\n\t\t\tcomputedDur = Math.max(computedDur, 0);\n\t\t\tthis.stop(computedTime + computedDur);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tif (!this._sourceStopped && this._sourceStarted) {\n\t\t\tthis._sourceStopped = true;\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._onended();\n\t\t}\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._source.loopStart;\n\t}\n\tset loopStart(loopStart: Time) {\n\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._source.loopEnd;\n\t}\n\tset loopEnd(loopEnd: Time) {\n\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer: ToneAudioBuffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t */\n\tget loop(): boolean {\n\t\treturn this._source.loop;\n\t}\n\tset loop(loop: boolean) {\n\t\tthis._source.loop = loop;\n\t\tif (this._sourceStarted) {\n\t\t\tthis.cancelStop();\n\t\t}\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._source.onended = null;\n\t\tthis._source.disconnect();\n\t\tthis._buffer.dispose();\n\t\tthis.playbackRate.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { Positive, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source, SourceOptions } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n\nexport type NoiseType = \"white\" | \"brown\" | \"pink\";\n\nexport interface NoiseOptions extends SourceOptions {\n\ttype: NoiseType;\n\tplaybackRate: Positive;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nexport class Noise extends Source<NoiseOptions> {\n\n\treadonly name: string = \"Noise\";\n\n\t/**\n\t * Private reference to the source\n\t */\n\tprivate _source: ToneBufferSource | null = null;\n\n\t/**\n\t * private reference to the type\n\t */\n\tprivate _type!: NoiseType;\n\n\t/**\n\t * The playback rate of the noise. Affects\n\t * the \"frequency\" of the noise.\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tprotected _fadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tprotected _fadeOut: Time;\n\n\t/**\n\t * @param type the noise type (white|pink|brown)\n\t */\n\tconstructor(type?: NoiseType);\n\tconstructor(options?: Partial<NoiseOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n\t\tconst options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.type = options.type;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): NoiseOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tplaybackRate: 1,\n\t\t\ttype: \"white\" as NoiseType,\n\t\t});\n\t}\n\n\t/**\n\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n\t * @example\n\t * const noise = new Tone.Noise().toDestination().start();\n\t * noise.type = \"brown\";\n\t */\n\tget type(): NoiseType {\n\t\treturn this._type;\n\t}\n\tset type(type: NoiseType) {\n\t\tassert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n\t\tif (this._type !== type) {\n\t\t\tthis._type = type;\n\t\t\t// if it's playing, stop and restart it\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tconst now = this.now();\n\t\t\t\tthis._stop(now);\n\t\t\t\tthis._start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The playback rate of the noise. Affects\n\t * the \"frequency\" of the noise.\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate: Positive) {\n\t\tthis._playbackRate = rate;\n\t\tif (this._source) {\n\t\t\tthis._source.playbackRate.value = rate;\n\t\t}\n\t}\n\n\t/**\n\t * internal start method\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst buffer = _noiseBuffers[this._type];\n\t\tthis._source = new ToneBufferSource({\n\t\t\turl: buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this._fadeIn,\n\t\t\tfadeOut: this._fadeOut,\n\t\t\tloop: true,\n\t\t\tonended: () => this.onstop(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\t\tthis._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n\t}\n\n\t/**\n\t * internal stop method\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tif (this._source) {\n\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\tthis._source = null;\n\t\t}\n\t}\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(time) {\n\t\tthis._fadeIn = time;\n\t\tif (this._source) {\n\t\t\tthis._source.fadeIn = this._fadeIn;\n\t\t}\n\t}\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(time) {\n\t\tthis._fadeOut = time;\n\t\tif (this._source) {\n\t\t\tthis._source.fadeOut = this._fadeOut;\n\t\t}\n\t}\n\n\tprotected _restart(time?: Time): void {\n\t\t// TODO could be optimized by cancelling the buffer source 'stop'\n\t\tthis._stop(time);\n\t\tthis._start(time);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._source) {\n\t\t\tthis._source.disconnect();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n\n// Noise buffer stats\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\n\n/**\n * The cached noise buffers\n */\ninterface NoiseCache {\n\t[key: string]: ToneAudioBuffer | null;\n}\n\n/**\n * Cache the noise buffers\n */\nconst _noiseCache: NoiseCache = {\n\tbrown: null,\n\tpink: null,\n\twhite: null,\n};\n\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nconst _noiseBuffers = {\n\tget brown(): ToneAudioBuffer {\n\t\tif (!_noiseCache.brown) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tlet lastOut = 0.0;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tconst white = Math.random() * 2 - 1;\n\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.brown;\n\t},\n\n\tget pink(): ToneAudioBuffer {\n\t\tif (!_noiseCache.pink) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tlet b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tconst white = Math.random() * 2 - 1;\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.pink;\n\t},\n\n\tget white(): ToneAudioBuffer {\n\t\tif (!_noiseCache.white) {\n\t\t\tconst buffer: Float32Array[] = [];\n\t\t\tfor (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n\t\t\t\tconst channel = new Float32Array(BUFFER_LENGTH);\n\t\t\t\tbuffer[channelNum] = channel;\n\t\t\t\tfor (let i = 0; i < BUFFER_LENGTH; i++) {\n\t\t\t\t\tchannel[i] = Math.random() * 2 - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n\t\t}\n\t\treturn _noiseCache.white;\n\t},\n};\n","import { AudioRange, Cents, Degrees, Frequency, Positive } from \"../../core/type/Units\";\nimport { Omit } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { SourceOptions } from \"../Source\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n\n/**\n * The common interface of all Oscillators\n */\nexport interface ToneOscillatorInterface {\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @example\n\t * const osc = new Tone.Oscillator();\n\t * osc.type = \"sine2\";\n\t * console.log(osc.baseType); // \"sine\"\n\t */\n\tbaseType: OscillatorType | \"pulse\" | \"pwm\";\n\n\t/**\n\t * The oscillator's type. Also capable of setting the first x number of partials of the oscillator. \n\t * For example: \"sine4\" would set be the first 4 partials of the sine wave and \"triangle8\" would \n\t * set the first 8 partials of the triangle wave.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator().toDestination().start();\n\t * \tosc.type = \"sine2\";\n\t * }, 0.1, 1);\n\t */\n\ttype: ExtendedToneOscillatorType;\n\n\t/**\n\t * The frequency value of the oscillator\n\t * @example\n\t * const osc = new Tone.FMOscillator(\"Bb4\").toDestination().start();\n\t * osc.frequency.rampTo(\"D2\", 3);\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune value in cents (100th of a semitone).\n\t * @example\n\t * const osc = new Tone.PulseOscillator(\"F3\").toDestination().start();\n\t * // pitch it 1 octave = 12 semitones = 1200 cents\n\t * osc.detune.setValueAtTime(-1200, Tone.now());\n\t * osc.detune.setValueAtTime(1200, Tone.now() + 0.5);\n\t * osc.detune.linearRampToValueAtTime(0, Tone.now() + 1);\n\t * osc.stop(Tone.now() + 1.5);\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The phase is the starting position within the oscillator's cycle. For example\n\t * a phase of 180 would start halfway through the oscillator's cycle. \n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.Oscillator({\n\t * \t\tfrequency: 20,\n\t * \t\tphase: 90\n\t * \t}).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\tphase: Degrees;\n\n\t/**\n\t * The partials describes the relative amplitude of each of the harmonics of the oscillator. \n\t * The first value in the array is the first harmonic (i.e. the fundamental frequency), the \n\t * second harmonic is an octave up, the third harmonic is an octave and a fifth, etc. The resulting\n\t * oscillator output is composed of a sine tone at the relative amplitude at each of the harmonic intervals. \n\t * \n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @example\n\t * const osc = new Tone.Oscillator(\"F3\").toDestination().start();\n\t * setInterval(() => {\n\t * \t// generate 8 random partials\n\t * \tosc.partials = new Array(8).fill(0).map(() => Math.random());\n\t * }, 1000);\n\t */\n\tpartials: number[];\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials.\n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is\n\t * not settable, but equals the length of the partials array. A square wave wave\n\t * is composed of only odd harmonics up through the harmonic series. Partial count\n\t * can limit the number of harmonics which are used to generate the waveform.\n\t * @example\n\t * const osc = new Tone.Oscillator(\"C3\", \"square\").toDestination().start();\n\t * osc.partialCount = 1;\n\t * setInterval(() => {\n\t * \tosc.partialCount++;\n\t * \tconsole.log(osc.partialCount);\n\t * }, 500);\n\t */\n\tpartialCount?: number;\n\n\t/**\n\t * Returns an array of values which represents the waveform.\n\t * @param length The length of the waveform to return\n\t */\n\tasArray(length: number): Promise<Float32Array>;\n}\n\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport async function generateWaveform(instance: any, length: number): Promise<Float32Array> {\n\tconst duration = length / instance.context.sampleRate;\n\tconst context = new OfflineContext(1, duration, instance.context.sampleRate);\n\tconst clone = new instance.constructor(Object.assign(instance.get(), {\n\t\t// should do 2 iterations\n\t\tfrequency: 2 / duration,\n\t\t// zero out the detune\n\t\tdetune: 0,\n\t\tcontext\n\t})).toDestination();\n\tclone.start(0);\n\tconst buffer = await context.render();\n\treturn buffer.getChannelData(0);\n}\n\n/**\n * Oscillators with partials\n */\ntype SineWithPartials =\n\t\"sine1\" | \"sine2\" | \"sine3\" | \"sine4\" | \"sine5\" | \"sine6\" | \"sine7\" | \"sine8\" | \"sine9\" |\n\t\"sine10\" | \"sine11\" | \"sine12\" | \"sine13\" | \"sine14\" | \"sine15\" | \"sine16\" | \"sine17\" | \"sine18\" | \"sine19\" |\n\t\"sine20\" | \"sine21\" | \"sine22\" | \"sine23\" | \"sine24\" | \"sine25\" | \"sine26\" | \"sine27\" | \"sine28\" | \"sine29\" |\n\t\"sine30\" | \"sine31\" | \"sine32\";\n\ntype SquareWithPartials =\n\t\"square1\" | \"square2\" | \"square3\" | \"square4\" | \"square5\" | \"square6\" | \"square7\" | \"square8\" | \"square9\" |\n\t\"square10\" | \"square11\" | \"square12\" | \"square13\" | \"square14\" | \"square15\" | \"square16\" | \"square17\" | \"square18\" | \"square19\" |\n\t\"square20\" | \"square21\" | \"square22\" | \"square23\" | \"square24\" | \"square25\" | \"square26\" | \"square27\" | \"square28\" | \"square29\" |\n\t\"square30\" | \"square31\" | \"square32\";\n\ntype SawtoothWithPartials =\n\t\"sawtooth1\" | \"sawtooth2\" | \"sawtooth3\" | \"sawtooth4\" | \"sawtooth5\" | \"sawtooth6\" | \"sawtooth7\" | \"sawtooth8\" | \"sawtooth9\" |\n\t\"sawtooth10\" | \"sawtooth11\" | \"sawtooth12\" | \"sawtooth13\" | \"sawtooth14\" | \"sawtooth15\" | \"sawtooth16\" | \"sawtooth17\" | \"sawtooth18\" | \"sawtooth19\" |\n\t\"sawtooth20\" | \"sawtooth21\" | \"sawtooth22\" | \"sawtooth23\" | \"sawtooth24\" | \"sawtooth25\" | \"sawtooth26\" | \"sawtooth27\" | \"sawtooth28\" | \"sawtooth29\" |\n\t\"sawtooth30\" | \"sawtooth31\" | \"sawtooth32\";\n\ntype TriangleWithPartials =\n\t\"triangle1\" | \"triangle2\" | \"triangle3\" | \"triangle4\" | \"triangle5\" | \"triangle6\" | \"triangle7\" | \"triangle8\" | \"triangle9\" |\n\t\"triangle10\" | \"triangle11\" | \"triangle12\" | \"triangle13\" | \"triangle14\" | \"triangle15\" | \"triangle16\" | \"triangle17\" | \"triangle18\" | \"triangle19\" |\n\t\"triangle20\" | \"triangle21\" | \"triangle22\" | \"triangle23\" | \"triangle24\" | \"triangle25\" | \"triangle26\" | \"triangle27\" | \"triangle28\" | \"triangle29\" |\n\t\"triangle30\" | \"triangle31\" | \"triangle32\";\n\ntype TypeWithPartials = SineWithPartials | SquareWithPartials | TriangleWithPartials | SawtoothWithPartials;\n\ninterface BaseOscillatorOptions extends SourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\tphase: Degrees;\n}\n\nexport type NonCustomOscillatorType = Exclude<OscillatorType, \"custom\">;\n\ntype AllNonCustomOscillatorType = NonCustomOscillatorType | TypeWithPartials;\n\nexport type ToneOscillatorType = AllNonCustomOscillatorType | \"custom\";\n\nexport type ExtendedToneOscillatorType = ToneOscillatorType | \"pwm\" | \"pulse\";\n\n/**\n * Oscillator Interfaces\n */\ninterface ToneCustomOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface ToneTypeOscillatorOptions extends BaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface TonePartialOscillatorOptions extends BaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type ToneOscillatorConstructorOptions = ToneCustomOscillatorOptions | ToneTypeOscillatorOptions | TonePartialOscillatorOptions;\n\nexport interface ToneOscillatorOptions extends BaseOscillatorOptions {\n\ttype: ToneOscillatorType;\n\tpartialCount: number;\n\tpartials: number[];\n}\n\n/**\n * FMOscillator Interface\n */\ninterface FMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface FMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface FMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FMConstructorOptions = FMTypeOscillatorOptions | FMCustomOscillatorOptions | FMPartialsOscillatorOptions;\n\nexport interface FMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationIndex: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\n/**\n * AMOscillator Interface\n */\ninterface AMBaseOscillatorOptions extends BaseOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n\ninterface AMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface AMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialsCount?: number;\n}\n\ninterface AMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type AMConstructorOptions = AMCustomOscillatorOptions | AMTypeOscillatorOptions | AMPartialsOscillatorOptions;\n\nexport interface AMOscillatorOptions extends ToneOscillatorOptions {\n\tharmonicity: Positive;\n\tmodulationType: AllNonCustomOscillatorType;\n}\n/**\n * FatOscillator\n */\ninterface FatBaseOscillatorOptions extends BaseOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\ninterface FatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"custom\";\n\tpartials: number[];\n}\n\ninterface FatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: NonCustomOscillatorType;\n\tpartialCount?: number;\n}\n\ninterface FatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: TypeWithPartials;\n}\n\nexport type FatConstructorOptions = FatCustomOscillatorOptions | FatTypeOscillatorOptions | FatPartialsOscillatorOptions;\n\nexport interface FatOscillatorOptions extends ToneOscillatorOptions {\n\tspread: Cents;\n\tcount: Positive;\n}\n\n/**\n * Pulse Oscillator\n */\nexport interface PulseOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pulse\";\n\twidth: AudioRange;\n}\n\n/**\n * PWM Oscillator\n */\nexport interface PWMOscillatorOptions extends BaseOscillatorOptions {\n\ttype: \"pwm\";\n\tmodulationFrequency: Frequency;\n}\n\n/**\n * OMNI OSCILLATOR\n */\n\n/**\n * FM Oscillators with partials\n */\ntype FMSineWithPartials =\n\t\"fmsine1\" | \"fmsine2\" | \"fmsine3\" | \"fmsine4\" | \"fmsine5\" | \"fmsine6\" | \"fmsine7\" | \"fmsine8\" | \"fmsine9\" |\n\t\"fmsine10\" | \"fmsine11\" | \"fmsine12\" | \"fmsine13\" | \"fmsine14\" | \"fmsine15\" | \"fmsine16\" | \"fmsine17\" | \"fmsine18\" | \"fmsine19\" |\n\t\"fmsine20\" | \"fmsine21\" | \"fmsine22\" | \"fmsine23\" | \"fmsine24\" | \"fmsine25\" | \"fmsine26\" | \"fmsine27\" | \"fmsine28\" | \"fmsine29\" |\n\t\"fmsine30\" | \"fmsine31\" | \"fmsine32\";\n\ntype FMSquareWithPartials =\n\t\"fmsquare1\" | \"fmsquare2\" | \"fmsquare3\" | \"fmsquare4\" | \"fmsquare5\" | \"fmsquare6\" | \"fmsquare7\" | \"fmsquare8\" | \"fmsquare9\" |\n\t\"fmsquare10\" | \"fmsquare11\" | \"fmsquare12\" | \"fmsquare13\" | \"fmsquare14\" | \"fmsquare15\" | \"fmsquare16\" | \"fmsquare17\" | \"fmsquare18\" | \"fmsquare19\" |\n\t\"fmsquare20\" | \"fmsquare21\" | \"fmsquare22\" | \"fmsquare23\" | \"fmsquare24\" | \"fmsquare25\" | \"fmsquare26\" | \"fmsquare27\" | \"fmsquare28\" | \"fmsquare29\" |\n\t\"fmsquare30\" | \"fmsquare31\" | \"fmsquare32\";\n\ntype FMSawtoothWithPartials =\n\t\"fmsawtooth1\" | \"fmsawtooth2\" | \"fmsawtooth3\" | \"fmsawtooth4\" | \"fmsawtooth5\" | \"fmsawtooth6\" | \"fmsawtooth7\" | \"fmsawtooth8\" | \"fmsawtooth9\" |\n\t\"fmsawtooth10\" | \"fmsawtooth11\" | \"fmsawtooth12\" | \"fmsawtooth13\" | \"fmsawtooth14\" | \"fmsawtooth15\" | \"fmsawtooth16\" | \"fmsawtooth17\" | \"fmsawtooth18\" | \"fmsawtooth19\" |\n\t\"fmsawtooth20\" | \"fmsawtooth21\" | \"fmsawtooth22\" | \"fmsawtooth23\" | \"fmsawtooth24\" | \"fmsawtooth25\" | \"fmsawtooth26\" | \"fmsawtooth27\" | \"fmsawtooth28\" | \"fmsawtooth29\" |\n\t\"fmsawtooth30\" | \"fmsawtooth31\" | \"fmsawtooth32\";\n\ntype FMTriangleWithPartials =\n\t\"fmtriangle1\" | \"fmtriangle2\" | \"fmtriangle3\" | \"fmtriangle4\" | \"fmtriangle5\" | \"fmtriangle6\" | \"fmtriangle7\" | \"fmtriangle8\" | \"fmtriangle9\" |\n\t\"fmtriangle10\" | \"fmtriangle11\" | \"fmtriangle12\" | \"fmtriangle13\" | \"fmtriangle14\" | \"fmtriangle15\" | \"fmtriangle16\" | \"fmtriangle17\" | \"fmtriangle18\" | \"fmtriangle19\" |\n\t\"fmtriangle20\" | \"fmtriangle21\" | \"fmtriangle22\" | \"fmtriangle23\" | \"fmtriangle24\" | \"fmtriangle25\" | \"fmtriangle26\" | \"fmtriangle27\" | \"fmtriangle28\" | \"fmtriangle29\" |\n\t\"fmtriangle30\" | \"fmtriangle31\" | \"fmtriangle32\";\n\ntype FMTypeWithPartials = FMSineWithPartials | FMSquareWithPartials | FMSawtoothWithPartials | FMTriangleWithPartials;\n\n/**\n * AM Oscillators with partials\n */\ntype AMSineWithPartials =\n\t\"amsine1\" | \"amsine2\" | \"amsine3\" | \"amsine4\" | \"amsine5\" | \"amsine6\" | \"amsine7\" | \"amsine8\" | \"amsine9\" |\n\t\"amsine10\" | \"amsine11\" | \"amsine12\" | \"amsine13\" | \"amsine14\" | \"amsine15\" | \"amsine16\" | \"amsine17\" | \"amsine18\" | \"amsine19\" |\n\t\"amsine20\" | \"amsine21\" | \"amsine22\" | \"amsine23\" | \"amsine24\" | \"amsine25\" | \"amsine26\" | \"amsine27\" | \"amsine28\" | \"amsine29\" |\n\t\"amsine30\" | \"amsine31\" | \"amsine32\";\n\ntype AMSquareWithPartials =\n\t\"amsquare1\" | \"amsquare2\" | \"amsquare3\" | \"amsquare4\" | \"amsquare5\" | \"amsquare6\" | \"amsquare7\" | \"amsquare8\" | \"amsquare9\" |\n\t\"amsquare10\" | \"amsquare11\" | \"amsquare12\" | \"amsquare13\" | \"amsquare14\" | \"amsquare15\" | \"amsquare16\" | \"amsquare17\" | \"amsquare18\" | \"amsquare19\" |\n\t\"amsquare20\" | \"amsquare21\" | \"amsquare22\" | \"amsquare23\" | \"amsquare24\" | \"amsquare25\" | \"amsquare26\" | \"amsquare27\" | \"amsquare28\" | \"amsquare29\" |\n\t\"amsquare30\" | \"amsquare31\" | \"amsquare32\";\n\ntype AMSawtoothWithPartials =\n\t\"amsawtooth1\" | \"amsawtooth2\" | \"amsawtooth3\" | \"amsawtooth4\" | \"amsawtooth5\" | \"amsawtooth6\" | \"amsawtooth7\" | \"amsawtooth8\" | \"amsawtooth9\" |\n\t\"amsawtooth10\" | \"amsawtooth11\" | \"amsawtooth12\" | \"amsawtooth13\" | \"amsawtooth14\" | \"amsawtooth15\" | \"amsawtooth16\" | \"amsawtooth17\" | \"amsawtooth18\" | \"amsawtooth19\" |\n\t\"amsawtooth20\" | \"amsawtooth21\" | \"amsawtooth22\" | \"amsawtooth23\" | \"amsawtooth24\" | \"amsawtooth25\" | \"amsawtooth26\" | \"amsawtooth27\" | \"amsawtooth28\" | \"amsawtooth29\" |\n\t\"amsawtooth30\" | \"amsawtooth31\" | \"amsawtooth32\";\n\ntype AMTriangleWithPartials =\n\t\"amtriangle1\" | \"amtriangle2\" | \"amtriangle3\" | \"amtriangle4\" | \"amtriangle5\" | \"amtriangle6\" | \"amtriangle7\" | \"amtriangle8\" | \"amtriangle9\" |\n\t\"amtriangle10\" | \"amtriangle11\" | \"amtriangle12\" | \"amtriangle13\" | \"amtriangle14\" | \"amtriangle15\" | \"amtriangle16\" | \"amtriangle17\" | \"amtriangle18\" | \"amtriangle19\" |\n\t\"amtriangle20\" | \"amtriangle21\" | \"amtriangle22\" | \"amtriangle23\" | \"amtriangle24\" | \"amtriangle25\" | \"amtriangle26\" | \"amtriangle27\" | \"amtriangle28\" | \"amtriangle29\" |\n\t\"amtriangle30\" | \"amtriangle31\" | \"amtriangle32\";\n\ntype AMTypeWithPartials = AMSineWithPartials | AMSquareWithPartials | AMSawtoothWithPartials | AMTriangleWithPartials;\n\n/**\n * Fat Oscillators with partials\n */\ntype FatSineWithPartials =\n\t\"fatsine1\" | \"fatsine2\" | \"fatsine3\" | \"fatsine4\" | \"fatsine5\" | \"fatsine6\" | \"fatsine7\" | \"fatsine8\" | \"fatsine9\" |\n\t\"fatsine10\" | \"fatsine11\" | \"fatsine12\" | \"fatsine13\" | \"fatsine14\" | \"fatsine15\" | \"fatsine16\" | \"fatsine17\" | \"fatsine18\" | \"fatsine19\" |\n\t\"fatsine20\" | \"fatsine21\" | \"fatsine22\" | \"fatsine23\" | \"fatsine24\" | \"fatsine25\" | \"fatsine26\" | \"fatsine27\" | \"fatsine28\" | \"fatsine29\" |\n\t\"fatsine30\" | \"fatsine31\" | \"fatsine32\";\n\ntype FatSquareWithPartials =\n\t\"fatsquare1\" | \"fatsquare2\" | \"fatsquare3\" | \"fatsquare4\" | \"fatsquare5\" | \"fatsquare6\" | \"fatsquare7\" | \"fatsquare8\" | \"fatsquare9\" |\n\t\"fatsquare10\" | \"fatsquare11\" | \"fatsquare12\" | \"fatsquare13\" | \"fatsquare14\" | \"fatsquare15\" | \"fatsquare16\" | \"fatsquare17\" | \"fatsquare18\" | \"fatsquare19\" |\n\t\"fatsquare20\" | \"fatsquare21\" | \"fatsquare22\" | \"fatsquare23\" | \"fatsquare24\" | \"fatsquare25\" | \"fatsquare26\" | \"fatsquare27\" | \"fatsquare28\" | \"fatsquare29\" |\n\t\"fatsquare30\" | \"fatsquare31\" | \"fatsquare32\";\n\ntype FatSawtoothWithPartials =\n\t\"fatsawtooth1\" | \"fatsawtooth2\" | \"fatsawtooth3\" | \"fatsawtooth4\" | \"fatsawtooth5\" | \"fatsawtooth6\" | \"fatsawtooth7\" | \"fatsawtooth8\" | \"fatsawtooth9\" |\n\t\"fatsawtooth10\" | \"fatsawtooth11\" | \"fatsawtooth12\" | \"fatsawtooth13\" | \"fatsawtooth14\" | \"fatsawtooth15\" | \"fatsawtooth16\" | \"fatsawtooth17\" | \"fatsawtooth18\" | \"fatsawtooth19\" |\n\t\"fatsawtooth20\" | \"fatsawtooth21\" | \"fatsawtooth22\" | \"fatsawtooth23\" | \"fatsawtooth24\" | \"fatsawtooth25\" | \"fatsawtooth26\" | \"fatsawtooth27\" | \"fatsawtooth28\" | \"fatsawtooth29\" |\n\t\"fatsawtooth30\" | \"fatsawtooth31\" | \"fatsawtooth32\";\n\ntype FatTriangleWithPartials =\n\t\"fattriangle1\" | \"fattriangle2\" | \"fattriangle3\" | \"fattriangle4\" | \"fattriangle5\" | \"fattriangle6\" | \"fattriangle7\" | \"fattriangle8\" | \"fattriangle9\" |\n\t\"fattriangle10\" | \"fattriangle11\" | \"fattriangle12\" | \"fattriangle13\" | \"fattriangle14\" | \"fattriangle15\" | \"fattriangle16\" | \"fattriangle17\" | \"fattriangle18\" | \"fattriangle19\" |\n\t\"fattriangle20\" | \"fattriangle21\" | \"fattriangle22\" | \"fattriangle23\" | \"fattriangle24\" | \"fattriangle25\" | \"fattriangle26\" | \"fattriangle27\" | \"fattriangle28\" | \"fattriangle29\" |\n\t\"fattriangle30\" | \"fattriangle31\" | \"fattriangle32\";\n\ntype FatTypeWithPartials = FatSineWithPartials | FatSquareWithPartials | FatSawtoothWithPartials | FatTriangleWithPartials;\n\n/**\n * Omni FM\n */\ninterface OmniFMCustomOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFMTypeOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\n\ttype: FMTypeWithPartials;\n}\n\n/**\n * Omni AM\n */\ninterface OmniAMCustomOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amcustom\";\n\tpartials: number[];\n}\n\ninterface OmniAMTypeOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniAMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\n\ttype: AMTypeWithPartials;\n}\n\n/**\n * Omni Fat\n */\ninterface OmniFatCustomOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatcustom\";\n\tpartials: number[];\n}\n\ninterface OmniFatTypeOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\";\n\tpartialsCount?: number;\n}\n\ninterface OmniFatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\n\ttype: FatTypeWithPartials;\n}\n\nexport type OmniOscillatorType =\n\t\"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials |\n\t\"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials |\n\t\"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials |\n\tTypeWithPartials | OscillatorType | \"pulse\" | \"pwm\";\n\nexport type OmniOscillatorOptions =\n\tPulseOscillatorOptions | PWMOscillatorOptions |\n\tOmniFatCustomOscillatorOptions | OmniFatTypeOscillatorOptions | OmniFatPartialsOscillatorOptions |\n\tOmniFMCustomOscillatorOptions | OmniFMTypeOscillatorOptions | OmniFMPartialsOscillatorOptions |\n\tOmniAMCustomOscillatorOptions | OmniAMTypeOscillatorOptions | OmniAMPartialsOscillatorOptions |\n\tToneOscillatorConstructorOptions;\n\ntype OmitSourceOptions<T extends BaseOscillatorOptions> = Omit<T, \"frequency\" | \"detune\" | \"context\">;\n\n/**\n * The settable options for the omni oscillator inside of the source which excludes certain attributes that are defined by the parent class\n */\nexport type OmniOscillatorSynthOptions =\n\tOmitSourceOptions<PulseOscillatorOptions> | OmitSourceOptions<PWMOscillatorOptions> |\n\tOmitSourceOptions<OmniFatCustomOscillatorOptions> | OmitSourceOptions<OmniFatTypeOscillatorOptions> | OmitSourceOptions<OmniFatPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniFMCustomOscillatorOptions> | OmitSourceOptions<OmniFMTypeOscillatorOptions> | OmitSourceOptions<OmniFMPartialsOscillatorOptions> |\n\tOmitSourceOptions<OmniAMCustomOscillatorOptions> | OmitSourceOptions<OmniAMTypeOscillatorOptions> | OmitSourceOptions<OmniAMPartialsOscillatorOptions> |\n\tOmitSourceOptions<ToneCustomOscillatorOptions> | OmitSourceOptions<ToneTypeOscillatorOptions> | OmitSourceOptions<TonePartialOscillatorOptions>\n","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { Cents, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource, OneShotSourceOptions } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n\nexport interface ToneOscillatorNodeOptions extends OneShotSourceOptions {\n\tfrequency: Frequency;\n\tdetune: Cents;\n\ttype: OscillatorType;\n}\n\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource<ToneOscillatorNodeOptions> {\n\n\treadonly name: string = \"ToneOscillatorNode\";\n\n\t/**\n\t * The oscillator\n\t */\n\tprivate _oscillator = this.context.createOscillator();\n\tprotected _internalChannels = [this._oscillator];\n\n\t/**\n\t * The frequency of the oscillator\n\t */\n\treadonly frequency: Param<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator\n\t */\n\treadonly detune: Param<\"cents\">;\n\n\t/**\n\t * @param  frequency   The frequency value\n\t * @param  type  The basic oscillator type\n\t */\n\tconstructor(\n\t\tfrequency: Frequency,\n\t\ttype: OscillatorType,\n\t);\n\tconstructor(options?: Partial<ToneOscillatorNodeOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tconnect(this._oscillator, this._gainNode);\n\n\t\tthis.type = options.type;\n\n\t\tthis.frequency = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.frequency,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis.detune = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._oscillator.detune,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): ToneOscillatorNodeOptions {\n\t\treturn Object.assign(OneShotSource.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\ttype: \"sine\" as OscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * Start the oscillator node at the given time\n\t * @param  time When to start the oscillator\n\t */\n\tstart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"start\", computedTime);\n\t\tthis._startGain(computedTime);\n\t\tthis._oscillator.start(computedTime);\n\t\treturn this;\n\t}\n\n\tprotected _stopSource(time?: Seconds): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\t/**\n\t * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n\t * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n\t */\n\tsetPeriodicWave(periodicWave: PeriodicWave): this {\n\t\tthis._oscillator.setPeriodicWave(periodicWave);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n\t */\n\tget type(): OscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type: OscillatorType) {\n\t\tthis._oscillator.type = type;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this.state === \"started\") {\n\t\t\tthis.stop();\n\t\t}\n\t\tthis._oscillator.disconnect();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Degrees, Frequency, Radians, Time } from \"../../core/type/Units\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport {\n\tgenerateWaveform, ToneOscillatorConstructorOptions, ToneOscillatorInterface,\n\tToneOscillatorOptions, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\nexport { ToneOscillatorOptions, ToneOscillatorType } from \"./OscillatorInterface\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source<ToneOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"Oscillator\";\n\n\t/**\n\t * the main oscillator\n\t */\n\tprivate _oscillator: ToneOscillatorNode | null = null;\n\n\t/**\n\t * The frequency control.\n\t */\n\tfrequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune control signal.\n\t */\n\tdetune: Signal<\"cents\">;\n\n\t/**\n\t * the periodic wave\n\t */\n\tprivate _wave?: PeriodicWave;\n\n\t/**\n\t * The partials of the oscillator\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to limit or extend the periodic wave by\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * the phase of the oscillator between 0 - 360\n\t */\n\tprivate _phase!: Radians;\n\n\t/**\n\t * the type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * @param frequency Starting frequency\n\t * @param type The oscillator type. Read more about type below.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType);\n\tconstructor(options?: Partial<ToneOscillatorConstructorOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal<\"frequency\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\treadOnly(this, \"frequency\");\n\n\t\tthis.detune = new Signal<\"cents\">({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, \"detune\");\n\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\t\tthis._type = options.type;\n\n\t\tif (options.partialCount && options.type !== \"custom\") {\n\t\t\tthis._type = this.baseType + options.partialCount.toString() as ToneOscillatorType;\n\t\t}\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): ToneOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tpartialCount: 0,\n\t\t\tpartials: [],\n\t\t\tphase: 0,\n\t\t\ttype: \"sine\" as const,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\t// new oscillator with previous values\n\t\tconst oscillator = new ToneOscillatorNode({\n\t\t\tcontext: this.context,\n\t\t\tonended: () => this.onstop(this),\n\t\t});\n\t\tthis._oscillator = oscillator;\n\t\tif (this._wave) {\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t} else {\n\t\t\tthis._oscillator.type = this._type as OscillatorType;\n\t\t}\n\t\t// connect the control signal to the oscillator frequency & detune\n\t\tthis._oscillator.connect(this.output);\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\n\t\t// start the oscillator\n\t\tthis._oscillator.start(computedTime);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.stop(computedTime);\n\t\t}\n\t}\n\n\t/**\n\t * Restart the oscillator. Does not stop the oscillator, but instead\n\t * just cancels any scheduled 'stop' from being invoked.\n\t */\n\tprotected _restart(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.log(\"restart\", computedTime);\n\t\tif (this._oscillator) {\n\t\t\tthis._oscillator.cancelStop();\n\t\t}\n\t\tthis._state.cancel(computedTime);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t * will also affect the oscillators frequency.\n\t * @example\n\t * const osc = new Tone.Oscillator().toDestination().start();\n\t * osc.frequency.value = 440;\n\t * // the ratio between the bpm and the frequency will be maintained\n\t * osc.syncFrequency();\n\t * // double the tempo\n\t * Tone.Transport.bpm.value *= 2;\n\t * // the frequency of the oscillator is doubled to 880\n\t */\n\tsyncFrequency(): this {\n\t\tthis.context.transport.syncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the oscillator's frequency from the Transport.\n\t * See Oscillator.syncFrequency\n\t */\n\tunsyncFrequency(): this {\n\t\tthis.context.transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cache the periodic waves to avoid having to redo computations\n\t */\n\tprivate static _periodicWaveCache: Array<{\n\t\tpartials: number[];\n\t\tphase: number;\n\t\ttype: string;\n\t\tpartialCount: number;\n\t\treal: Float32Array;\n\t\timag: Float32Array;\n\t\twave: PeriodicWave;\n\t}> = [];\n\n\t/**\n\t * Get a cached periodic wave. Avoids having to recompute\n\t * the oscillator values when they have already been computed\n\t * with the same values.\n\t */\n\tprivate _getCachedPeriodicWave(): { real: Float32Array; imag: Float32Array; partials: number[]; wave: PeriodicWave } | undefined {\n\t\tif (this._type === \"custom\") {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.phase === this._phase &&\n\t\t\t\t\tdeepEquals(description.partials, this._partials);\n\t\t\t});\n\t\t\treturn oscProps;\n\t\t} else {\n\t\t\tconst oscProps = Oscillator._periodicWaveCache.find(description => {\n\t\t\t\treturn description.type === this._type &&\n\t\t\t\t\tdescription.phase === this._phase;\n\t\t\t});\n\t\t\tthis._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n\t\t\treturn oscProps;\n\t\t}\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type) {\n\t\tthis._type = type;\n\t\tconst isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n\t\tif (this._phase === 0 && isBasicType) {\n\t\t\tthis._wave = undefined;\n\t\t\tthis._partialCount = 0;\n\t\t\t// just go with the basic approach\n\t\t\tif (this._oscillator !== null) {\n\t\t\t\t// already tested that it's a basic type\n\t\t\t\tthis._oscillator.type = type as OscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// first check if the value is cached\n\t\t\tconst cache = this._getCachedPeriodicWave();\n\t\t\tif (isDefined(cache)) {\n\t\t\t\tconst { partials, wave } = cache;\n\t\t\t\tthis._wave = wave;\n\t\t\t\tthis._partials = partials;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [real, imag] = this._getRealImaginary(type, this._phase);\n\t\t\t\tconst periodicWave = this.context.createPeriodicWave(real, imag);\n\t\t\t\tthis._wave = periodicWave;\n\t\t\t\tif (this._oscillator !== null) {\n\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t}\n\t\t\t\t// set the cache\n\t\t\t\tOscillator._periodicWaveCache.push({\n\t\t\t\t\timag,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tpartials: this._partials,\n\t\t\t\t\tphase: this._phase,\n\t\t\t\t\treal,\n\t\t\t\t\ttype: this._type,\n\t\t\t\t\twave: this._wave,\n\t\t\t\t});\n\t\t\t\tif (Oscillator._periodicWaveCache.length > 100) {\n\t\t\t\t\tOscillator._periodicWaveCache.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn (this._type as string).replace(this.partialCount.toString(), \"\") as OscillatorType;\n\t}\n\tset baseType(baseType) {\n\t\tif (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n\t\t\tthis.type = baseType + this.partialCount as ToneOscillatorType;\n\t\t} else {\n\t\t\tthis.type = baseType;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._partialCount;\n\t}\n\tset partialCount(p) {\n\t\tassertRange(p, 0);\n\t\tlet type = this._type;\n\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\tif (partial) {\n\t\t\ttype = partial[1] as OscillatorType;\n\t\t}\n\t\tif (this._type !== \"custom\") {\n\t\t\tif (p === 0) {\n\t\t\t\tthis.type = type;\n\t\t\t} else {\n\t\t\t\tthis.type = type + p.toString() as ToneOscillatorType;\n\t\t\t}\n\t\t} else {\n\t\t\t// extend or shorten the partials array\n\t\t\tconst fullPartials = new Float32Array(p);\n\t\t\t// copy over the partials array\n\t\t\tthis._partials.forEach((v, i) => fullPartials[i] = v);\n\t\t\tthis._partials = Array.from(fullPartials);\n\t\t\tthis.type = this._type;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the real and imaginary components based\n\t * on the oscillator type.\n\t * @returns [real: Float32Array, imaginary: Float32Array]\n\t */\n\tprivate _getRealImaginary(type: ToneOscillatorType, phase: Radians): Float32Array[] {\n\t\tconst fftSize = 4096;\n\t\tlet periodicWaveSize = fftSize / 2;\n\n\t\tconst real = new Float32Array(periodicWaveSize);\n\t\tconst imag = new Float32Array(periodicWaveSize);\n\n\t\tlet partialCount = 1;\n\t\tif (type === \"custom\") {\n\t\t\tpartialCount = this._partials.length + 1;\n\t\t\tthis._partialCount = this._partials.length;\n\t\t\tperiodicWaveSize = partialCount;\n\t\t\t// if the partial count is 0, don't bother doing any computation\n\t\t\tif (this._partials.length === 0) {\n\t\t\t\treturn [real, imag];\n\t\t\t}\n\t\t} else {\n\t\t\tconst partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t\tif (partial) {\n\t\t\t\tpartialCount = parseInt(partial[2], 10) + 1;\n\t\t\t\tthis._partialCount = parseInt(partial[2], 10);\n\t\t\t\ttype = partial[1] as ToneOscillatorType;\n\t\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\t\tperiodicWaveSize = partialCount;\n\t\t\t} else {\n\t\t\t\tthis._partialCount = 0;\n\t\t\t}\n\t\t\tthis._partials = [];\n\t\t}\n\n\t\tfor (let n = 1; n < periodicWaveSize; ++n) {\n\t\t\tconst piFactor = 2 / (n * Math.PI);\n\t\t\tlet b;\n\t\t\tswitch (type) {\n\t\t\t\tcase \"sine\":\n\t\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"square\":\n\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sawtooth\":\n\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"triangle\":\n\t\t\t\t\tif (n & 1) {\n\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis._partials[n - 1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"custom\":\n\t\t\t\t\tb = this._partials[n - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(\"Oscillator: invalid type: \" + type);\n\t\t\t}\n\t\t\tif (b !== 0) {\n\t\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t\t} else {\n\t\t\t\treal[n] = 0;\n\t\t\t\timag[n] = 0;\n\t\t\t}\n\t\t}\n\t\treturn [real, imag];\n\t}\n\n\t/**\n\t * Compute the inverse FFT for a given phase.\n\t */\n\tprivate _inverseFFT(real: Float32Array, imag: Float32Array, phase: Radians): number {\n\t\tlet sum = 0;\n\t\tconst len = real.length;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t}\n\t\treturn sum;\n\t}\n\n\t/**\n\t * Returns the initial value of the oscillator when stopped.\n\t * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n\t */\n\tgetInitialValue(): AudioRange {\n\t\tconst [real, imag] = this._getRealImaginary(this._type, 0);\n\t\tlet maxValue = 0;\n\t\tconst twoPi = Math.PI * 2;\n\t\tconst testPositions = 32;\n\t\t// check for peaks in 16 places\n\t\tfor (let i = 0; i < testPositions; i++) {\n\t\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n\t\t}\n\t\treturn clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._partials.slice(0, this.partialCount);\n\t}\n\tset partials(partials) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis.type = \"custom\";\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase * (180 / Math.PI);\n\t}\n\tset phase(phase) {\n\t\tthis._phase = phase * Math.PI / 180;\n\t\t// reset the type\n\t\tthis.type = this._type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tif (this._oscillator !== null) {\n\t\t\tthis._oscillator.dispose();\n\t\t}\n\t\tthis._wave = undefined;\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { InputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n\nexport type SignalOperatorOptions = ToneAudioNodeOptions;\n\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport abstract class SignalOperator<Options extends SignalOperatorOptions> extends ToneAudioNode<Options> {\n\n\tconstructor(options?: Partial<Options>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n\t}\n\n\tconnect(destination: InputNode, outputNum = 0, inputNum = 0): this {\n\t\tconnectSignal(this, destination, outputNum, inputNum);\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport type WaveShaperMappingFn = (value: number, index?: number) => number;\n\ntype WaveShaperMapping = WaveShaperMappingFn | number[] | Float32Array;\n\ninterface WaveShaperOptions extends ToneAudioNodeOptions {\n\tmapping?: WaveShaperMapping;\n\tlength: number;\n\tcurve?: number[] | Float32Array;\n}\n\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator<WaveShaperOptions> {\n\n\treadonly name: string = \"WaveShaper\";\n\n\t/**\n\t * the waveshaper node\n\t */\n\tprivate _shaper: WaveShaperNode = this.context.createWaveShaper();\n\n\t/**\n\t * The input to the waveshaper node.\n\t */\n\tinput = this._shaper;\n\n\t/**\n\t * The output from the waveshaper node\n\t */\n\toutput = this._shaper;\n\n\t/**\n\t * @param mapping The function used to define the values.\n\t *                The mapping function should take two arguments:\n\t *                the first is the value at the current position\n\t *                and the second is the array position.\n\t *                If the argument is an array, that array will be\n\t *                set as the wave shaping function. The input\n\t *                signal is an AudioRange [-1, 1] value and the output\n\t *                signal can take on any numerical values.\n\t *\n\t * @param bufferLen The length of the WaveShaperNode buffer.\n\t */\n\tconstructor(mapping?: WaveShaperMapping, length?: number);\n\tconstructor(options?: Partial<WaveShaperOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n\t\tconst options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n\n\t\tif (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n\t\t\tthis.curve = Float32Array.from(options.mapping);\n\t\t} else if (isFunction(options.mapping)) {\n\t\t\tthis.setMap(options.mapping, options.length);\n\t\t}\n\t}\n\n\tstatic getDefaults(): WaveShaperOptions {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tlength: 1024,\n\t\t});\n\t}\n\n\t/**\n\t * Uses a mapping function to set the value of the curve.\n\t * @param mapping The function used to define the values.\n\t *                The mapping function take two arguments:\n\t *                the first is the value at the current position\n\t *                which goes from -1 to 1 over the number of elements\n\t *                in the curve array. The second argument is the array position.\n\t * @example\n\t * const shaper = new Tone.WaveShaper();\n\t * // map the input signal from [-1, 1] to [0, 10]\n\t * shaper.setMap((val, index) => (val + 1) * 5);\n\t */\n\tsetMap(mapping: WaveShaperMappingFn, length = 1024): this {\n\t\tconst array = new Float32Array(length);\n\t\tfor (let i = 0, len = length; i < len; i++) {\n\t\t\tconst normalized = (i / (len - 1)) * 2 - 1;\n\t\t\tarray[i] = mapping(normalized, i);\n\t\t}\n\t\tthis.curve = array;\n\t\treturn this;\n\t}\n\n\t/**\n\t * The array to set as the waveshaper curve. For linear curves\n\t * array length does not make much difference, but for complex curves\n\t * longer arrays will provide smoother interpolation.\n\t */\n\tget curve(): Float32Array | null {\n\t\treturn this._shaper.curve;\n\t}\n\n\tset curve(mapping: Float32Array | null) {\n\t\tthis._shaper.curve = mapping;\n\t}\n\n\t/**\n\t * Specifies what type of oversampling (if any) should be used when\n\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\n\tset oversample(oversampling: OverSampleType) {\n\t\tconst isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n\t\tassert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"AudioToGain\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => (x + 1) / 2,\n\t});\n\n\t/**\n\t * The AudioRange input [-1, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The GainRange output [0, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\nimport { InputNode, OutputNode } from \"../core/context/ToneAudioNode\";\n\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply<TypeName extends \"number\" | \"positive\" = \"number\"> extends Signal<TypeName> {\n\n\treadonly name: string = \"Multiply\";\n\n\t/**\n\t * Indicates if the value should be overridden on connection\n\t */\n\treadonly override = false;\n\n\t/**\n\t * the input gain node\n\t */\n\tprivate _mult: Gain;\n\n\t/**\n\t * The multiplicand input.\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The product of the input and [[factor]]\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The multiplication factor. Can be set directly or a signal can be connected to it.\n\t */\n\tfactor: Param<TypeName>;\n\n\t/**\n\t * @param value Constant value to multiple\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<TypeName>>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n\t\tconst options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n\n\t\tthis._mult = this.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tminValue: options.minValue,\n\t\t\tmaxValue: options.maxValue,\n\t\t});\n\n\t\tthis.factor = this._param = this._mult.gain as unknown as Param<TypeName>;\n\t\tthis.factor.setValueAtTime(options.value, 0);\n\t}\n\n\tstatic getDefaults(): SignalOptions<any> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tAMConstructorOptions, AMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType,\n\tToneOscillatorInterface,\n\tToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { AMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source<AMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"AMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * convert the -1,1 output to 0,1\n\t */\n\tprivate _modulationScale = new AudioToGain({ context: this.context });\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const amOsc = new Tone.AMOscillator(\"D2\").toDestination().start();\n\t * Tone.Transport.scheduleRepeat(time => {\n\t * \tamOsc.harmonicity.setValueAtTime(1, time);\n\t * \tamOsc.harmonicity.setValueAtTime(0.5, time + 0.5);\n\t * \tamOsc.harmonicity.setValueAtTime(1.5, time + 1);\n\t * \tamOsc.harmonicity.setValueAtTime(1, time + 2);\n\t * \tamOsc.harmonicity.linearRampToValueAtTime(2, time + 4);\n\t * }, 4);\n\t * Tone.Transport.start();\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode = new Gain({\n\t\tcontext: this.context,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<AMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\t\tthis.frequency = this._carrier.frequency,\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\n\t\treadOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): AMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Seconds): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Seconds): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t}\n\n\t/**\n\t * The type of the carrier oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationScale.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFMConstructorOptions, FMOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\n\nexport { FMOscillatorOptions } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source<FMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FMOscillator\";\n\n\t/**\n\t * The carrier oscillator\n\t */\n\tprivate _carrier: Oscillator;\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The modulating oscillator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * A harmonicity of 1 gives both oscillators the same frequency.\n\t * Harmonicity = 2 means a change of an octave.\n\t * @example\n\t * const fmOsc = new Tone.FMOscillator(\"D2\").toDestination().start();\n\t * // pitch the modulator an octave below carrier\n\t * fmOsc.harmonicity.value = 0.5;\n\t */\n\treadonly harmonicity: Signal<\"positive\">;\n\n\t/**\n\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t */\n\treadonly modulationIndex: Signal<\"positive\">;\n\n\t/**\n\t * the node where the modulation happens\n\t */\n\tprivate _modulationNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * @param frequency The starting frequency of the oscillator.\n\t * @param type The type of the carrier oscillator.\n\t * @param modulationType The type of the modulator oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, modulationType?: ToneOscillatorType);\n\tconstructor(options?: Partial<FMConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n\t\tconst options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n\n\t\tthis._carrier = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: 0,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: options.type,\n\t\t} as OscillatorOptions);\n\n\t\tthis.detune = this._carrier.detune;\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tphase: options.phase,\n\t\t\ttype: options.modulationType,\n\t\t} as OscillatorOptions);\n\n\t\tthis.harmonicity = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.harmonicity,\n\t\t});\n\n\t\tthis.modulationIndex = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"positive\",\n\t\t\tvalue: options.modulationIndex,\n\t\t});\n\n\t\t// connections\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t\tthis.detune.connect(this._modulator.detune);\n\n\t\treadOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t}\n\n\tstatic getDefaults(): FMOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tharmonicity: 1,\n\t\t\tmodulationIndex: 2,\n\t\t\tmodulationType: \"square\" as NonCustomOscillatorType,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t\treturn this;\n\t}\n\n\tget type(): ToneOscillatorType {\n\t\treturn this._carrier.type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._carrier.type = type;\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._carrier.baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._carrier.baseType = baseType;\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._carrier.partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._carrier.partialCount = partialCount;\n\t}\n\n\t/**\n\t * The type of the modulator oscillator\n\t */\n\tget modulationType(): ToneOscillatorType {\n\t\treturn this._modulator.type;\n\t}\n\tset modulationType(type: ToneOscillatorType) {\n\t\tthis._modulator.type = type;\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._carrier.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._carrier.phase = phase;\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._carrier.partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._carrier.partials = partials;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.harmonicity.dispose();\n\t\tthis._carrier.dispose();\n\t\tthis._modulator.dispose();\n\t\tthis._modulationNode.dispose();\n\t\tthis.modulationIndex.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { AudioRange, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PulseOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\n\nexport { PulseOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source<PulseOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PulseOscillator\";\n\n\t/**\n\t * The width of the pulse.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst pulse = new Tone.PulseOscillator(20, 0.8).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly width: Signal<\"audioRange\">;\n\n\t/**\n\t * gate the width amount\n\t */\n\tprivate _widthGate: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * the sawtooth oscillator\n\t */\n\tprivate _triangle: Oscillator;\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune in cents.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * Threshold the signal to turn it into a square\n\t */\n\tprivate _thresh = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: val => val <= 0 ? -1 : 1,\n\t});\n\n\t/**\n\t * @param frequency The frequency of the oscillator\n\t * @param width The width of the pulse\n\t */\n\tconstructor(frequency?: Frequency, width?: AudioRange);\n\tconstructor(options?: Partial<PulseOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n\t\tconst options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: options.width,\n\t\t});\n\n\t\tthis._triangle = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t\ttype: \"triangle\",\n\t\t});\n\t\tthis.frequency = this._triangle.frequency;\n\t\tthis.detune = this._triangle.detune;\n\n\t\t// connections\n\t\tthis._triangle.chain(this._thresh, this.output);\n\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\treadOnly(this, [\"width\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PulseOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tphase: 0,\n\t\t\ttype: \"pulse\" as \"pulse\",\n\t\t\twidth: 0.2,\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.start(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._triangle.stop(time);\n\t\t// the width is still connected to the output.\n\t\t// that needs to be stopped also\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._triangle.restart(time);\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._triangle.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._triangle.phase = phase;\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pulse\".\n\t */\n\tget type(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pulse\".\n\t */\n\tget baseType(): \"pulse\" {\n\t\treturn \"pulse\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * *Internal use* The carrier oscillator type is fed through the \n\t * waveshaper node to create the pulse. Using different carrier oscillators\n\t * changes oscillator's behavior. \n\t */\n\tset carrierType(type: \"triangle\" | \"sine\") {\n\t\tthis._triangle.type = type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up method.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._triangle.dispose();\n\t\tthis.width.dispose();\n\t\tthis._widthGate.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tFatConstructorOptions, FatOscillatorOptions,\n\tgenerateWaveform, NonCustomOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n\nexport { FatOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source<FatOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"FatOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The array of oscillators\n\t */\n\tprivate _oscillators: Oscillator[] = [];\n\n\t/**\n\t * The total spread of the oscillators\n\t */\n\tprivate _spread: Cents;\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tprivate _type: ToneOscillatorType;\n\n\t/**\n\t * The phase of the oscillators\n\t */\n\tprivate _phase: Degrees;\n\n\t/**\n\t * The partials array\n\t */\n\tprivate _partials: number[];\n\n\t/**\n\t * The number of partials to use\n\t */\n\tprivate _partialCount: number;\n\n\t/**\n\t * @param frequency The oscillator's frequency.\n\t * @param type The type of the oscillator.\n\t * @param spread The detune spread between the oscillators.\n\t */\n\tconstructor(frequency?: Frequency, type?: ToneOscillatorType, spread?: Cents);\n\tconstructor(options?: Partial<FatConstructorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n\t\tconst options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\n\t\tthis._spread = options.spread;\n\t\tthis._type = options.type;\n\t\tthis._phase = options.phase;\n\t\tthis._partials = options.partials;\n\t\tthis._partialCount = options.partialCount;\n\n\t\t// set the count initially\n\t\tthis.count = options.count;\n\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): FatOscillatorOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tcount: 3,\n\t\t\tspread: 20,\n\t\t\ttype: \"sawtooth\",\n\t\t});\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.start(time));\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(osc => osc.stop(time));\n\t}\n\n\tprotected _restart(time: Seconds): void {\n\t\tthis._forEach(osc => osc.restart(time));\n\t}\n\n\t/**\n\t * Iterate over all of the oscillators\n\t */\n\tprivate _forEach(iterator: (osc: Oscillator, index: number) => void): void {\n\t\tfor (let i = 0; i < this._oscillators.length; i++) {\n\t\t\titerator(this._oscillators[i], i);\n\t\t}\n\t}\n\n\t/**\n\t * The type of the oscillator\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._type;\n\t}\n\tset type(type: ToneOscillatorType) {\n\t\tthis._type = type;\n\t\tthis._forEach(osc => osc.type = type);\n\t}\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator().toDestination().start();\n\t * fatOsc.spread = 70;\n\t */\n\tget spread(): Cents {\n\t\treturn this._spread;\n\t}\n\tset spread(spread: Cents) {\n\t\tthis._spread = spread;\n\t\tif (this._oscillators.length > 1) {\n\t\t\tconst start = -spread / 2;\n\t\t\tconst step = spread / (this._oscillators.length - 1);\n\t\t\tthis._forEach((osc, i) => osc.detune.value = start + step * i);\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators. Must be an integer greater than 1.\n\t * @example\n\t * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n\t * // use 4 sawtooth oscillators\n\t * fatOsc.count = 4;\n\t */\n\tget count(): number {\n\t\treturn this._oscillators.length;\n\t}\n\tset count(count: number) {\n\t\tassertRange(count, 1);\n\t\tif (this._oscillators.length !== count) {\n\t\t\t// dispose the previous oscillators\n\t\t\tthis._forEach(osc => osc.dispose());\n\t\t\tthis._oscillators = [];\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst osc = new Oscillator({\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t\tvolume: -6 - count * 1.1,\n\t\t\t\t\ttype: this._type as NonCustomOscillatorType,\n\t\t\t\t\tphase: this._phase + (i / count) * 360,\n\t\t\t\t\tpartialCount: this._partialCount,\n\t\t\t\t\tonstop: i === 0 ? () => this.onstop(this) : noOp,\n\t\t\t\t});\n\t\t\t\tif (this.type === \"custom\") {\n\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t}\n\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\tosc.detune.overridden = false;\n\t\t\t\tosc.connect(this.output);\n\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t}\n\t\t\t// set the spread\n\t\t\tthis.spread = this._spread;\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._forEach(osc => osc.start());\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._phase = phase;\n\t\tthis._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n\t}\n\n\tget baseType(): OscillatorType {\n\t\treturn this._oscillators[0].baseType;\n\t}\n\tset baseType(baseType: OscillatorType) {\n\t\tthis._forEach(osc => osc.baseType = baseType);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tget partials(): number[] {\n\t\treturn this._oscillators[0].partials;\n\t}\n\tset partials(partials: number[]) {\n\t\tthis._partials = partials;\n\t\tthis._partialCount = this._partials.length;\n\t\tif (partials.length) {\n\t\t\tthis._type = \"custom\";\n\t\t\tthis._forEach(osc => osc.partials = partials);\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillators[0].partialCount;\n\t}\n\tset partialCount(partialCount: number) {\n\t\tthis._partialCount = partialCount;\n\t\tthis._forEach(osc => osc.partialCount = partialCount);\n\t\tthis._type = this._oscillators[0].type;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.detune.dispose();\n\t\tthis._forEach(osc => osc.dispose());\n\t\treturn this;\n\t}\n}\n","import { Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform, PWMOscillatorOptions, ToneOscillatorInterface } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n\nexport { PWMOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source<PWMOscillatorOptions> implements ToneOscillatorInterface {\n\n\treadonly name: string = \"PWMOscillator\";\n\n\treadonly sourceType = \"pwm\";\n\n\t/**\n\t * the pulse oscillator\n\t */\n\tprivate _pulse: PulseOscillator;\n\t/**\n\t * the modulator\n\t */\n\tprivate _modulator: Oscillator;\n\n\t/**\n\t * Scale the oscillator so it doesn't go silent\n\t * at the extreme values.\n\t */\n\tprivate _scale: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: 2,\n\t});\n\n\t/**\n\t * The frequency control.\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune of the oscillator.\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The width modulation rate of the oscillator.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst osc = new Tone.PWMOscillator(20, 2).toDestination().start();\n\t * }, 0.1, 1);\n\t */\n\treadonly modulationFrequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param {Frequency} frequency The starting frequency of the oscillator.\n\t * @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n\t */\n\tconstructor(frequency?: Frequency, modulationFrequency?: Frequency);\n\tconstructor(options?: Partial<PWMOscillatorOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n\t\tconst options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n\n\t\tthis._pulse = new PulseOscillator({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.modulationFrequency,\n\t\t});\n\t\t// change the pulse oscillator type\n\t\tthis._pulse.carrierType = \"sine\";\n\n\t\tthis.modulationFrequency = this._pulse.frequency;\n\n\t\tthis._modulator = new Oscillator({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tfrequency: options.frequency,\n\t\t\tonstop: () => this.onstop(this),\n\t\t\tphase: options.phase,\n\t\t});\n\n\t\tthis.frequency = this._modulator.frequency;\n\t\tthis.detune = this._modulator.detune;\n\n\t\t// connections\n\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\tthis._pulse.connect(this.output);\n\t\treadOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t}\n\n\tstatic getDefaults(): PWMOscillatorOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tfrequency: 440,\n\t\t\tmodulationFrequency: 0.4,\n\t\t\tphase: 0,\n\t\t\ttype: \"pwm\" as \"pwm\",\n\t\t});\n\t}\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.start(time);\n\t\tthis._pulse.start(time);\n\t}\n\n\t/**\n\t * stop the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.stop(time);\n\t\tthis._pulse.stop(time);\n\t}\n\n\t/**\n\t * restart the oscillator\n\t */\n\tprotected _restart(time: Seconds): void {\n\t\tthis._modulator.restart(time);\n\t\tthis._pulse.restart(time);\n\t}\n\n\t/**\n\t * The type of the oscillator. Always returns \"pwm\".\n\t */\n\tget type(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pwm\".\n\t */\n\tget baseType(): \"pwm\" {\n\t\treturn \"pwm\";\n\t}\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t */\n\tget partials(): number[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * No partials for this waveform type.\n\t */\n\tget partialCount(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._modulator.phase;\n\t}\n\tset phase(phase: Degrees) {\n\t\tthis._modulator.phase = phase;\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._pulse.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._modulator.dispose();\n\t\treturn this;\n\t}\n}\n","import { Cents, Degrees, Frequency, Seconds, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport {\n\tgenerateWaveform,\n\tOmniOscillatorOptions, \n\tOmniOscillatorType, ToneOscillatorInterface, ToneOscillatorType\n} from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\n\nexport { OmniOscillatorOptions } from \"./OscillatorInterface\";\n\n/**\n * All of the oscillator types that OmniOscillator can take on\n */\ntype AnyOscillator = Oscillator | PWMOscillator | PulseOscillator | FatOscillator | AMOscillator | FMOscillator;\n\n/**\n * All of the Oscillator constructor types mapped to their name.\n */\ninterface OmniOscillatorSource {\n\t\"fm\": FMOscillator;\n\t\"am\": AMOscillator;\n\t\"pwm\": PWMOscillator;\n\t\"pulse\": PulseOscillator;\n\t\"oscillator\": Oscillator;\n\t\"fat\": FatOscillator;\n}\n\n/**\n * The available oscillator types.\n */\nexport type OmniOscSourceType = keyof OmniOscillatorSource;\n\n// Conditional Types\ntype IsAmOrFmOscillator<Osc, Ret> = Osc extends AMOscillator ? Ret : Osc extends FMOscillator ? Ret : undefined;\ntype IsFatOscillator<Osc, Ret> = Osc extends FatOscillator ? Ret : undefined;\ntype IsPWMOscillator<Osc, Ret> = Osc extends PWMOscillator ? Ret : undefined;\ntype IsPulseOscillator<Osc, Ret> = Osc extends PulseOscillator ? Ret : undefined;\ntype IsFMOscillator<Osc, Ret> = Osc extends FMOscillator ? Ret : undefined;\n\ntype AnyOscillatorConstructor = new (...args: any[]) => AnyOscillator;\n\nconst OmniOscillatorSourceMap: {\n\t[key in OmniOscSourceType]: AnyOscillatorConstructor\n} = {\n\tam: AMOscillator,\n\tfat: FatOscillator,\n\tfm: FMOscillator,\n\toscillator: Oscillator,\n\tpulse: PulseOscillator,\n\tpwm: PWMOscillator,\n};\n\n/**\n * OmniOscillator aggregates all of the oscillator types into one. \n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator<OscType extends AnyOscillator>\n\textends Source<OmniOscillatorOptions>\n\timplements Omit<ToneOscillatorInterface, \"type\"> {\n\n\treadonly name: string = \"OmniOscillator\";\n\n\treadonly frequency: Signal<\"frequency\">;\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The oscillator that can switch types\n\t */\n\tprivate _oscillator!: AnyOscillator;\n\n\t/**\n\t * the type of the oscillator source\n\t */\n\tprivate _sourceType!: OmniOscSourceType;\n\n\t/**\n\t * @param frequency The initial frequency of the oscillator.\n\t * @param type The type of the oscillator.\n\t */\n\tconstructor(frequency?: Frequency, type?: OmniOscillatorType);\n\tconstructor(options?: Partial<OmniOscillatorOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n\t\tconst options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n\n\t\tthis.frequency = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"frequency\",\n\t\t\tvalue: options.frequency,\n\t\t});\n\t\tthis.detune = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"cents\",\n\t\t\tvalue: options.detune,\n\t\t});\n\t\treadOnly(this, [\"frequency\", \"detune\"]);\n\n\t\t// set the options\n\t\tthis.set(options);\n\t}\n\n\tstatic getDefaults(): OmniOscillatorOptions {\n\t\treturn Object.assign(\n\t\t\tOscillator.getDefaults(),\n\t\t\tFMOscillator.getDefaults(),\n\t\t\tAMOscillator.getDefaults(),\n\t\t\tFatOscillator.getDefaults(),\n\t\t\tPulseOscillator.getDefaults(),\n\t\t\tPWMOscillator.getDefaults(),\n\t\t);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _start(time: Time): void {\n\t\tthis._oscillator.start(time);\n\t}\n\n\t/**\n\t * start the oscillator\n\t */\n\tprotected _stop(time: Time): void {\n\t\tthis._oscillator.stop(time);\n\t}\n\n\tprotected _restart(time: Seconds): this {\n\t\tthis._oscillator.restart(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n\t * when it's not. \n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n\t * omniOsc.type = \"pwm\";\n\t * // modulationFrequency is parameter which is available\n\t * // only when the type is \"pwm\".\n\t * omniOsc.modulationFrequency.value = 0.5;\n\t */\n\tget type(): OmniOscillatorType {\n\t\tlet prefix = \"\";\n\t\tif ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n\t\t\tprefix = this._sourceType;\n\t\t}\n\t\treturn prefix + this._oscillator.type as OmniOscillatorType;\n\t}\n\tset type(type) {\n\t\tif (type.substr(0, 2) === \"fm\") {\n\t\t\tthis._createNewOscillator(\"fm\");\n\t\t\tthis._oscillator = this._oscillator as FMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 2) === \"am\") {\n\t\t\tthis._createNewOscillator(\"am\");\n\t\t\tthis._oscillator = this._oscillator as AMOscillator;\n\t\t\tthis._oscillator.type = type.substr(2) as ToneOscillatorType;\n\t\t} else if (type.substr(0, 3) === \"fat\") {\n\t\t\tthis._createNewOscillator(\"fat\");\n\t\t\tthis._oscillator = this._oscillator as FatOscillator;\n\t\t\tthis._oscillator.type = type.substr(3) as ToneOscillatorType;\n\t\t} else if (type === \"pwm\") {\n\t\t\tthis._createNewOscillator(\"pwm\");\n\t\t\tthis._oscillator = this._oscillator as PWMOscillator;\n\t\t} else if (type === \"pulse\") {\n\t\t\tthis._createNewOscillator(\"pulse\");\n\t\t} else {\n\t\t\tthis._createNewOscillator(\"oscillator\");\n\t\t\tthis._oscillator = this._oscillator as Oscillator;\n\t\t\tthis._oscillator.type = (type as ToneOscillatorType);\n\t\t}\n\t}\n\n\t/**\n\t * The value is an empty array when the type is not \"custom\".\n\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partials = partials;\n\t\t}\n\t}\n\n\tget partialCount(): number {\n\t\treturn this._oscillator.partialCount;\n\t}\n\tset partialCount(partialCount) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\tthis._oscillator.partialCount = partialCount;\n\t\t}\n\t}\n\n\tset(props: Partial<OmniOscillatorOptions>): this {\n\t\t// make sure the type is set first\n\t\tif (Reflect.has(props, \"type\") && props.type) {\n\t\t\tthis.type = props.type;\n\t\t}\n\t\t// then set the rest\n\t\tsuper.set(props);\n\t\treturn this;\n\t}\n\n\t/**\n\t * connect the oscillator to the frequency and detune signals\n\t */\n\tprivate _createNewOscillator(oscType: OmniOscSourceType): void {\n\t\tif (oscType !== this._sourceType) {\n\t\t\tthis._sourceType = oscType;\n\t\t\tconst OscConstructor = OmniOscillatorSourceMap[oscType];\n\t\t\t// short delay to avoid clicks on the change\n\t\t\tconst now = this.now();\n\t\t\tif (this._oscillator) {\n\t\t\t\tconst oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\t// dispose the old one\n\t\t\t\tthis.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n\t\t\t}\n\t\t\tthis._oscillator = new OscConstructor({\n\t\t\t\tcontext: this.context,\n\t\t\t});\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tthis._oscillator.onstop = () => this.onstop(this);\n\t\t\tif (this.state === \"started\") {\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t}\n\t}\n\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t}\n\n\t/**\n\t * The source type of the oscillator.\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n\t * console.log(omniOsc.sourceType); // 'fm'\n\t */\n\tget sourceType(): OmniOscSourceType {\n\t\treturn this._sourceType;\n\t}\n\tset sourceType(sType) {\n\t\t// the basetype defaults to sine\n\t\tlet baseType = \"sine\";\n\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n\t\t\tbaseType = this._oscillator.type;\n\t\t}\n\n\t\t// set the type\n\t\tif (sType === \"fm\") {\n\t\t\tthis.type = \"fm\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"am\") {\n\t\t\tthis.type = \"am\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"fat\") {\n\t\t\tthis.type = \"fat\" + baseType as OmniOscillatorType;\n\t\t} else if (sType === \"oscillator\") {\n\t\t\tthis.type = baseType as OmniOscillatorType;\n\t\t} else if (sType === \"pulse\") {\n\t\t\tthis.type = \"pulse\";\n\t\t} else if (sType === \"pwm\") {\n\t\t\tthis.type = \"pwm\";\n\t\t}\n\t}\n\n\tprivate _getOscType<SourceType extends OmniOscSourceType>(\n\t\tosc: AnyOscillator,\n\t\tsourceType: SourceType,\n\t): osc is OmniOscillatorSource[SourceType] {\n\t\treturn osc instanceof OmniOscillatorSourceMap[sourceType];\n\t}\n\n\t/**\n\t * The base type of the oscillator. See [[Oscillator.baseType]]\n\t * @example\n\t * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n\t * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n\t */\n\tget baseType(): OscillatorType | \"pwm\" | \"pulse\" {\n\t\treturn this._oscillator.baseType;\n\t}\n\tset baseType(baseType) {\n\t\tif (!this._getOscType(this._oscillator, \"pulse\") &&\n\t\t\t!this._getOscType(this._oscillator, \"pwm\") &&\n\t\t\tbaseType !== \"pulse\" && baseType !== \"pwm\") {\n\t\t\tthis._oscillator.baseType = baseType;\n\t\t}\n\t}\n\n\t/**\n\t * The width of the oscillator when sourceType === \"pulse\".\n\t * See [[PWMOscillator.width]]\n\t */\n\tget width(): IsPulseOscillator<OscType, Signal<\"audioRange\">> {\n\t\tif (this._getOscType(this._oscillator, \"pulse\")) {\n\t\t\treturn this._oscillator.width as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPulseOscillator<OscType, Signal<\"audioRange\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The number of detuned oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget count(): IsFatOscillator<OscType, number> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.count as IsFatOscillator<OscType, number>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, number>;\n\t\t}\n\t}\n\tset count(count) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n\t\t\tthis._oscillator.count = count;\n\t\t}\n\t}\n\n\t/**\n\t * The detune spread between the oscillators when sourceType === \"fat\".\n\t * See [[FatOscillator.count]]\n\t */\n\tget spread(): IsFatOscillator<OscType, Cents> {\n\t\tif (this._getOscType(this._oscillator, \"fat\")) {\n\t\t\treturn this._oscillator.spread as IsFatOscillator<OscType, Cents>;\n\t\t} else {\n\t\t\treturn undefined as IsFatOscillator<OscType, Cents>;\n\t\t}\n\t}\n\tset spread(spread) {\n\t\tif (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n\t\t\tthis._oscillator.spread = spread;\n\t\t}\n\t}\n\n\t/**\n\t * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types. \n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget modulationType(): IsAmOrFmOscillator<OscType, ToneOscillatorType> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.modulationType as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, ToneOscillatorType>;\n\t\t}\n\t}\n\tset modulationType(mType) {\n\t\tif ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n\t\t\tthis._oscillator.modulationType = mType;\n\t\t}\n\t}\n\n\t/**\n\t * The modulation index when the sourceType === \"fm\"\n\t * See [[FMOscillator]].\n\t */\n\tget modulationIndex(): IsFMOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\")) {\n\t\t\treturn this._oscillator.modulationIndex as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsFMOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t * See [[AMOscillator]] or [[FMOscillator]]\n\t */\n\tget harmonicity(): IsAmOrFmOscillator<OscType, Signal<\"positive\">> {\n\t\tif (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n\t\t\treturn this._oscillator.harmonicity as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t} else {\n\t\t\treturn undefined as IsAmOrFmOscillator<OscType, Signal<\"positive\">>;\n\t\t}\n\t}\n\n\t/**\n\t * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n\t * see [[PWMOscillator]]\n\t * @min 0.1\n\t * @max 5\n\t */\n\tget modulationFrequency(): IsPWMOscillator<OscType, Signal<\"frequency\">> {\n\t\tif (this._getOscType(this._oscillator, \"pwm\")) {\n\t\t\treturn this._oscillator.modulationFrequency as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t} else {\n\t\t\treturn undefined as IsPWMOscillator<OscType, Signal<\"frequency\">>;\n\t\t}\n\t}\n\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\treturn generateWaveform(this, length);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.detune.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis._oscillator.dispose();\n\t\treturn this;\n\t}\n}\n","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal, SignalOptions } from \"./Signal\";\n\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst add = new Tone.Add(2).toDestination();\n * \tadd.addend.setValueAtTime(1, 0.2);\n * \tconst signal = new Tone.Signal(2);\n * \t// add a signal and a scalar\n * \tsignal.connect(add);\n * \tsignal.setValueAtTime(1, 0.1);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Add extends Signal {\n\n\toverride = false;\n\n\treadonly name: string = \"Add\";\n\n\t/**\n\t * the summing node\n\t */\n\tprivate _sum: Gain = new Gain({ context: this.context });\n\treadonly input = this._sum;\n\treadonly output = this._sum;\n\n\t/**\n\t * The value which is added to the input signal\n\t */\n\treadonly addend: Param<\"number\"> = this._param;\n\n\t/**\n\t * @param value If no value is provided, will sum the input and [[addend]].\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<\"number\">>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n\n\t\tconnectSeries(this._constantSource, this._sum);\n\t}\n\n\tstatic getDefaults(): SignalOptions<\"number\"> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sum.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\nexport interface ScaleOptions extends ToneAudioNodeOptions {\n\tmin: number;\n\tmax: number;\n}\n\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale<Options extends ScaleOptions = ScaleOptions> extends SignalOperator<Options> {\n\n\treadonly name: string = \"Scale\";\n\n\tinput: InputNode;\n\toutput: OutputNode;\n\n\t/**\n\t * Hold the multiple\n\t */\n\tprotected _mult: Multiply;\n\n\t/**\n\t * Hold the adder\n\t */\n\tprotected _add: Add;\n\n\t/**\n\t * Private reference to the min value\n\t */\n\tprivate _min: number;\n\n\t/**\n\t * Private reference to the max value\n\t */\n\tprivate _max: number;\n\n\t/**\n\t * @param min The output value when the input is 0.\n\t * @param max The output value when the input is 1.\n\t */\n\tconstructor(min?: number, max?: number);\n\tconstructor(options?: Partial<ScaleOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n\t\tconst options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n\n\t\tthis._mult = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.max - options.min,\n\t\t});\n\n\t\tthis._add = this.output = new Add({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.min,\n\t\t});\n\n\t\tthis._min = options.min;\n\t\tthis._max = options.max;\n\n\t\tthis.input.connect(this.output);\n\t}\n\n\tstatic getDefaults(): ScaleOptions {\n\t\treturn Object.assign(SignalOperator.getDefaults(), {\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t});\n\t}\n\n\t/**\n\t * The minimum output value. This number is output when the value input value is 0.\n\t */\n\tget min(): number {\n\t\treturn this._min;\n\t}\n\tset min(min) {\n\t\tthis._min = min;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * The maximum output value. This number is output when the value input value is 1.\n\t */\n\tget max(): number {\n\t\treturn this._max;\n\t}\n\tset max(max) {\n\t\tthis._max = max;\n\t\tthis._setRange();\n\t}\n\n\t/**\n\t * set the values\n\t */\n\tprivate _setRange(): void {\n\t\tthis._add.value = this._min;\n\t\tthis._mult.value = this._max - this._min;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._add.dispose();\n\t\tthis._mult.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Degrees, Frequency, NormalRange, Time, UnitName } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator, ToneOscillatorType } from \"./Oscillator\";\nimport { ToneOscillatorConstructorOptions, ToneOscillatorOptions } from \"./OscillatorInterface\";\n\nexport type LFOOptions = {\n\tmin: number;\n\tmax: number;\n\tamplitude: NormalRange;\n\tunits: UnitName;\n} & ToneOscillatorOptions;\n\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n * @example\n * return Tone.Offline(() => {\n * \tconst lfo = new Tone.LFO(\"4n\", 400, 4000).start().toDestination();\n * }, 0.5, 1);\n * @category Source\n */\nexport class LFO extends ToneAudioNode<LFOOptions> {\n\n\treadonly name: string = \"LFO\";\n\n\t/**\n\t * The oscillator.\n\t */\n\tprivate _oscillator: Oscillator;\n\n\t/**\n\t * The gain of the output\n\t */\n\tprivate _amplitudeGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amplitude of the LFO, which controls the output range between\n\t * the min and max output. For example if the min is -10 and the max\n\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t * between -5 and 5.\n\t */\n\treadonly amplitude: Param<\"normalRange\">;\n\n\t/**\n\t * The signal which is output when the LFO is stopped\n\t */\n\tprivate _stoppedSignal: Signal<\"audioRange\">;\n\n\t/**\n\t * Just outputs zeros. This is used so that scaled signal is not\n\t * optimized to silence.\n\t */\n\tprivate _zeros: Zero;\n\n\t/**\n\t * The value that the LFO outputs when it's stopped\n\t */\n\tprivate _stoppedValue = 0;\n\n\t/**\n\t * Convert the oscillators audio range to an output between 0-1 so it can be scaled\n\t */\n\tprivate _a2g: AudioToGain;\n\n\t/**\n\t * Scales the final output to the min and max value\n\t */\n\tprivate _scaler: Scale;\n\n\t/**\n\t * The output of the LFO\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * There is no input node\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * A private placeholder for the units\n\t */\n\tprivate _units: UnitName = \"number\";\n\n\t/**\n\t * If the input value is converted using the [[units]]\n\t */\n\tconvert = true;\n\n\t/**\n\t * The frequency value of the LFO\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param frequency The frequency of the oscillation.\n\t * Typically, LFOs will be in the frequency range of 0.1 to 10 hertz.\n\t * @param min The minimum output value of the LFO.\n\t * @param max The maximum value of the LFO.\n\t */\n\tconstructor(frequency?: Frequency, min?: number, max?: number);\n\tconstructor(options?: Partial<LFOOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n\t\tconst options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n\n\t\tthis._oscillator = new Oscillator(options as ToneOscillatorConstructorOptions);\n\n\t\tthis.frequency = this._oscillator.frequency;\n\n\t\tthis._amplitudeGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.amplitude,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\tthis.amplitude = this._amplitudeGain.gain;\n\t\tthis._stoppedSignal = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"audioRange\",\n\t\t\tvalue: 0,\n\t\t});\n\t\tthis._zeros = new Zero({ context: this.context });\n\t\tthis._a2g = new AudioToGain({ context: this.context });\n\t\tthis._scaler = this.output = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmax: options.max,\n\t\t\tmin: options.min,\n\t\t});\n\n\t\tthis.units = options.units;\n\t\tthis.min = options.min;\n\t\tthis.max = options.max;\n\n\t\t// connect it up\n\t\tthis._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);\n\t\tthis._zeros.connect(this._a2g);\n\t\tthis._stoppedSignal.connect(this._a2g);\n\t\treadOnly(this, [\"amplitude\", \"frequency\"]);\n\t\tthis.phase = options.phase;\n\t}\n\n\tstatic getDefaults(): LFOOptions {\n\t\treturn Object.assign(Oscillator.getDefaults(), {\n\t\t\tamplitude: 1,\n\t\t\tfrequency: \"4n\",\n\t\t\tmax: 1,\n\t\t\tmin: 0,\n\t\t\ttype: \"sine\",\n\t\t\tunits: \"number\" as UnitName,\n\t\t});\n\t}\n\n\t/**\n\t * Start the LFO.\n\t * @param time The time the LFO will start\n\t */\n\tstart(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._stoppedSignal.setValueAtTime(0, time);\n\t\tthis._oscillator.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the LFO.\n\t * @param  time The time the LFO will stop\n\t */\n\tstop(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n\t\tthis._oscillator.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the start/stop/pause to the transport\n\t * and the frequency to the bpm of the transport\n\t * @example\n\t * const lfo = new Tone.LFO(\"8n\");\n\t * lfo.sync().start(0);\n\t * // the rate of the LFO will always be an eighth note, even as the tempo changes\n\t */\n\tsync(): this {\n\t\tthis._oscillator.sync();\n\t\tthis._oscillator.syncFrequency();\n\t\treturn this;\n\t}\n\n\t/**\n\t * unsync the LFO from transport control\n\t */\n\tunsync(): this {\n\t\tthis._oscillator.unsync();\n\t\tthis._oscillator.unsyncFrequency();\n\t\treturn this;\n\t}\n\n\t/**\n\t * After the oscillator waveform is updated, reset the `_stoppedSignal` value to match the updated waveform\n\t */\n\tprivate _setStoppedValue() {\n\t\tthis._stoppedValue = this._oscillator.getInitialValue();\n\t\tthis._stoppedSignal.value = this._stoppedValue;\n\t}\n\n\t/**\n\t * The minimum output of the LFO.\n\t */\n\tget min(): number {\n\t\treturn this._toType(this._scaler.min);\n\t}\n\tset min(min) {\n\t\tmin = this._fromType(min);\n\t\tthis._scaler.min = min;\n\t}\n\n\t/**\n\t * The maximum output of the LFO.\n\t */\n\tget max(): number {\n\t\treturn this._toType(this._scaler.max);\n\t}\n\tset max(max) {\n\t\tmax = this._fromType(max);\n\t\tthis._scaler.max = max;\n\t}\n\n\t/**\n\t * The type of the oscillator: See [[Oscillator.type]]\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._oscillator.type;\n\t}\n\tset type(type) {\n\t\tthis._oscillator.type = type;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The oscillator's partials array: See [[Oscillator.partials]]\n\t */\n\tget partials(): number[] {\n\t\treturn this._oscillator.partials;\n\t}\n\tset partials(partials) {\n\t\tthis._oscillator.partials = partials;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The phase of the LFO.\n\t */\n\tget phase(): Degrees {\n\t\treturn this._oscillator.phase;\n\t}\n\tset phase(phase) {\n\t\tthis._oscillator.phase = phase;\n\t\tthis._setStoppedValue();\n\t}\n\n\t/**\n\t * The output units of the LFO.\n\t */\n\tget units(): UnitName {\n\t\treturn this._units;\n\t}\n\tset units(val) {\n\t\tconst currentMin = this.min;\n\t\tconst currentMax = this.max;\n\t\t// convert the min and the max\n\t\tthis._units = val;\n\t\tthis.min = currentMin;\n\t\tthis.max = currentMax;\n\t}\n\n\t/**\n\t * Returns the playback state of the source, either \"started\" or \"stopped\".\n\t */\n\tget state(): BasicPlaybackState {\n\t\treturn this._oscillator.state;\n\t}\n\n\t/**\n\t * @param node the destination to connect to\n\t * @param outputNum the optional output number\n\t * @param inputNum the input number\n\t */\n\tconnect(node: InputNode, outputNum?: number, inputNum?: number): this {\n\t\tif (node instanceof Param || node instanceof Signal) {\n\t\t\tthis.convert = node.convert;\n\t\t\tthis.units = node.units;\n\t\t}\n\t\tconnectSignal(this, node, outputNum, inputNum);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Private methods borrowed from Param\n\t */\n\t// @ts-ignore\n\tprivate _fromType = Param.prototype._fromType;\n\t// @ts-ignore\n\tprivate _toType = Param.prototype._toType;\n\t// @ts-ignore\n\tprivate _is = Param.prototype._is;\n\t// @ts-ignore\n\tprivate _clampValue = Param.prototype._clampValue;\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._oscillator.dispose();\n\t\tthis._stoppedSignal.dispose();\n\t\tthis._zeros.dispose();\n\t\tthis._scaler.dispose();\n\t\tthis._a2g.dispose();\n\t\tthis._amplitudeGain.dispose();\n\t\tthis.amplitude.dispose();\n\t\treturn this;\n\t}\n}\n","import { assertRange } from \"./Debug\";\nimport { Time } from \"../type/Units\";\n\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, number> = new WeakMap();\n\treturn function(target: any, propertyKey: string | symbol) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: number) {\n\t\t\t\t\tassertRange(newValue, min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min: number, max = Infinity) {\n\tconst valueMap: WeakMap<any, Time> = new WeakMap();\n\treturn function(target: any, propertyKey: string) {\n\t\tReflect.defineProperty(\n\t\t\ttarget,\n\t\t\tpropertyKey,\n\t\t\t{\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn valueMap.get(this);\n\t\t\t\t},\n\t\t\t\tset: function(newValue: Time) {\n\t\t\t\t\tassertRange(this.toSeconds(newValue), min, max);\n\t\t\t\t\tvalueMap.set(this, newValue);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n}\n","import { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { Positive, Seconds, Time } from \"../../core/type/Units\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n\nexport interface PlayerOptions extends SourceOptions {\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tplaybackRate: Positive;\n\tloop: boolean;\n\tautostart: boolean;\n\tloopStart: Time;\n\tloopEnd: Time;\n\treverse: boolean;\n\tfadeIn: Time;\n\tfadeOut: Time;\n\turl?: ToneAudioBuffer | string | AudioBuffer;\n}\n\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source<PlayerOptions> {\n\n\treadonly name: string = \"Player\";\n\n\t/**\n\t * If the file should play as soon\n\t * as the buffer is loaded.\n\t */\n\tautostart: boolean;\n\n\t/**\n\t * The buffer\n\t */\n\tprivate _buffer: ToneAudioBuffer;\n\n\t/**\n\t * if the buffer should loop once it's over\n\t */\n\tprivate _loop: boolean;\n\n\t/**\n\t * if 'loop' is true, the loop will start at this position\n\t */\n\tprivate _loopStart: Time;\n\n\t/**\n\t * if 'loop' is true, the loop will end at this position\n\t */\n\tprivate _loopEnd: Time;\n\n\t/**\n\t * the playback rate\n\t */\n\tprivate _playbackRate: Positive;\n\n\t/**\n\t * All of the active buffer source nodes\n\t */\n\tprivate _activeSources: Set<ToneBufferSource> = new Set();\n\n\t/**\n\t * The fadeIn time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeIn: Time;\n\n\t/**\n\t * The fadeOut time of the amplitude envelope.\n\t */\n\t@timeRange(0)\n\tfadeOut: Time;\n\n\t/**\n\t * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n\t * @param onload The function to invoke when the buffer is loaded.\n\t */\n\tconstructor(url?: string | AudioBuffer | ToneAudioBuffer, onload?: () => void);\n\tconstructor(options?: Partial<PlayerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n\t\tconst options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n\n\t\tthis._buffer = new ToneAudioBuffer({\n\t\t\tonload: this._onload.bind(this, options.onload),\n\t\t\tonerror: options.onerror,\n\t\t\treverse: options.reverse,\n\t\t\turl: options.url,\n\t\t});\n\t\tthis.autostart = options.autostart;\n\t\tthis._loop = options.loop;\n\t\tthis._loopStart = options.loopStart;\n\t\tthis._loopEnd = options.loopEnd;\n\t\tthis._playbackRate = options.playbackRate;\n\t\tthis.fadeIn = options.fadeIn;\n\t\tthis.fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayerOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tautostart: false,\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tloop: false,\n\t\t\tloopEnd: 0,\n\t\t\tloopStart: 0,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\tplaybackRate: 1,\n\t\t\treverse: false,\n\t\t});\n\t}\n\n\t/**\n\t * Load the audio file as an audio buffer.\n\t * Decodes the audio asynchronously and invokes\n\t * the callback once the audio buffer loads.\n\t * Note: this does not need to be called if a url\n\t * was passed in to the constructor. Only use this\n\t * if you want to manually load a new url.\n\t * @param url The url of the buffer to load. Filetype support depends on the browser.\n\t */\n\tasync load(url: string): Promise<this> {\n\t\tawait this._buffer.load(url);\n\t\tthis._onload();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal callback when the buffer is loaded.\n\t */\n\tprivate _onload(callback: () => void = noOp): void {\n\t\tcallback();\n\t\tif (this.autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Internal callback when the buffer is done playing.\n\t */\n\tprivate _onSourceEnd(source: ToneBufferSource): void {\n\t\t// invoke the onstop function\n\t\tthis.onstop(this);\n\n\t\t// delete the source from the active sources\n\t\tthis._activeSources.delete(source);\n\t\tif (this._activeSources.size === 0 && !this._synced &&\n\t\t\tthis._state.getValueAtTime(this.now()) === \"started\") {\n\t\t\t// remove the 'implicitEnd' event and replace with an explicit end\n\t\t\tthis._state.cancel(this.now());\n\t\t\tthis._state.setStateAtTime(\"stopped\", this.now());\n\t\t}\n\t}\n\n\t/**\n\t * Play the buffer at the given startTime. Optionally add an offset\n\t * and/or duration which will play the buffer from a position\n\t * within the buffer for the given duration.\n\t *\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n\t */\n\tstart(time?: Time, offset?: Time, duration?: Time): this {\n\t\tsuper.start(time, offset, duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal start method\n\t */\n\tprotected _start(startTime?: Time, offset?: Time, duration?: Time): void {\n\t\t// if it's a loop the default offset is the loopStart point\n\t\tif (this._loop) {\n\t\t\toffset = defaultArg(offset, this._loopStart);\n\t\t} else {\n\t\t\t// otherwise the default offset is 0\n\t\t\toffset = defaultArg(offset, 0);\n\t\t}\n\n\t\t// compute the values in seconds\n\t\tconst computedOffset = this.toSeconds(offset);\n\n\t\t// compute the duration which is either the passed in duration of the buffer.duration - offset\n\t\tconst origDuration = duration;\n\t\tduration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n\t\tlet computedDuration = this.toSeconds(duration);\n\n\t\t// scale it by the playback rate\n\t\tcomputedDuration = computedDuration / this._playbackRate;\n\n\t\t// get the start time\n\t\tstartTime = this.toSeconds(startTime);\n\n\t\t// make the source\n\t\tconst source = new ToneBufferSource({\n\t\t\turl: this._buffer,\n\t\t\tcontext: this.context,\n\t\t\tfadeIn: this.fadeIn,\n\t\t\tfadeOut: this.fadeOut,\n\t\t\tloop: this._loop,\n\t\t\tloopEnd: this._loopEnd,\n\t\t\tloopStart: this._loopStart,\n\t\t\tonended: this._onSourceEnd.bind(this),\n\t\t\tplaybackRate: this._playbackRate,\n\t\t}).connect(this.output);\n\n\t\t// set the looping properties\n\t\tif (!this._loop && !this._synced) {\n\t\t\t// cancel the previous stop\n\t\t\tthis._state.cancel(startTime + computedDuration);\n\t\t\t// if it's not looping, set the state change at the end of the sample\n\t\t\tthis._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n\t\t\t\timplicitEnd: true,\n\t\t\t});\n\t\t}\n\n\t\t// add it to the array of active sources\n\t\tthis._activeSources.add(source);\n\n\t\t// start it\n\t\tif (this._loop && isUndef(origDuration)) {\n\t\t\tsource.start(startTime, computedOffset);\n\t\t} else {\n\t\t\t// subtract the fade out time\n\t\t\tsource.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n\t\t}\n\t}\n\n\t/**\n\t * Stop playback.\n\t */\n\tprotected _stop(time?: Time): void {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(source => source.stop(computedTime));\n\t}\n\n\t/**\n\t * Stop and then restart the player from the beginning (or offset)\n\t * @param  time When the player should start.\n\t * @param  offset The offset from the beginning of the sample to start at.\n\t * @param  duration How long the sample should play. If no duration is given, \n\t * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n\t */\n\trestart(time?: Seconds, offset?: Time, duration?: Time): this {\n\t\tsuper.restart(time, offset, duration);\n\t\treturn this;\n\t}\n\n\tprotected _restart(time?: Seconds, offset?: Time, duration?: Time): void {\n\t\tthis._stop(time);\n\t\tthis._start(time, offset, duration);\n\t}\n\n\t/**\n\t * Seek to a specific time in the player's buffer. If the\n\t * source is no longer playing at that time, it will stop.\n\t * @param offset The time to seek to.\n\t * @param when The time for the seek event to occur.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n\t * \tplayer.start();\n\t * \t// seek to the offset in 1 second from now\n\t * \tplayer.seek(0.4, \"+1\");\n\t * }).toDestination();\n\t */\n\tseek(offset: Time, when?: Time): this {\n\t\tconst computedTime = this.toSeconds(when);\n\t\tif (this._state.getValueAtTime(computedTime) === \"started\") {\n\t\t\tconst computedOffset = this.toSeconds(offset);\n\t\t\t// if it's currently playing, stop it\n\t\t\tthis._stop(computedTime);\n\t\t\t// restart it at the given time\n\t\t\tthis._start(computedTime, computedOffset);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the loop start and end. Will only loop if loop is set to true.\n\t * @param loopStart The loop start time\n\t * @param loopEnd The loop end time\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n\t * // loop between the given points\n\t * player.setLoopPoints(0.2, 0.3);\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tsetLoopPoints(loopStart: Time, loopEnd: Time): this {\n\t\tthis.loopStart = loopStart;\n\t\tthis.loopEnd = loopEnd;\n\t\treturn this;\n\t}\n\n\t/**\n\t * If loop is true, the loop will start at this position.\n\t */\n\tget loopStart(): Time {\n\t\treturn this._loopStart;\n\t}\n\tset loopStart(loopStart) {\n\t\tthis._loopStart = loopStart;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loopStart = loopStart;\n\t\t});\n\t}\n\n\t/**\n\t * If loop is true, the loop will end at this position.\n\t */\n\tget loopEnd(): Time {\n\t\treturn this._loopEnd;\n\t}\n\tset loopEnd(loopEnd) {\n\t\tthis._loopEnd = loopEnd;\n\t\tif (this.buffer.loaded) {\n\t\t\tassertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n\t\t}\n\t\t// get the current source\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loopEnd = loopEnd;\n\t\t});\n\t}\n\n\t/**\n\t * The audio buffer belonging to the player.\n\t */\n\tget buffer(): ToneAudioBuffer {\n\t\treturn this._buffer;\n\t}\n\tset buffer(buffer) {\n\t\tthis._buffer.set(buffer);\n\t}\n\n\t/**\n\t * If the buffer should loop once it's over.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n\t * player.loop = true;\n\t * player.autostart = true;\n\t */\n\tget loop(): boolean {\n\t\treturn this._loop;\n\t}\n\tset loop(loop) {\n\t\t// if no change, do nothing\n\t\tif (this._loop === loop) {\n\t\t\treturn;\n\t\t}\n\t\tthis._loop = loop;\n\t\t// set the loop of all of the sources\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.loop = loop;\n\t\t});\n\t\tif (loop) {\n\t\t\t// remove the next stopEvent\n\t\t\tconst stopEvent = this._state.getNextState(\"stopped\", this.now());\n\t\t\tif (stopEvent) {\n\t\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Normal speed is 1. The pitch will change with the playback rate.\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n\t * // play at 1/4 speed\n\t * player.playbackRate = 0.25;\n\t * // play as soon as the buffer is loaded\n\t * player.autostart = true;\n\t */\n\tget playbackRate(): Positive {\n\t\treturn this._playbackRate;\n\t}\n\tset playbackRate(rate) {\n\t\tthis._playbackRate = rate;\n\t\tconst now = this.now();\n\n\t\t// cancel the stop event since it's at a different time now\n\t\tconst stopEvent = this._state.getNextState(\"stopped\", now);\n\t\tif (stopEvent && stopEvent.implicitEnd) {\n\t\t\tthis._state.cancel(stopEvent.time);\n\t\t\tthis._activeSources.forEach(source => source.cancelStop());\n\t\t}\n\n\t\t// set all the sources\n\t\tthis._activeSources.forEach(source => {\n\t\t\tsource.playbackRate.setValueAtTime(rate, now);\n\t\t});\n\t}\n\n\t/**\n\t * If the buffer should be reversed\n\t * @example\n\t * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n\t * player.autostart = true;\n\t * player.reverse = true;\n\t */\n\tget reverse(): boolean {\n\t\treturn this._buffer.reverse;\n\t}\n\tset reverse(rev) {\n\t\tthis._buffer.reverse = rev;\n\t}\n\n\t/**\n\t * If the buffer is loaded\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffer.loaded;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t// disconnect all of the players\n\t\tthis._activeSources.forEach(source => source.dispose());\n\t\tthis._activeSources.clear();\n\t\tthis._buffer.dispose();\n\t\treturn this;\n\t}\n}\n","import { Volume } from \"../../component/channel/Volume\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers, ToneAudioBuffersUrlMap } from \"../../core/context/ToneAudioBuffers\";\nimport { OutputNode, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Decibels, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { BasicPlaybackState } from \"../../core/util/StateTimeline\";\nimport { Source, SourceOptions } from \"../Source\";\nimport { Player } from \"./Player\";\n\nexport interface PlayersOptions extends SourceOptions {\n\turls: ToneAudioBuffersUrlMap;\n\tvolume: Decibels;\n\tmute: boolean;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tfadeIn: Time;\n\tfadeOut: Time;\n}\n\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nexport class Players extends ToneAudioNode<PlayersOptions> {\n\n\treadonly name: string = \"Players\";\n\n\t/**\n\t * The output volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume of the output in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * The combined output of all of the players\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * Players has no input.\n\t */\n\treadonly input = undefined;\n\n\t/**\n\t * The container of all of the players\n\t */\n\tprivate _players: Map<string, Player> = new Map();\n\n\t/**\n\t * The container of all the buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * private holder of the fadeIn time\n\t */\n\tprivate _fadeIn: Time;\n\n\t/**\n\t * private holder of the fadeOut time\n\t */\n\tprivate _fadeOut: Time;\n\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param onload The function to invoke when all buffers are loaded.\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, onload?: () => void);\n\t/**\n\t * @param urls An object mapping a name to a url.\n\t * @param options The remaining options associated with the players\n\t */\n\tconstructor(urls?: ToneAudioBuffersUrlMap, options?: Partial<Omit<PlayersOptions, \"urls\">>);\n\tconstructor(options?: Partial<PlayersOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n\n\t\t/**\n\t\t * The output volume node\n\t\t */\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: options.urls, \n\t\t\tonload: options.onload, \n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror\n\t\t});\n\t\t// mute initially\n\t\tthis.mute = options.mute;\n\t\tthis._fadeIn = options.fadeIn;\n\t\tthis._fadeOut = options.fadeOut;\n\t}\n\n\tstatic getDefaults(): PlayersOptions {\n\t\treturn Object.assign(Source.getDefaults(), {\n\t\t\tbaseUrl: \"\",\n\t\t\tfadeIn: 0,\n\t\t\tfadeOut: 0,\n\t\t\tmute: false,\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\turls: {},\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Mute the output.\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\t/**\n\t * The fadeIn time of the envelope applied to the source.\n\t */\n\tget fadeIn(): Time {\n\t\treturn this._fadeIn;\n\t}\n\tset fadeIn(fadeIn) {\n\t\tthis._fadeIn = fadeIn;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeIn = fadeIn;\n\t\t});\n\t}\n\n\t/**\n\t * The fadeOut time of the each of the sources.\n\t */\n\tget fadeOut(): Time {\n\t\treturn this._fadeOut;\n\t}\n\tset fadeOut(fadeOut) {\n\t\tthis._fadeOut = fadeOut;\n\t\tthis._players.forEach(player => {\n\t\t\tplayer.fadeOut = fadeOut;\n\t\t});\n\t}\n\n\t/**\n\t * The state of the players object. Returns \"started\" if any of the players are playing.\n\t */\n\tget state(): BasicPlaybackState {\n\t\tconst playing = Array.from(this._players).some(([_, player]) => player.state === \"started\");\n\t\treturn playing ? \"started\" : \"stopped\";\n\t}\n\n\t/**\n\t * True if the buffers object has a buffer by that name.\n\t * @param name  The key or index of the buffer.\n\t */\n\thas(name: string): boolean {\n\t\treturn this._buffers.has(name);\n\t}\n\n\t/**\n\t * Get a player by name.\n\t * @param  name  The players name as defined in the constructor object or `add` method.\n\t */\n\tplayer(name: string): Player {\n\t\tassert(this.has(name), `No Player with the name ${name} exists on this object`);\n\t\tif (!this._players.has(name)) {\n\t\t\tconst player = new Player({\n\t\t\t\tcontext: this.context,\n\t\t\t\tfadeIn: this._fadeIn,\n\t\t\t\tfadeOut: this._fadeOut,\n\t\t\t\turl: this._buffers.get(name),\n\t\t\t}).connect(this.output);\n\t\t\tthis._players.set(name, player);\n\t\t}\n\t\treturn this._players.get(name) as Player;\n\t}\n\n\t/**\n\t * If all the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Add a player by name and url to the Players\n\t * @param  name A unique name to give the player\n\t * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n\t * @param callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(name: string, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\t\tthis._buffers.add(name, url, callback);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop all of the players at the given time\n\t * @param time The time to stop all of the players.\n\t */\n\tstopAll(time?: Time): this {\n\t\tthis._players.forEach(player => player.stop(time));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._players.forEach(player => player.dispose());\n\t\tthis._buffers.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"GainToAudio\";\n\n\t/**\n\t * The node which converts the audio ranges\n\t */\n\tprivate _norm = new WaveShaper({\n\t\tcontext: this.context,\n\t\tmapping: x => Math.abs(x) * 2 - 1,\n\t});\n\n\t/**\n\t * The NormalRange input [0, 1]\n\t */\n\tinput = this._norm;\n\n\t/**\n\t * The AudioRange output [-1, 1]\n\t */\n\toutput = this._norm;\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._norm.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\nexport class Negate extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Negate\";\n\n\t/**\n\t * negation is done by multiplying by -1\n\t */\n\tprivate _multiply: Multiply = new Multiply({\n\t\tcontext: this.context,\n\t\tvalue: -1,\n\t});\n\n\t/**\n\t * The input and output are equal to the multiply node\n\t */\n\tinput = this._multiply;\n\toutput = this._multiply;\n\n\t/**\n\t * clean up\n\t * @returns {Negate} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._multiply.dispose();\n\t\treturn this;\n\t}\n}\n","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal, SignalOptions } from \"../signal/Signal\";\n\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nexport class Subtract extends Signal {\n\n\toverride = false;\n\n\treadonly name: string = \"Subtract\";\n\n\t/**\n\t * the summing node\n\t */\n\tprivate _sum: Gain = new Gain({ context: this.context });\n\treadonly input: Gain = this._sum;\n\treadonly output: Gain = this._sum;\n\n\t/**\n\t * Negate the input of the second input before connecting it to the summing node.\n\t */\n\tprivate _neg: Negate = new Negate({ context: this.context });\n\n\t/**\n\t * The value which is subtracted from the main signal\n\t */\n\tsubtrahend: Param<\"number\"> = this._param;\n\n\t/**\n\t * @param value The value to subtract from the incoming signal. If the value\n\t *             is omitted, it will subtract the second signal from the first.\n\t */\n\tconstructor(value?: number);\n\tconstructor(options?: Partial<SignalOptions<\"number\">>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n\n\t\tconnectSeries(this._constantSource, this._neg, this._sum);\n\t}\n\n\tstatic getDefaults(): SignalOptions<\"number\"> {\n\t\treturn Object.assign(Signal.getDefaults(), {\n\t\t\tvalue: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._neg.dispose();\n\t\tthis._sum.dispose();\n\t\treturn this;\n\t}\n}\n","import { InputNode, OutputNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n\ntype BasicEnvelopeCurve = \"linear\" | \"exponential\";\ntype InternalEnvelopeCurve = BasicEnvelopeCurve | number[];\nexport type EnvelopeCurve = EnvelopeCurveName | number[];\n\nexport interface EnvelopeOptions extends ToneAudioNodeOptions {\n\tattack: Time;\n\tdecay: Time;\n\tsustain: NormalRange;\n\trelease: Time;\n\tattackCurve: EnvelopeCurve;\n\treleaseCurve: EnvelopeCurve;\n\tdecayCurve: BasicEnvelopeCurve;\n}\n\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode<EnvelopeOptions> {\n\n\treadonly name: string = \"Envelope\";\n\n\t/**\n\t * When triggerAttack is called, the attack time is the amount of\n\t * time it takes for the envelope to reach it's maximum value.\n\t * ```\n\t *           /\\\n\t *          /X \\\n\t *         /XX  \\\n\t *        /XXX   \\\n\t *       /XXXX    \\___________\n\t *      /XXXXX                \\\n\t *     /XXXXXX                 \\\n\t *    /XXXXXXX                  \\\n\t *   /XXXXXXXX                   \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * After the attack portion of the envelope, the value will fall\n\t * over the duration of the decay time to it's sustain value.\n\t * ```\n\t *           /\\\n\t *          / X\\\n\t *         /  XX\\\n\t *        /   XXX\\\n\t *       /    XXXX\\___________\n\t *      /     XXXXX           \\\n\t *     /      XXXXX            \\\n\t *    /       XXXXX             \\\n\t *   /        XXXXX              \\\n\t * ```\n\t * @min 0\n\t * @max 2\n\t */\n\t@timeRange(0)\n\tdecay: Time;\n\n\t/**\n\t * The sustain value is the value\n\t * which the envelope rests at after triggerAttack is\n\t * called, but before triggerRelease is invoked.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /          XXXXXXXXXXX\\\n\t *     /           XXXXXXXXXXX \\\n\t *    /            XXXXXXXXXXX  \\\n\t *   /             XXXXXXXXXXX   \\\n\t * ```\n\t */\n\t@range(0, 1)\n\tsustain: NormalRange;\n\n\t/**\n\t * After triggerRelease is called, the envelope's\n\t * value will fall to it's miminum value over the\n\t * duration of the release time.\n\t * ```\n\t *           /\\\n\t *          /  \\\n\t *         /    \\\n\t *        /      \\\n\t *       /        \\___________\n\t *      /                    X\\\n\t *     /                     XX\\\n\t *    /                      XXX\\\n\t *   /                       XXXX\\\n\t * ```\n\t * @min 0\n\t * @max 5\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The automation curve type for the attack\n\t */\n\tprivate _attackCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the decay\n\t */\n\tprivate _decayCurve!: BasicEnvelopeCurve;\n\n\t/**\n\t * The automation curve type for the release\n\t */\n\tprivate _releaseCurve!: InternalEnvelopeCurve;\n\n\t/**\n\t * the signal which is output.\n\t */\n\tprotected _sig: Signal<\"normalRange\"> = new Signal({\n\t\tcontext: this.context,\n\t\tvalue: 0,\n\t});\n\n\t/**\n\t * The output signal of the envelope\n\t */\n\toutput: OutputNode = this._sig;\n\n\t/**\n\t * Envelope has no input\n\t */\n\tinput: InputNode | undefined = undefined;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from\n\t *                        0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tconst options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n\n\t\tthis.attack = options.attack;\n\t\tthis.decay = options.decay;\n\t\tthis.sustain = options.sustain;\n\t\tthis.release = options.release;\n\t\tthis.attackCurve = options.attackCurve;\n\t\tthis.releaseCurve = options.releaseCurve;\n\t\tthis.decayCurve = options.decayCurve;\n\t}\n\n\tstatic getDefaults(): EnvelopeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tattack: 0.01,\n\t\t\tattackCurve: \"linear\" as EnvelopeCurveName,\n\t\t\tdecay: 0.1,\n\t\t\tdecayCurve: \"exponential\" as BasicEnvelopeCurve,\n\t\t\trelease: 1,\n\t\t\treleaseCurve: \"exponential\" as EnvelopeCurveName,\n\t\t\tsustain: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * Read the current value of the envelope. Useful for\n\t * synchronizing visual output to the envelope.\n\t */\n\tget value(): NormalRange {\n\t\treturn this.getValueAtTime(this.now());\n\t}\n\n\t/**\n\t * Get the curve\n\t * @param  curve\n\t * @param  direction  In/Out\n\t * @return The curve name\n\t */\n\tprivate _getCurve(curve: InternalEnvelopeCurve, direction: EnvelopeDirection): EnvelopeCurve {\n\t\tif (isString(curve)) {\n\t\t\treturn curve;\n\t\t} else {\n\t\t\t// look up the name in the curves array\n\t\t\tlet curveName: EnvelopeCurveName;\n\t\t\tfor (curveName in EnvelopeCurves) {\n\t\t\t\tif (EnvelopeCurves[curveName][direction] === curve) {\n\t\t\t\t\treturn curveName;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return the custom curve\n\t\t\treturn curve;\n\t\t}\n\t}\n\n\t/**\n\t * Assign a the curve to the given name using the direction\n\t * @param  name\n\t * @param  direction In/Out\n\t * @param  curve\n\t */\n\tprivate _setCurve(\n\t\tname: \"_attackCurve\" | \"_decayCurve\" | \"_releaseCurve\",\n\t\tdirection: EnvelopeDirection,\n\t\tcurve: EnvelopeCurve,\n\t): void {\n\t\t// check if it's a valid type\n\t\tif (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n\t\t\tconst curveDef = EnvelopeCurves[curve];\n\t\t\tif (isObject(curveDef)) {\n\t\t\t\tif (name !== \"_decayCurve\") {\n\t\t\t\t\tthis[name] = curveDef[direction];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis[name] = curveDef;\n\t\t\t}\n\t\t} else if (isArray(curve) && name !== \"_decayCurve\") {\n\t\t\tthis[name] = curve;\n\t\t} else {\n\t\t\tthrow new Error(\"Envelope: invalid curve: \" + curve);\n\t\t}\n\t}\n\n\t/**\n\t * The shape of the attack.\n\t * Can be any of these strings:\n\t * * \"linear\"\n\t * * \"exponential\"\n\t * * \"sine\"\n\t * * \"cosine\"\n\t * * \"bounce\"\n\t * * \"ripple\"\n\t * * \"step\"\n\t *\n\t * Can also be an array which describes the curve. Values\n\t * in the array are evenly subdivided and linearly\n\t * interpolated over the duration of the attack.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope(0.4).toDestination();\n\t * \tenv.attackCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget attackCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t}\n\tset attackCurve(curve) {\n\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t}\n\n\t/**\n\t * The shape of the release. See the attack curve types.\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\trelease: 0.8\n\t * \t}).toDestination();\n\t * \tenv.triggerAttack();\n\t * \t// release curve could also be defined by an array\n\t * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n\t * \tenv.triggerRelease(0.2);\n\t * }, 1, 1);\n\t */\n\tget releaseCurve(): EnvelopeCurve {\n\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t}\n\tset releaseCurve(curve) {\n\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t}\n\n\t/**\n\t * The shape of the decay either \"linear\" or \"exponential\"\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \tconst env = new Tone.Envelope({\n\t * \t\tsustain: 0.1,\n\t * \t\tdecay: 0.5\n\t * \t}).toDestination();\n\t * \tenv.decayCurve = \"linear\";\n\t * \tenv.triggerAttack();\n\t * }, 1, 1);\n\t */\n\tget decayCurve(): BasicEnvelopeCurve {\n\t\treturn this._decayCurve;\n\t}\n\tset decayCurve(curve) {\n\t\tassert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n\t\tthis._decayCurve = curve;\n\t}\n\n\t/**\n\t * Trigger the attack/decay portion of the ADSR envelope.\n\t * @param  time When the attack should start.\n\t * @param velocity The velocity of the envelope scales the vales.\n\t *                             number between 0-1\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t * env.triggerAttack(\"+0.5\", 0.2);\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tconst originalAttack = this.toSeconds(this.attack);\n\t\tlet attack = originalAttack;\n\t\tconst decay = this.toSeconds(this.decay);\n\t\t// check if it's not a complete attack\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\t// subtract the current value from the attack time\n\t\t\tconst attackRate = 1 / attack;\n\t\t\tconst remainingDistance = 1 - currentValue;\n\t\t\t// the attack is now the remaining time\n\t\t\tattack = remainingDistance / attackRate;\n\t\t}\n\t\t// attack\n\t\tif (attack < this.sampleTime) {\n\t\t\tthis._sig.cancelScheduledValues(time);\n\t\t\t// case where the attack time is 0 should set instantly\n\t\t\tthis._sig.setValueAtTime(velocity, time);\n\t\t} else if (this._attackCurve === \"linear\") {\n\t\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t\t} else if (this._attackCurve === \"exponential\") {\n\t\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t\t} else {\n\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\tlet curve = this._attackCurve;\n\t\t\t// find the starting position in the curve\n\t\t\tfor (let i = 1; i < curve.length; i++) {\n\t\t\t\t// the starting index is between the two values\n\t\t\t\tif (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n\t\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t\t// the first index is the current value\n\t\t\t\t\tcurve[0] = currentValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t}\n\t\t// decay\n\t\tif (decay && this.sustain < 1) {\n\t\t\tconst decayValue = velocity * this.sustain;\n\t\t\tconst decayStart = time + attack;\n\t\t\tthis.log(\"decay\", decayStart);\n\t\t\tif (this._decayCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n\t\t\t} else {\n\t\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Triggers the release of the envelope.\n\t * @param  time When the release portion of the envelope should start.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator({\n\t * \ttype: \"sawtooth\"\n\t * }).connect(env).start();\n\t * env.triggerAttack();\n\t * // trigger the release half a second after the attack\n\t * env.triggerRelease(\"+0.5\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tconst currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0) {\n\t\t\tconst release = this.toSeconds(this.release);\n\t\t\tif (release < this.sampleTime) {\n\t\t\t\tthis._sig.setValueAtTime(0, time);\n\t\t\t} else if (this._releaseCurve === \"linear\") {\n\t\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t\t} else if (this._releaseCurve === \"exponential\") {\n\t\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t\t} else {\n\t\t\t\tassert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\tthis._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the scheduled value at the given time. This will\n\t * return the unconverted (raw) value.\n\t * @example\n\t * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n\t * env.triggerAttackRelease(2);\n\t * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n\t */\n\tgetValueAtTime(time: Time): NormalRange {\n\t\treturn this._sig.getValueAtTime(time);\n\t}\n\n\t/**\n\t * triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t * some duration, then triggerRelease.\n\t * @param duration The duration of the sustain.\n\t * @param time When the attack should be triggered.\n\t * @param velocity The velocity of the envelope.\n\t * @example\n\t * const env = new Tone.AmplitudeEnvelope().toDestination();\n\t * const osc = new Tone.Oscillator().connect(env).start();\n\t * // trigger the release 0.5 seconds after the attack\n\t * env.triggerAttackRelease(0.5);\n\t */\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Cancels all scheduled envelope changes after the given time.\n\t */\n\tcancel(after?: Time): this {\n\t\tthis._sig.cancelScheduledValues(this.toSeconds(after));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Connect the envelope to a destination node.\n\t */\n\tconnect(destination: InputNode, outputNumber = 0, inputNumber = 0): this {\n\t\tconnectSignal(this, destination, outputNumber, inputNumber);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Render the envelope curve to an array of the given length. \n\t * Good for visualizing the envelope curve. Rescales the duration of the\n\t * envelope to fit the length.\n\t */\n\tasync asArray(length = 1024): Promise<Float32Array> {\n\t\tconst duration = length / this.context.sampleRate;\n\t\tconst context = new OfflineContext(1, duration, this.context.sampleRate);\n\t\t// normalize the ADSR for the given duration with 20% sustain time\n\t\tconst attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n\t\tconst envelopeDuration = attackPortion + this.toSeconds(this.release);\n\t\tconst sustainTime = envelopeDuration * 0.1;\n\t\tconst totalDuration = envelopeDuration + sustainTime;\n\t\t// @ts-ignore\n\t\tconst clone = new this.constructor(Object.assign(this.get(), {\n\t\t\tattack: duration * this.toSeconds(this.attack) / totalDuration,\n\t\t\tdecay: duration * this.toSeconds(this.decay) / totalDuration,\n\t\t\trelease: duration * this.toSeconds(this.release) / totalDuration,\n\t\t\tcontext\n\t\t})) as Envelope;\n\t\tclone._sig.toDestination();\n\t\tclone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n\t\tconst buffer = await context.render();\n\t\treturn buffer.getChannelData(0);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._sig.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface EnvelopeCurveObject {\n\tIn: number[];\n\tOut: number[];\n}\n\ntype EnvelopeDirection = keyof EnvelopeCurveObject;\n\ninterface EnvelopeCurveMap {\n\tlinear: \"linear\";\n\texponential: \"exponential\";\n\tbounce: EnvelopeCurveObject;\n\tcosine: EnvelopeCurveObject;\n\tsine: EnvelopeCurveObject;\n\tripple: EnvelopeCurveObject;\n\tstep: EnvelopeCurveObject;\n}\n\ntype EnvelopeCurveName = keyof EnvelopeCurveMap;\n\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves: EnvelopeCurveMap = (() => {\n\n\tconst curveLen = 128;\n\n\tlet i: number;\n\tlet k: number;\n\n\t// cosine curve\n\tconst cosineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t}\n\n\t// ripple curve\n\tconst rippleCurve: number[] = [];\n\tconst rippleCurveFreq = 6.4;\n\tfor (i = 0; i < curveLen - 1; i++) {\n\t\tk = (i / (curveLen - 1));\n\t\tconst sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\trippleCurve[i] = sineWave / 10 + k * 0.83;\n\t}\n\trippleCurve[curveLen - 1] = 1;\n\n\t// stairs curve\n\tconst stairsCurve: number[] = [];\n\tconst steps = 5;\n\tfor (i = 0; i < curveLen; i++) {\n\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t}\n\n\t// in-out easing curve\n\tconst sineCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t}\n\n\t// a bounce curve\n\tconst bounceCurve: number[] = [];\n\tfor (i = 0; i < curveLen; i++) {\n\t\tk = i / (curveLen - 1);\n\t\tconst freq = Math.pow(k, 3) * 4 + 0.2;\n\t\tconst val = Math.cos(freq * Math.PI * 2 * k);\n\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t}\n\n\t/**\n\t * Invert a value curve to make it work for the release\n\t */\n\tfunction invertCurve(curve: number[]): number[] {\n\t\tconst out = new Array(curve.length);\n\t\tfor (let j = 0; j < curve.length; j++) {\n\t\t\tout[j] = 1 - curve[j];\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t * reverse the curve\n\t */\n\tfunction reverseCurve(curve: number[]): number[] {\n\t\treturn curve.slice(0).reverse();\n\t}\n\n\t/**\n\t * attack and release curve arrays\n\t */\n\treturn {\n\t\tbounce: {\n\t\t\tIn: invertCurve(bounceCurve),\n\t\t\tOut: bounceCurve,\n\t\t},\n\t\tcosine: {\n\t\t\tIn: cosineCurve,\n\t\t\tOut: reverseCurve(cosineCurve),\n\t\t},\n\t\texponential: \"exponential\" as \"exponential\",\n\t\tlinear: \"linear\" as \"linear\",\n\t\tripple: {\n\t\t\tIn: rippleCurve,\n\t\t\tOut: invertCurve(rippleCurve),\n\t\t},\n\t\tsine: {\n\t\t\tIn: sineCurve,\n\t\t\tOut: invertCurve(sineCurve),\n\t\t},\n\t\tstep: {\n\t\t\tIn: stairsCurve,\n\t\t\tOut: invertCurve(stairsCurve),\n\t\t},\n\t};\n})();\n","import { Volume } from \"../component/channel/Volume\";\nimport { Param } from \"../core/context/Param\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Decibels, Frequency, NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface InstrumentOptions extends ToneAudioNodeOptions {\n\tvolume: Decibels;\n}\n\n/**\n * Base-class for all instruments\n */\nexport abstract class Instrument<Options extends InstrumentOptions> extends ToneAudioNode<Options> {\n\n\t/**\n\t * The output and volume triming node\n\t */\n\tprivate _volume: Volume;\n\toutput: OutputNode;\n\n\t/**\n\t * The instrument only has an output\n\t */\n\tinput: undefined;\n\n\t/**\n\t * The volume of the output in decibels.\n\t * @example\n\t * const amSynth = new Tone.AMSynth().toDestination();\n\t * amSynth.volume.value = -6;\n\t * amSynth.triggerAttackRelease(\"G#3\", 0.2);\n\t */\n\tvolume: Param<\"decibels\">;\n\n\t/**\n\t * Keep track of all events scheduled to the transport\n\t * when the instrument is 'synced'\n\t */\n\tprivate _scheduledEvents: number[] = [];\n\n\t/**\n\t * If the instrument is currently synced\n\t */\n\tprivate _synced = false;\n\n\tconstructor(options?: Partial<InstrumentOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Instrument.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Instrument.getDefaults(), arguments);\n\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\t\treadOnly(this, \"volume\");\n\t}\n\n\tstatic getDefaults(): InstrumentOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tvolume: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Sync the instrument to the Transport. All subsequent calls of\n\t * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n\t * @example\n\t * const fmSynth = new Tone.FMSynth().toDestination();\n\t * fmSynth.volume.value = -6;\n\t * fmSynth.sync();\n\t * // schedule 3 notes when the transport first starts\n\t * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n\t * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n\t * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n\t * // start the transport to hear the notes\n\t * Tone.Transport.start();\n\t */\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * set _sync\n\t */\n\tprotected _syncState(): boolean {\n\t\tlet changed = false;\n\t\tif (!this._synced) {\n\t\t\tthis._synced = true;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Wrap the given method so that it can be synchronized\n\t * @param method Which method to wrap and sync\n\t * @param  timePosition What position the time argument appears in\n\t */\n\tprotected _syncMethod(method: string, timePosition: number): void {\n\t\tconst originalMethod = this[\"_original_\" + method] = this[method];\n\t\tthis[method] = (...args: any[]) => {\n\t\t\tconst time = args[timePosition];\n\t\t\tconst id = this.context.transport.schedule((t) => {\n\t\t\t\targs[timePosition] = t;\n\t\t\t\toriginalMethod.apply(this, args);\n\t\t\t}, time);\n\t\t\tthis._scheduledEvents.push(id);\n\t\t};\n\t}\n\n\t/**\n\t * Unsync the instrument from the Transport\n\t */\n\tunsync(): this {\n\t\tthis._scheduledEvents.forEach(id => this.context.transport.clear(id));\n\t\tthis._scheduledEvents = [];\n\t\tif (this._synced) {\n\t\t\tthis._synced = false;\n\t\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\t\tthis.triggerRelease = this._original_triggerRelease;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the attack and then the release after the duration.\n\t * @param  note     The note to trigger.\n\t * @param  duration How long the note should be held for before\n\t *                         triggering the release. This value must be greater than 0.\n\t * @param time  When the note should be triggered.\n\t * @param  velocity The velocity the note should be triggered at.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger \"C4\" for the duration of an 8th note\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\ttriggerAttackRelease(note: Frequency, duration: Time, time?: Time, velocity?: NormalRange): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedDuration = this.toSeconds(duration);\n\t\tthis.triggerAttack(note, computedTime, velocity);\n\t\tthis.triggerRelease(computedTime + computedDuration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the instrument's note.\n\t * @param note the note to trigger\n\t * @param time the time to trigger the ntoe\n\t * @param velocity the velocity to trigger the note (betwee 0-1)\n\t */\n\tabstract triggerAttack(note: Frequency, time?: Time, velocity?: NormalRange): this;\n\tprivate _original_triggerAttack = this.triggerAttack;\n\n\t/**\n\t * Trigger the release phase of the current note.\n\t * @param time when to trigger the release\n\t */\n\tabstract triggerRelease(...args: any[]): this;\n\tprivate _original_triggerRelease = this.triggerRelease;\n\n\t/**\n\t * clean up\n\t * @returns {Instrument} this\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.unsync();\n\t\tthis._scheduledEvents = [];\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Cents, Frequency, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { Signal } from \"../signal/Signal\";\nimport { timeRange } from \"../core/util/Decorator\";\n\ntype onSilenceCallback = (instrument: Monophonic<any>) => void;\n\nexport interface MonophonicOptions extends InstrumentOptions {\n\tportamento: Seconds;\n\tonsilence: onSilenceCallback;\n\tdetune: Cents;\n}\n\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport abstract class Monophonic<Options extends MonophonicOptions> extends Instrument<Options> {\n\n\t/**\n\t * The glide time between notes.\n\t */\n\t@timeRange(0)\n\tportamento: Seconds;\n\n\t/**\n\t * Invoked when the release has finished and the output is silent.\n\t */\n\tonsilence: onSilenceCallback;\n\n\t/**\n\t * The instrument's frequency signal.\n\t */\n\tabstract readonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The instrument's detune control signal.\n\t */\n\tabstract readonly detune: Signal<\"cents\">;\n\n\tconstructor(options?: Partial<MonophonicOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Monophonic.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n\n\t\tthis.portamento = options.portamento;\n\t\tthis.onsilence = options.onsilence;\n\t}\n\n\tstatic getDefaults(): MonophonicOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tdetune: 0,\n\t\t\tonsilence: noOp,\n\t\t\tportamento: 0,\n\t\t});\n\t}\n\n\t/**\n\t * Trigger the attack of the note optionally with a given velocity.\n\t * @param  note The note to trigger.\n\t * @param  time When the note should start.\n\t * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * // trigger the note a half second from now at half velocity\n\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t */\n\ttriggerAttack(note: Frequency | FrequencyClass, time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", note, time, velocity);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeAttack(seconds, velocity);\n\t\tthis.setNote(note, seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Trigger the release portion of the envelope\n\t * @param  time If no time is given, the release happens immediatly\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // trigger the release a second from now\n\t * synth.triggerRelease(\"+1\");\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\tthis.log(\"triggerRelease\", time);\n\t\tconst seconds = this.toSeconds(time);\n\t\tthis._triggerEnvelopeRelease(seconds);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Internal method which starts the envelope attack\n\t */\n\tprotected abstract _triggerEnvelopeAttack(time: Seconds, velocity: NormalRange): void;\n\n\t/**\n\t * Internal method which starts the envelope release\n\t */\n\tprotected abstract _triggerEnvelopeRelease(time: Seconds): void;\n\n\t/**\n\t * Get the level of the output at the given time. Measures\n\t * the envelope(s) value at the time.\n\t * @param time The time to query the envelope value\n\t * @return The output level between 0-1\n\t */\n\tabstract getLevelAtTime(time: Time): NormalRange;\n\n\t/**\n\t * Set the note at the given time. If no time is given, the note\n\t * will set immediately.\n\t * @param note The note to change to.\n\t * @param  time The time when the note should be set.\n\t * @example\n\t * const synth = new Tone.Synth().toDestination();\n\t * synth.triggerAttack(\"C4\");\n\t * // change to F#6 in one quarter note from now.\n\t * synth.setNote(\"F#6\", \"+4n\");\n\t */\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tconst computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n\t\tif (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n\t\t\tconst portTime = this.toSeconds(this.portamento);\n\t\t\tthis.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n\t\t} else {\n\t\t\tthis.frequency.setValueAtTime(computedFrequency, computedTime);\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope, EnvelopeOptions } from \"./Envelope\";\n\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n\n\treadonly name: string = \"AmplitudeEnvelope\";\n\n\tprivate _gainNode: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\toutput: Gain = this._gainNode;\n\tinput: Gain = this._gainNode;\n\n\t/**\n\t * @param attack The amount of time it takes for the envelope to go from 0 to it's maximum value.\n\t * @param decay\tThe period of time after the attack that it takes for the envelope\n\t *                      \tto fall to the sustain value. Value must be greater than 0.\n\t * @param sustain\tThe percent of the maximum value that the envelope rests at until\n\t *                               \tthe release is triggered.\n\t * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                        \tValue must be greater than 0.\n\t */\n\tconstructor(attack?: Time, decay?: Time, sustain?: NormalRange, release?: Time);\n\tconstructor(options?: Partial<EnvelopeOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n\t\tthis._sig.connect(this._gainNode.gain);\n\t\tthis.output = this._gainNode;\n\t\tthis.input = this._gainNode;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._gainNode.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { OmniOscillatorOptions, OmniOscillatorSynthOptions } from \"../source/oscillator/OscillatorInterface\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic, MonophonicOptions } from \"./Monophonic\";\n\nexport interface SynthOptions extends MonophonicOptions {\n\toscillator: OmniOscillatorSynthOptions;\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth<Options extends SynthOptions = SynthOptions> extends Monophonic<Options> {\n\n\treadonly name: string = \"Synth\";\n\n\t/**\n\t * The oscillator.\n\t */\n\treadonly oscillator: OmniOscillator<any>;\n\n\t/**\n\t * The frequency signal\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The detune signal\n\t */\n\treadonly detune: Signal<\"cents\">;\n\n\t/**\n\t * The envelope\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\t/**\n\t * @param options the options available for the synth.\n\t */\n\tconstructor(options?: RecursivePartial<SynthOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Synth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(Synth.getDefaults(), arguments);\n\n\t\tthis.oscillator = new OmniOscillator(Object.assign({\n\t\t\tcontext: this.context,\n\t\t\tdetune: options.detune,\n\t\t\tonstop: () => this.onsilence(this),\n\t\t}, options.oscillator));\n\n\t\tthis.frequency = this.oscillator.frequency;\n\t\tthis.detune = this.oscillator.detune;\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the oscillators to the output\n\t\tthis.oscillator.chain(this.envelope, this.output);\n\t\treadOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): SynthOptions {\n\t\treturn Object.assign(Monophonic.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tattack: 0.005,\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\trelease: 1,\n\t\t\t\t\tsustain: 0.3,\n\t\t\t\t},\n\t\t\t),\n\t\t\toscillator: Object.assign(\n\t\t\t\tomitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]),\n\t\t\t\t{\n\t\t\t\t\ttype: \"triangle\",\n\t\t\t\t},\n\t\t\t) as OmniOscillatorOptions,\n\t\t});\n\t}\n\n\t/**\n\t * start the attack portion of the envelope\n\t * @param time the time the attack should start\n\t * @param velocity the velocity of the note (0-1)\n\t */\n\tprotected _triggerEnvelopeAttack(time: Seconds, velocity: number): void {\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.oscillator.start(time);\n\t\t// if there is no release portion, stop the oscillator\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tconst computedAttack = this.toSeconds(this.envelope.attack);\n\t\t\tconst computedDecay = this.toSeconds(this.envelope.decay);\n\t\t\tthis.oscillator.stop(time + computedAttack + computedDecay);\n\t\t}\n\t}\n\n\t/**\n\t * start the release portion of the envelope\n\t * @param time the time the release should start\n\t */\n\tprotected _triggerEnvelopeRelease(time: Seconds): void {\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.toSeconds(this.envelope.release));\n\t}\n\n\tgetLevelAtTime(time: Time): NormalRange {\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.oscillator.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","import { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Positive, Time } from \"../core/type/Units\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth, SynthOptions } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n\nexport interface MembraneSynthOptions extends SynthOptions {\n\tpitchDecay: Time;\n\toctaves: Positive;\n}\n\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth<MembraneSynthOptions> {\n\n\treadonly name: string = \"MembraneSynth\";\n\n\t/**\n\t * The number of octaves the pitch envelope ramps.\n\t * @min 0.5\n\t * @max 8\n\t */\n\t@range(0)\n\toctaves: Positive;\n\n\t/**\n\t * The amount of time the frequency envelope takes.\n\t * @min 0\n\t * @max 0.5\n\t */\n\t@timeRange(0)\n\tpitchDecay: Time;\n\n\t/**\n\t * Portamento is ignored in this synth. use pitch decay instead.\n\t */\n\treadonly portamento = 0;\n\n\t/**\n\t * @param options the options available for the synth see defaults\n\t */\n\tconstructor(options?: RecursivePartial<MembraneSynthOptions>)\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n\n\t\tthis.pitchDecay = options.pitchDecay;\n\t\tthis.octaves = options.octaves;\n\t\treadOnly(this, [\"oscillator\", \"envelope\"]);\n\t}\n\n\tstatic getDefaults(): MembraneSynthOptions {\n\t\treturn deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n\t\t\tenvelope: {\n\t\t\t\tattack: 0.001,\n\t\t\t\tattackCurve: \"exponential\",\n\t\t\t\tdecay: 0.4,\n\t\t\t\trelease: 1.4,\n\t\t\t\tsustain: 0.01,\n\t\t\t},\n\t\t\toctaves: 10,\n\t\t\toscillator: {\n\t\t\t\ttype: \"sine\",\n\t\t\t},\n\t\t\tpitchDecay: 0.05,\n\t\t});\n\t}\n\n\tsetNote(note: Frequency | FrequencyClass, time?: Time): this {\n\t\tconst seconds = this.toSeconds(time);\n\t\tconst hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n\t\tconst maxNote = hertz * this.octaves;\n\t\tthis.oscillator.frequency.setValueAtTime(maxNote, seconds);\n\t\tthis.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\treturn this;\n\t}\n}\n","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { RecursivePartial } from \"../core/util/Interface\";\nimport { Noise, NoiseOptions } from \"../source/Noise\";\nimport { Instrument, InstrumentOptions } from \"./Instrument\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { Envelope, EnvelopeOptions } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n\nexport interface NoiseSynthOptions extends InstrumentOptions {\n\tenvelope: Omit<EnvelopeOptions, keyof ToneAudioNodeOptions>;\n\tnoise: Omit<NoiseOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]]. \n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nexport class NoiseSynth extends Instrument<NoiseSynthOptions> {\n\n\treadonly name = \"NoiseSynth\";\n\n\t/**\n\t * The noise source.\n\t */\n\treadonly noise: Noise;\n\n\t/**\n\t * The amplitude envelope.\n\t */\n\treadonly envelope: AmplitudeEnvelope;\n\n\tconstructor(options?: RecursivePartial<NoiseSynthOptions>)\n\tconstructor() {\n\t\tsuper(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n\t\tthis.noise = new Noise(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.noise));\n\n\t\tthis.envelope = new AmplitudeEnvelope(Object.assign({\n\t\t\tcontext: this.context,\n\t\t}, options.envelope));\n\n\t\t// connect the noise to the output\n\t\tthis.noise.chain(this.envelope, this.output);\n\t}\n\n\tstatic getDefaults(): NoiseSynthOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tenvelope: Object.assign(\n\t\t\t\tomitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\tdecay: 0.1,\n\t\t\t\t\tsustain: 0.0,\n\t\t\t\t},\n\t\t\t),\n\t\t\tnoise: Object.assign(\n\t\t\t\tomitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())),\n\t\t\t\t{\n\t\t\t\t\ttype: \"white\",\n\t\t\t\t},\n\t\t\t),\n\t\t});\n\t}\n\n\t/**\n\t * Start the attack portion of the envelopes. Unlike other\n\t * instruments, Tone.NoiseSynth doesn't have a note.\n\t * @example\n\t * const noiseSynth = new Tone.NoiseSynth().toDestination();\n\t * noiseSynth.triggerAttack();\n\t */\n\ttriggerAttack(time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\t// the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t// start the noise\n\t\tthis.noise.start(time);\n\t\tif (this.envelope.sustain === 0) {\n\t\t\tthis.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Start the release portion of the envelopes.\n\t */\n\ttriggerRelease(time?: Time): this {\n\t\ttime = this.toSeconds(time);\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.noise.stop(time + this.toSeconds(this.envelope.release));\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 0);\n\t\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\t}\n\t\treturn this;\n\t}\n\n\ttriggerAttackRelease(duration: Time, time?: Time, velocity: NormalRange = 1): this {\n\t\ttime = this.toSeconds(time);\n\t\tduration = this.toSeconds(duration);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + duration);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.noise.dispose();\n\t\tthis.envelope.dispose();\n\t\treturn this;\n\t}\n}\n","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext: Set<string> = new Set();\n\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction: string) {\n\tworkletContext.add(classOrFunction);\n}\n\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name: string, classDesc: string) {\n\tconst processor = /* javascript */`registerProcessor(\"${name}\", ${classDesc})`;\n\tworkletContext.add(processor);\n}\n\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope(): string {\n\treturn Array.from(workletContext).join(\"\\n\");\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\n\nexport type ToneAudioWorkletOptions = ToneAudioNodeOptions;\n\nexport abstract class ToneAudioWorklet<Options extends ToneAudioWorkletOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"ToneAudioWorklet\";\n\n\t/**\n\t * The processing node\n\t */\n\tprotected _worklet!: AudioWorkletNode;\n\n\t/**\n\t * A dummy gain node to create a dummy audio param from\n\t */\n\tprivate _dummyGain: GainNode;\n\n\t/**\n\t * A dummy audio param to use when creating Params\n\t */\n\tprotected _dummyParam: AudioParam;\n\n\t/**\n\t * The constructor options for the node\n\t */\n\tprotected workletOptions: Partial<AudioWorkletNodeOptions> = {};\n\n\t/**\n\t * Get the name of the audio worklet\n\t */\n\tprotected abstract _audioWorkletName(): string;\n\n\t/**\n\t * Invoked when the module is loaded and the node is created\n\t */\n\tprotected abstract onReady(node: AudioWorkletNode): void;\n\n\t/**\n\t * Callback which is invoked when there is an error in the processing\n\t */\n\tonprocessorerror: (e: string) => void = noOp;\n\n\tconstructor(options: Options) {\n\t\tsuper(options);\n\n\t\tconst blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n\t\tconst name = this._audioWorkletName();\n\n\t\tthis._dummyGain = this.context.createGain();\n\t\tthis._dummyParam = this._dummyGain.gain;\n\n\t\t// Register the processor\n\t\tthis.context.addAudioWorkletModule(blobUrl, name).then(() => {\n\t\t\t// create the worklet when it's read\n\t\t\tif (!this.disposed) {\n\t\t\t\tthis._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n\t\t\t\tthis._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n\t\t\t\tthis.onReady(this._worklet);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dummyGain.disconnect();\n\t\tif (this._worklet) {\n\t\t\tthis._worklet.port.postMessage(\"dispose\");\n\t\t\tthis._worklet.disconnect();\n\t\t}\n\t\treturn this;\n\t}\n\n}\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n\naddToWorklet(toneAudioWorkletProcessor);\n","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\n\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\n\naddToWorklet(singleIOProcess);\n","import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\n\naddToWorklet(delayLine);\n","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"feedback-comb-filter\";\n\nconst feedbackCombFilter = /* javascript */`\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, feedbackCombFilter);\n","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange, Time } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n\nexport interface FeedbackCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n}\n\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n * \n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the \n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the \n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode. \n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet<FeedbackCombFilterOptions> {\n\n\treadonly name = \"FeedbackCombFilter\";\n\n\t/**\n\t * The amount of delay of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param delayTime The delay time of the filter.\n\t * @param resonance The amount of feedback the filter has.\n\t */\n\tconstructor(delayTime?: Time, resonance?: NormalRange);\n\tconstructor(options?: RecursivePartial<FeedbackCombFilterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n\t\tconst options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.delayTime = new Param<\"time\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.delayTime,\n\t\t\tunits: \"time\",\n\t\t\tminValue: 0,\n\t\t\tmaxValue: 1,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\tthis.resonance = new Param<\"normalRange\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.resonance,\n\t\t\tunits: \"normalRange\",\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\n\t\treadOnly(this, [\"resonance\", \"delayTime\"]);\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\t/**\n\t * The default parameters\n\t */\n\tstatic getDefaults(): FeedbackCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst delayTime = node.parameters.get(\"delayTime\") as AudioParam;;\n\t\tthis.delayTime.setParam(delayTime);\n\t\tconst feedback = node.parameters.get(\"feedback\") as AudioParam;;\n\t\tthis.resonance.setParam(feedback);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.delayTime.dispose();\n\t\tthis.resonance.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { Frequency, Interval, MidiNote, NormalRange, Note, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument, InstrumentOptions } from \"../instrument/Instrument\";\nimport { ToneBufferSource, ToneBufferSourceCurve } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n\ninterface SamplesMap {\n\t[note: string]: ToneAudioBuffer | AudioBuffer | string;\n\t[midi: number]: ToneAudioBuffer | AudioBuffer | string;\n}\n\nexport interface SamplerOptions extends InstrumentOptions {\n\tattack: Time;\n\trelease: Time;\n\tonload: () => void;\n\tonerror: (error: Error) => void;\n\tbaseUrl: string;\n\tcurve: ToneBufferSourceCurve;\n\turls: SamplesMap;\n}\n\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument<SamplerOptions> {\n\n\treadonly name: string = \"Sampler\";\n\n\t/**\n\t * The stored and loaded buffers\n\t */\n\tprivate _buffers: ToneAudioBuffers;\n\n\t/**\n\t * The object of all currently playing BufferSources\n\t */\n\tprivate _activeSources: Map<MidiNote, ToneBufferSource[]> = new Map();\n\n\t/**\n\t * The envelope applied to the beginning of the sample.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\tattack: Time;\n\n\t/**\n\t * The envelope applied to the end of the envelope.\n\t * @min 0\n\t * @max 1\n\t */\n\t@timeRange(0)\n\trelease: Time;\n\n\t/**\n\t * The shape of the attack/release curve.\n\t * Either \"linear\" or \"exponential\"\n\t */\n\tcurve: ToneBufferSourceCurve;\n\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param onload The callback to invoke when all of the samples are loaded.\n\t * @param baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n\t */\n\tconstructor(samples?: SamplesMap, onload?: () => void, baseUrl?: string);\n\t/**\n\t * @param samples An object of samples mapping either Midi Note Numbers or\n\t * \t\t\tScientific Pitch Notation to the url of that sample.\n\t * @param options The remaining options associated with the sampler\n\t */\n\tconstructor(samples?: SamplesMap, options?: Partial<Omit<SamplerOptions, \"urls\">>);\n\tconstructor(options?: Partial<SamplerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n\t\tconst options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n\n\t\tconst urlMap = {};\n\t\tObject.keys(options.urls).forEach((note) => {\n\t\t\tconst noteNumber = parseInt(note, 10);\n\t\t\tassert(isNote(note)\n\t\t\t\t|| (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n\t\t\tif (isNote(note)) {\n\t\t\t\t// convert the note name to MIDI\n\t\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\t\turlMap[mid] = options.urls[note];\n\t\t\t} else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n\t\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\t\turlMap[noteNumber] = options.urls[noteNumber];\n\t\t\t}\n\t\t});\n\n\t\tthis._buffers = new ToneAudioBuffers({\n\t\t\turls: urlMap,\n\t\t\tonload: options.onload,\n\t\t\tbaseUrl: options.baseUrl,\n\t\t\tonerror: options.onerror,\n\t\t});\n\t\tthis.attack = options.attack;\n\t\tthis.release = options.release;\n\t\tthis.curve = options.curve;\n\n\t\t// invoke the callback if it's already loaded\n\t\tif (this._buffers.loaded) {\n\t\t\t// invoke onload deferred\n\t\t\tPromise.resolve().then(options.onload);\n\t\t}\n\t}\n\n\tstatic getDefaults(): SamplerOptions {\n\t\treturn Object.assign(Instrument.getDefaults(), {\n\t\t\tattack: 0,\n\t\t\tbaseUrl: \"\",\n\t\t\tcurve: \"exponential\" as \"exponential\",\n\t\t\tonload: noOp,\n\t\t\tonerror: noOp,\n\t\t\trelease: 0.1,\n\t\t\turls: {},\n\t\t});\n\t}\n\n\t/**\n\t * Returns the difference in steps between the given midi note at the closets sample.\n\t */\n\tprivate _findClosest(midi: MidiNote): Interval {\n\t\t// searches within 8 octaves of the given midi note\n\t\tconst MAX_INTERVAL = 96;\n\t\tlet interval = 0;\n\t\twhile (interval < MAX_INTERVAL) {\n\t\t\t// check above and below\n\t\t\tif (this._buffers.has(midi + interval)) {\n\t\t\t\treturn -interval;\n\t\t\t} else if (this._buffers.has(midi - interval)) {\n\t\t\t\treturn interval;\n\t\t\t}\n\t\t\tinterval++;\n\t\t}\n\t\tthrow new Error(`No available buffers for note: ${midi}`);\n\t}\n\n\t/**\n\t * @param  notes\tThe note to play, or an array of notes.\n\t * @param  time     When to play the note\n\t * @param  velocity The velocity to play the sample back.\n\t */\n\ttriggerAttack(notes: Frequency | Frequency[], time?: Time, velocity: NormalRange = 1): this {\n\t\tthis.log(\"triggerAttack\", notes, time, velocity);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n\t\t\tconst midi = Math.round(midiFloat) as MidiNote;\n\t\t\tconst remainder = midiFloat - midi;\n\t\t\t// find the closest note pitch\n\t\t\tconst difference = this._findClosest(midi);\n\t\t\tconst closestNote = midi - difference;\n\t\t\tconst buffer = this._buffers.get(closestNote);\n\t\t\tconst playbackRate = intervalToFrequencyRatio(difference + remainder);\n\t\t\t// play that note\n\t\t\tconst source = new ToneBufferSource({\n\t\t\t\turl: buffer,\n\t\t\t\tcontext: this.context,\n\t\t\t\tcurve: this.curve,\n\t\t\t\tfadeIn: this.attack,\n\t\t\t\tfadeOut: this.release,\n\t\t\t\tplaybackRate,\n\t\t\t}).connect(this.output);\n\t\t\tsource.start(time, 0, buffer.duration / playbackRate, velocity);\n\t\t\t// add it to the active sources\n\t\t\tif (!isArray(this._activeSources.get(midi))) {\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t\t(this._activeSources.get(midi) as ToneBufferSource[]).push(source);\n\n\t\t\t// remove it when it's done\n\t\t\tsource.onended = () => {\n\t\t\t\tif (this._activeSources && this._activeSources.has(midi)) {\n\t\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\t\tconst index = sources.indexOf(source);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tsources.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param  notes\tThe note to release, or an array of notes.\n\t * @param  time     \tWhen to release the note.\n\t */\n\ttriggerRelease(notes: Frequency | Frequency[], time?: Time): this {\n\t\tthis.log(\"triggerRelease\", notes, time);\n\t\tif (!Array.isArray(notes)) {\n\t\t\tnotes = [notes];\n\t\t}\n\t\tnotes.forEach(note => {\n\t\t\tconst midi = new FrequencyClass(this.context, note).toMidi();\n\t\t\t// find the note\n\t\t\tif (this._activeSources.has(midi) && (this._activeSources.get(midi) as ToneBufferSource[]).length) {\n\t\t\t\tconst sources = this._activeSources.get(midi) as ToneBufferSource[];\n\t\t\t\ttime = this.toSeconds(time);\n\t\t\t\tsources.forEach(source => {\n\t\t\t\t\tsource.stop(time);\n\t\t\t\t});\n\t\t\t\tthis._activeSources.set(midi, []);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Release all currently active notes.\n\t * @param  time     \tWhen to release the notes.\n\t */\n\treleaseAll(time?: Time): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis._activeSources.forEach(sources => {\n\t\t\twhile (sources.length) {\n\t\t\t\tconst source = sources.shift() as ToneBufferSource;\n\t\t\t\tsource.stop(computedTime);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t}\n\n\tsync(): this {\n\t\tif (this._syncState()) {\n\t\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\t\tthis._syncMethod(\"triggerRelease\", 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Invoke the attack phase, then after the duration, invoke the release.\n\t * @param  notes\tThe note to play and release, or an array of notes.\n\t * @param  duration The time the note should be held\n\t * @param  time     When to start the attack\n\t * @param  velocity The velocity of the attack\n\t */\n\ttriggerAttackRelease(\n\t\tnotes: Frequency[] | Frequency,\n\t\tduration: Time | Time[],\n\t\ttime?: Time,\n\t\tvelocity: NormalRange = 1,\n\t): this {\n\t\tconst computedTime = this.toSeconds(time);\n\t\tthis.triggerAttack(notes, computedTime, velocity);\n\t\tif (isArray(duration)) {\n\t\t\tassert(isArray(notes), \"notes must be an array when duration is array\");\n\t\t\t(notes as Frequency[]).forEach((note, index) => {\n\t\t\t\tconst d = duration[Math.min(index, duration.length - 1)];\n\t\t\t\tthis.triggerRelease(note, computedTime + this.toSeconds(d));\n\t\t\t});\n\t\t} else {\n\t\t\tthis.triggerRelease(notes, computedTime + this.toSeconds(duration));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a note to the sampler.\n\t * @param  note      The buffer's pitch.\n\t * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n\t * @param  callback  The callback to invoke when the url is loaded.\n\t */\n\tadd(note: Note | MidiNote, url: string | ToneAudioBuffer | AudioBuffer, callback?: () => void): this {\n\t\tassert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n\t\tif (isNote(note)) {\n\t\t\t// convert the note name to MIDI\n\t\t\tconst mid = new FrequencyClass(this.context, note).toMidi();\n\t\t\tthis._buffers.add(mid, url, callback);\n\t\t} else {\n\t\t\t// otherwise if it's numbers assume it's midi\n\t\t\tthis._buffers.add(note, url, callback);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * If the buffers are loaded or not\n\t */\n\tget loaded(): boolean {\n\t\treturn this._buffers.loaded;\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._buffers.dispose();\n\t\tthis._activeSources.forEach(sources => {\n\t\t\tsources.forEach(source => source.dispose());\n\t\t});\n\t\tthis._activeSources.clear();\n\t\treturn this;\n\t}\n}\n","import { Loop, LoopOptions } from \"./Loop\";\nimport { PatternGenerator, PatternName } from \"./PatternGenerator\";\nimport { ToneEventCallback } from \"./ToneEvent\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Seconds } from \"../core/type/Units\";\nimport { noOp } from \"../core/util/Interface\";\n\nexport interface PatternOptions<ValueType> extends LoopOptions {\n\tpattern: PatternName;\n\tvalues: ValueType[];\n\tcallback: (time: Seconds, value?: ValueType) => void;\n}\n\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns. \n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nexport class Pattern<ValueType> extends Loop<PatternOptions<ValueType>> {\n\n\treadonly name: string = \"Pattern\";\n\n\t/**\n\t * The pattern generator function\n\t */\n\tprivate _pattern: Iterator<ValueType>;\n\n\t/**\n\t * The current value\n\t */\n\tprivate _value?: ValueType;\n\n\t/**\n\t * Hold the pattern type\n\t */\n\tprivate _type: PatternName;\n\n\t/**\n\t * Hold the values\n\t */\n\tprivate _values: ValueType[];\n\n\t/**\n\t * The callback to be invoked at a regular interval\n\t */\n\tcallback: (time: Seconds, value?: ValueType) => void;\n\n\t/**\n\t * @param  callback The callback to invoke with the event.\n\t * @param  values The values to arpeggiate over.\n\t * @param  pattern  The name of the pattern\n\t */\n\tconstructor(\n\t\tcallback?: ToneEventCallback<ValueType>,\n\t\tvalues?: ValueType[],\n\t\tpattern?: PatternName,\n\t);\n\tconstructor(options?: Partial<PatternOptions<ValueType>>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]));\n\t\tconst options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n\n\t\tthis.callback = options.callback;\n\t\tthis._values = options.values;\n\t\tthis._pattern = PatternGenerator(options.values, options.pattern);\n\t\tthis._type = options.pattern;\n\t}\n\n\tstatic getDefaults(): PatternOptions<any> {\n\t\treturn Object.assign(Loop.getDefaults(), {\n\t\t\tpattern: \"up\" as \"up\",\n\t\t\tvalues: [],\n\t\t\tcallback: noOp,\n\t\t});\n\t}\n\n\t/**\n\t * Internal function called when the notes should be called\n\t */\n\tprotected _tick(time: Seconds): void {\n\t\tconst value = this._pattern.next() as IteratorResult<ValueType>;\n\t\tthis._value = value.value;\n\t\tthis.callback(time, this._value);\n\t}\n\n\t/**\n\t * The array of events.\n\t */\n\tget values(): ValueType[] {\n\t\treturn this._values;\n\t}\n\tset values(val) {\n\t\tthis._values = val;\n\t\t// reset the pattern\n\t\tthis.pattern = this._type;\n\t}\n\n\t/**\n\t * The current value of the pattern.\n\t */\n\tget value(): ValueType | undefined {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n\t */\n\tget pattern(): PatternName {\n\t\treturn this._type;\n\t}\n\tset pattern(pattern) {\n\t\tthis._type = pattern;\n\t\tthis._pattern = PatternGenerator(this._values, this._type);\n\t}\n}\n\n","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n\ninterface CrossFadeOptions extends ToneAudioNodeOptions {\n\tfade: NormalRange;\n}\n\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode<CrossFadeOptions> {\n\n\treadonly name: string = \"CrossFade\";\n\n\t/**\n\t * The crossfading is done by a StereoPannerNode\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\n\t/**\n\t * Split the output of the panner node into two values used to control the gains.\n\t */\n\tprivate _split: ChannelSplitterNode = this.context.createChannelSplitter(2);\n\n\t/**\n\t * Convert the fade value into an audio range value so it can be connected\n\t * to the panner.pan AudioParam\n\t */\n\tprivate _g2a: GainToAudio = new GainToAudio({ context: this.context });\n\n\t/**\n\t * The input which is at full level when fade = 0\n\t */\n\treadonly a: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The input which is at full level when fade = 1\n\t */\n\treadonly b: Gain = new Gain({\n\t\tcontext: this.context,\n\t\tgain: 0,\n\t});\n\n\t/**\n\t * The output is a mix between `a` and `b` at the ratio of `fade`\n\t */\n\treadonly output: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * CrossFade has no input, you must choose either `a` or `b`\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The mix between the two inputs. A fade value of 0\n\t * will output 100% crossFade.a and\n\t * a value of 1 will output 100% crossFade.b.\n\t */\n\treadonly fade: Signal<\"normalRange\">;\n\n\tprotected _internalChannels = [this.a, this.b];\n\n\t/**\n\t * @param fade The initial fade value [0, 1].\n\t */\n\tconstructor(fade?: NormalRange);\n\tconstructor(options?: Partial<CrossFadeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n\t\tconst options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n\n\t\tthis.fade = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"normalRange\",\n\t\t\tvalue: options.fade,\n\t\t});\n\t\treadOnly(this, \"fade\");\n\n\t\tthis.context.getConstant(1).connect(this._panner);\n\t\tthis._panner.connect(this._split);\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = 1;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\t\tconnect(this._split, this.a.gain, 0);\n\t\tconnect(this._split, this.b.gain, 1);\n\n\t\tthis.fade.chain(this._g2a, this._panner.pan);\n\n\t\tthis.a.connect(this.output);\n\t\tthis.b.connect(this.output);\n\t}\n\n\tstatic getDefaults(): CrossFadeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tfade: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.a.dispose();\n\t\tthis.b.dispose();\n\t\tthis.output.dispose();\n\t\tthis.fade.dispose();\n\t\tthis._g2a.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis._split.disconnect();\n\t\treturn this;\n\t}\n}\n","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\n\nexport interface EffectOptions extends ToneAudioNodeOptions {\n\twet: NormalRange;\n}\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport abstract class Effect<Options extends EffectOptions>\n\textends ToneAudioNode<Options> {\n\n\treadonly name: string = \"Effect\";\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade = new CrossFade({ context: this.context });\n\n\t/**\n\t * The wet control is how much of the effected\n\t * will pass through to the output. 1 = 100% effected\n\t * signal, 0 = 100% dry signal.\n\t */\n\twet: Signal<\"normalRange\"> = this._dryWet.fade;\n\n\t/**\n\t * connect the effectSend to the input of hte effect\n\t */\n\tprotected effectSend: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * connect the output of the effect to the effectReturn\n\t */\n\tprotected effectReturn: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect input node\n\t */\n\tinput: Gain = new Gain({ context: this.context });\n\n\t/**\n\t * The effect output\n\t */\n\toutput = this._dryWet;\n\n\tconstructor(options: EffectOptions) {\n\t\tsuper(options);\n\n\t\t// connections\n\t\tthis.input.fan(this._dryWet.a, this.effectSend);\n\t\tthis.effectReturn.connect(this._dryWet.b);\n\t\tthis.wet.setValueAtTime(options.wet, 0);\n\t\tthis._internalChannels = [this.effectReturn, this.effectSend];\n\t\treadOnly(this, \"wet\");\n\t}\n\n\tstatic getDefaults(): EffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\t/**\n\t * chains the effect in between the effectSend and effectReturn\n\t */\n\tprotected connectEffect(effect: ToneAudioNode | AudioNode): this {\n\t\t// add it to the internal channels\n\t\tthis._internalChannels.push(effect);\n\t\tthis.effectSend.chain(effect, this.effectReturn);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis.effectSend.dispose();\n\t\tthis.effectReturn.dispose();\n\t\tthis.wet.dispose();\n\t\treturn this;\n\t}\n}\n","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n\ninterface TonePannerOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tchannelCount: number;\n}\n\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode<TonePannerOptions> {\n\n\treadonly name: string = \"Panner\";\n\n\t/**\n\t * the panner node\n\t */\n\tprivate _panner: StereoPannerNode = this.context.createStereoPanner();\n\treadonly input: StereoPannerNode = this._panner;\n\treadonly output: StereoPannerNode = this._panner;\n\n\t/**\n\t * The pan control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t * @example\n\t * return Tone.Offline(() => {\n\t * \t// pan hard right\n\t * \tconst panner = new Tone.Panner(1).toDestination();\n\t * \t// pan hard left\n\t * \tpanner.pan.setValueAtTime(-1, 0.25);\n\t * \tconst osc = new Tone.Oscillator(50, \"triangle\").connect(panner).start();\n\t * }, 0.5, 2);\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\tconstructor(options?: Partial<TonePannerOptions>);\n\t/**\n\t * @param pan The initial panner value (Defaults to 0 = \"center\").\n\t */\n\tconstructor(pan?: AudioRange);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n\t\tconst options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n\n\t\tthis.pan = new Param({\n\t\t\tcontext: this.context,\n\t\t\tparam: this._panner.pan,\n\t\t\tvalue: options.pan,\n\t\t\tminValue: -1,\n\t\t\tmaxValue: 1,\n\t\t});\n\n\t\t// this is necessary for standardized-audio-context\n\t\t// doesn't make any difference for the native AudioContext\n\t\t// https://github.com/chrisguttandin/standardized-audio-context/issues/647\n\t\tthis._panner.channelCount = options.channelCount;\n\t\tthis._panner.channelCountMode = \"explicit\";\n\n\t\t// initial value\n\t\treadOnly(this, \"pan\");\n\t}\n\n\tstatic getDefaults(): TonePannerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.disconnect();\n\t\tthis.pan.dispose();\n\t\treturn this;\n\t}\n}\n","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\n\nexport const workletName = \"bit-crusher\";\n\nexport const bitCrusherWorklet = /* javascript */`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\n\nregisterProcessor(workletName, bitCrusherWorklet);\n","import { ToneAudioWorklet, ToneAudioWorkletOptions } from \"../core/worklet/ToneAudioWorklet\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { Positive } from \"../core/type/Units\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { workletName } from \"./BitCrusher.worklet\";\n\nexport interface BitCrusherOptions extends EffectOptions {\n\tbits: Positive;\n}\n\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n * \n * @category Effect\n */\nexport class BitCrusher extends Effect<BitCrusherOptions> {\n\n\treadonly name: string = \"BitCrusher\";\n\n\t/**\n\t * The bit depth of the effect\n\t * @min 1\n\t * @max 16\n\t */\n\treadonly bits: Param<\"positive\">;\n\n\t/**\n\t * The node which does the bit crushing effect. Runs in an AudioWorklet when possible.\n\t */\n\tprivate _bitCrusherWorklet: BitCrusherWorklet;\n\n\tconstructor(bits?: Positive);\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n\t\tconst options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n\n\t\tthis._bitCrusherWorklet = new BitCrusherWorklet({\n\t\t\tcontext: this.context,\n\t\t\tbits: options.bits,\n\t\t});\n\t\t// connect it up\n\t\tthis.connectEffect(this._bitCrusherWorklet);\n\n\t\tthis.bits = this._bitCrusherWorklet.bits;\n\t}\n\n\tstatic getDefaults(): BitCrusherOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tbits: 4,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._bitCrusherWorklet.dispose();\n\t\treturn this;\n\t}\n}\n\ninterface BitCrusherWorkletOptions extends ToneAudioWorkletOptions {\n\tbits: number;\n}\n\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nclass BitCrusherWorklet extends ToneAudioWorklet<BitCrusherWorkletOptions> {\n\n\treadonly name: string = \"BitCrusherWorklet\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\treadonly bits: Param<\"positive\">;\n\n\tconstructor(options?: Partial<BitCrusherWorkletOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n\t\tconst options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\tthis.output = new Gain({ context: this.context });\n\n\t\tthis.bits = new Param<\"positive\">({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.bits,\n\t\t\tunits: \"positive\",\n\t\t\tminValue: 1,\n\t\t\tmaxValue: 16,\n\t\t\tparam: this._dummyParam,\n\t\t\tswappable: true,\n\t\t});\n\t}\n\n\tstatic getDefaults(): BitCrusherWorkletOptions {\n\t\treturn Object.assign(ToneAudioWorklet.getDefaults(), {\n\t\t\tbits: 12,\n\t\t});\n\t}\n\n\tprotected _audioWorkletName(): string {\n\t\treturn workletName;\n\t}\n\n\tonReady(node: AudioWorkletNode) {\n\t\tconnectSeries(this.input, node, this.output);\n\t\tconst bits = node.parameters.get(\"bits\") as AudioParam;\n\t\tthis.bits.setParam(bits);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.input.dispose();\n\t\tthis.output.dispose();\n\t\tthis.bits.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\ninterface SplitOptions extends ToneAudioNodeOptions {\n\tchannels: number;\n}\n\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nexport class Split extends ToneAudioNode<SplitOptions> {\n\treadonly name: string = \"Split\";\n\n\t/**\n\t * The splitting node\n\t */\n\tprivate _splitter: ChannelSplitterNode;\n\n\treadonly input: ChannelSplitterNode;\n\treadonly output: ChannelSplitterNode;\n\n\t/**\n\t * @param channels The number of channels to merge.\n\t */\n\tconstructor(channels?: number);\n\tconstructor(options?: Partial<SplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n\t\tconst options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n\n\t\tthis._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n\t\tthis._internalChannels = [this._splitter];\n\t}\n\n\tstatic getDefaults(): SplitOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tchannels: 2,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._splitter.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Positive } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\ninterface MergeOptions extends ToneAudioNodeOptions {\n\tchannels: Positive;\n}\n\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nexport class Merge extends ToneAudioNode<MergeOptions> {\n\n\treadonly name: string = \"Merge\";\n\n\t/**\n\t * The merger node for the channels.\n\t */\n\tprivate _merger: ChannelMergerNode;\n\n\t/**\n\t * The output is the input channels combined into a single (multichannel) output\n\t */\n\treadonly output: ChannelMergerNode;\n\n\t/**\n\t * Multiple input connections combine into a single output.\n\t */\n\treadonly input: ChannelMergerNode;\n\n\t/**\n\t * @param channels The number of channels to merge.\n\t */\n\tconstructor(channels?: Positive);\n\tconstructor(options?: Partial<MergeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n\t\tconst options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n\n\t\tthis._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n\t}\n\n\tstatic getDefaults(): MergeOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tchannels: 2,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merger.disconnect();\n\t\treturn this;\n\t}\n}\n","import { EffectOptions } from \"./Effect\";\nimport { connect, connectSeries, OutputNode, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport type StereoEffectOptions = EffectOptions;\n\n/**\n * Base class for Stereo effects.\n */\nexport class StereoEffect<Options extends StereoEffectOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"StereoEffect\";\n\n\treadonly input: Gain;\n\treadonly output: CrossFade;\n\n\t/**\n\t * the drywet knob to control the amount of effect\n\t */\n\tprivate _dryWet: CrossFade;\n\t\n\t/**\n\t * The wet control, i.e. how much of the effected\n\t * will pass through to the output.\n\t */\n\treadonly wet: Signal<\"normalRange\">;\n\t\n\t/**\n\t * Split it\n\t */\n\tprotected _split: Split;\n\t\n\t/**\n\t * the stereo effect merger\n\t */\n\tprotected _merge: Merge;\n\n\tconstructor(options: StereoEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis.input = new Gain({ context: this.context });\n\t\t// force mono sources to be stereo\n\t\tthis.input.channelCount = 2;\n\t\tthis.input.channelCountMode = \"explicit\";\n\n\t\tthis._dryWet = this.output = new CrossFade({\n\t\t\tcontext: this.context,\n\t\t\tfade: options.wet\n\t\t});\n\t\tthis.wet = this._dryWet.fade;\n\t\tthis._split = new Split({ context: this.context, channels: 2 });\n\t\tthis._merge = new Merge({ context: this.context, channels: 2 });\n\n\t\t// connections\n\t\tthis.input.connect(this._split);\n\t\t// dry wet connections\n\t\tthis.input.connect(this._dryWet.a);\n\t\tthis._merge.connect(this._dryWet.b);\n\t\treadOnly(this, [\"wet\"]);\n\t}\n\t\n\t/**\n\t * Connect the left part of the effect\n\t */\n\tprotected connectEffectLeft(...nodes: OutputNode[]): void{\n\t\tthis._split.connect(nodes[0], 0, 0);\n\t\tconnectSeries(...nodes);\n\t\tconnect(nodes[nodes.length-1], this._merge, 0, 0);\n\t}\n\t\n\t/**\n\t * Connect the right part of the effect\n\t */\n\tprotected connectEffectRight(...nodes: OutputNode[]): void{\n\t\tthis._split.connect(nodes[0], 1, 0);\n\t\tconnectSeries(...nodes);\n\t\tconnect(nodes[nodes.length-1], this._merge, 0, 1);\n\t}\n\n\tstatic getDefaults(): StereoEffectOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\twet: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._dryWet.dispose();\n\t\tthis._split.dispose();\n\t\tthis._merge.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n\nexport interface StereoFeedbackEffectOptions extends StereoEffectOptions {\n\tfeedback: NormalRange;\n}\n\n/**\n * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.\n */\nexport class StereoFeedbackEffect<Options extends StereoFeedbackEffectOptions> extends StereoEffect<Options> {\n\t\n\t/**\n\t * The amount of feedback from the output\n\t * back into the input of the effect (routed\n\t * across left and right channels).\n\t */\n\treadonly feedback: Signal<\"normalRange\">;\n\n\t/**\n\t * the left side feedback\n\t */\n\tprotected _feedbackL: Gain;\n\n\t/**\n\t * the right side feedback\n\t */\n\tprotected _feedbackR: Gain;\n\n\t/**\n\t * Split the channels for feedback\n\t */\n\tprotected _feedbackSplit: Split;\n\n\t/**\n\t * Merge the channels for feedback\n\t */\n\tprotected _feedbackMerge: Merge;\n\n\tconstructor(options: StereoFeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis.feedback = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.feedback, \n\t\t\tunits: \"normalRange\"\n\t\t});\n\t\tthis._feedbackL = new Gain({ context: this.context });\n\t\tthis._feedbackR = new Gain({ context: this.context });\n\n\t\tthis._feedbackSplit = new Split({ context: this.context, channels: 2 });\n\t\tthis._feedbackMerge = new Merge({ context: this.context, channels: 2 });\n\n\t\tthis._merge.connect(this._feedbackSplit);\n\t\tthis._feedbackMerge.connect(this._split);\n\t\t\n\t\t// the left output connected to the left input\n\t\tthis._feedbackSplit.connect(this._feedbackL, 0, 0);\n\t\tthis._feedbackL.connect(this._feedbackMerge, 0, 0);\n\n\t\t// the right output connected to the right input\n\t\tthis._feedbackSplit.connect(this._feedbackR, 1, 0);\n\t\tthis._feedbackR.connect(this._feedbackMerge, 0, 1);\n\t\t\n\t\t// the feedback control\n\t\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\treadOnly(this, [\"feedback\"]);\n\t}\n\n\tstatic getDefaults(): StereoFeedbackEffectOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfeedback: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.feedback.dispose();\n\t\tthis._feedbackL.dispose();\n\t\tthis._feedbackR.dispose();\n\t\tthis._feedbackSplit.dispose();\n\t\tthis._feedbackMerge.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoFeedbackEffect, StereoFeedbackEffectOptions } from \"../effect/StereoFeedbackEffect\";\nimport { Degrees, Frequency, Milliseconds, NormalRange, Seconds, Time } from \"../core/type/Units\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface ChorusOptions extends StereoFeedbackEffectOptions {\n\tfrequency: Frequency;\n\tdelayTime: Milliseconds;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n\tspread: Degrees;\n}\n\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects. \n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n * \n * @category Effect\n */\nexport class Chorus extends StereoFeedbackEffect<ChorusOptions> {\n\n\treadonly name: string = \"Chorus\";\n\n\t/**\n\t * the depth of the chorus\n\t */\n\tprivate _depth: NormalRange;\n\n\t/**\n\t * the delayTime in seconds.\n\t */\n\tprivate _delayTime: Seconds;\n\n\t/**\n\t * the lfo which controls the delayTime\n\t */\n\tprivate _lfoL: LFO\n\n\t/**\n\t * another LFO for the right side with a 180 degree phase diff\n\t */\n\tprivate _lfoR: LFO\n\n\t/**\n\t * delay for left\n\t */\n\tprivate _delayNodeL: Delay;\n\n\t/**\n\t * delay for right\n\t */\n\tprivate _delayNodeR: Delay;\n\n\t/**\n\t * The frequency of the LFO which modulates the delayTime.\n\t */\n\treadonly frequency: Signal<\"frequency\">\n\n\t/**\n\t * @param frequency The frequency of the LFO.\n\t * @param delayTime The delay of the chorus effect in ms.\n\t * @param depth The depth of the chorus.\n\t */\n\tconstructor(frequency?: Frequency, delayTime?: Milliseconds, depth?: NormalRange);\n\tconstructor(options?: Partial<ChorusOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n\t\tconst options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n\n\t\tthis._depth = options.depth;\n\t\tthis._delayTime = options.delayTime / 1000;\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tphase: 180\n\t\t});\n\t\tthis._delayNodeL = new Delay({ context: this.context });\n\t\tthis._delayNodeR = new Delay({ context: this.context });\n\t\tthis.frequency = this._lfoL.frequency;\n\t\treadOnly(this, [\"frequency\"]);\n\t\t// have one LFO frequency control the other\n\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\n\t\t// connections\n\t\tthis.connectEffectLeft(this._delayNodeL);\n\t\tthis.connectEffectRight(this._delayNodeR);\n\t\t// lfo setup\n\t\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\t\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t\t// set the initial values\n\t\tthis.depth = this._depth;\n\t\tthis.type = options.type;\n\t\tthis.spread = options.spread;\n\t}\n\n\tstatic getDefaults(): ChorusOptions {\n\t\treturn Object.assign(StereoFeedbackEffect.getDefaults(), {\n\t\t\tfrequency: 1.5,\n\t\t\tdelayTime: 3.5,\n\t\t\tdepth: 0.7,\n\t\t\ttype: \"sine\" as \"sine\",\n\t\t\tspread: 180,\n\t\t\tfeedback: 0,\n\t\t\twet: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * The depth of the effect. A depth of 1 makes the delayTime\n\t * modulate between 0 and 2*delayTime (centered around the delayTime).\n\t */\n\tget depth(): NormalRange {\n\t\treturn this._depth;\n\t}\n\tset depth(depth) {\n\t\tthis._depth = depth;\n\t\tconst deviation = this._delayTime * depth;\n\t\tthis._lfoL.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\tthis._lfoR.min = Math.max(this._delayTime - deviation, 0);\n\t\tthis._lfoR.max = this._delayTime + deviation;\n\t}\n\n\t/**\n\t * The delayTime in milliseconds of the chorus. A larger delayTime\n\t * will give a more pronounced effect. Nominal range a delayTime\n\t * is between 2 and 20ms.\n\t */\n\tget delayTime(): Milliseconds {\n\t\treturn this._delayTime * 1000;\n\t}\n\tset delayTime(delayTime) {\n\t\tthis._delayTime = delayTime / 1000;\n\t\tthis.depth = this._depth;\n\t}\n\n\t/**\n\t * The oscillator type of the LFO.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfoL.type;\n\t}\n\tset type(type) {\n\t\tthis._lfoL.type = type;\n\t\tthis._lfoR.type = type;\n\t}\n\n\t/**\n\t * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n\t * When set to 180, LFO's will be panned hard left and right respectively.\n\t */\n\tget spread(): Degrees {\n\t\treturn this._lfoR.phase - this._lfoL.phase;\n\t}\n\tset spread(spread) {\n\t\tthis._lfoL.phase = 90 - (spread / 2);\n\t\tthis._lfoR.phase = (spread / 2) + 90;\n\t}\n\n\t/**\n\t * Start the effect.\n\t */\n\tstart(time?: Time): this {\n\t\tthis._lfoL.start(time);\n\t\tthis._lfoR.start(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop the lfo\n\t */\n\tstop(time?: Time): this {\n\t\tthis._lfoL.stop(time);\n\t\tthis._lfoR.stop(time);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sync the filter to the transport. See [[LFO.sync]]\n\t */\n\tsync(): this {\n\t\tthis._lfoL.sync();\n\t\tthis._lfoR.sync();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsync the filter from the transport.\n\t */\n\tunsync(): this {\n\t\tthis._lfoL.unsync();\n\t\tthis._lfoR.unsync();\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._delayNodeL.dispose();\n\t\tthis._delayNodeR.dispose();\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface DistortionOptions extends EffectOptions {\n\tdistortion: number;\n\toversample: OverSampleType;\n}\n\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\nexport class Distortion extends Effect<DistortionOptions> {\n\n\treadonly name: string = \"Distortion\";\n\n\t/**\n\t * The waveshaper which does the distortion\n\t */\n\tprivate _shaper: WaveShaper;\n\n\t/**\n\t * Stores the distortion value\n\t */\n\tprivate _distortion: number;\n\n\t/**\n\t * @param distortion The amount of distortion (nominal range of 0-1)\n\t */\n\tconstructor(distortion?: number);\n\tconstructor(options?: Partial<DistortionOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]));\n\t\tconst options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n\n\t\tthis._shaper = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 4096,\n\t\t});\n\n\t\tthis._distortion = options.distortion;\n\n\t\tthis.connectEffect(this._shaper);\n\t\tthis.distortion = options.distortion;\n\t\tthis.oversample = options.oversample;\n\t}\n\n\tstatic getDefaults(): DistortionOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tdistortion: 0.4,\n\t\t\toversample: \"none\" as OverSampleType,\n\t\t});\n\t}\n\n\t/**\n\t * The amount of distortion. Nominal range is between 0 and 1.\n\t */\n\tget distortion(): number {\n\t\treturn this._distortion;\n\t}\n\tset distortion(amount) {\n\t\tthis._distortion = amount;\n\t\tconst k = amount * 100;\n\t\tconst deg = Math.PI / 180;\n\t\tthis._shaper.setMap((x) => {\n\t\t\tif (Math.abs(x) < 0.001) {\n\t\t\t\t// should output 0 when input is 0\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t */\n\tget oversample(): OverSampleType {\n\t\treturn this._shaper.oversample;\n\t}\n\tset oversample(oversampling) {\n\t\tthis._shaper.oversample = oversampling;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._shaper.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../core/context/Gain\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect, EffectOptions } from \"./Effect\";\n\nexport interface FeedbackEffectOptions extends EffectOptions {\n\t/**\n\t * The feedback from the output back to the input\n\t * ```\n\t * +---<--------<---+\n\t * |                |\n\t * |  +----------+  |\n\t * +--> feedback +>-+\n\t *    +----------+\n\t * ```\n\t */\n\tfeedback: NormalRange;\n}\n\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport abstract class FeedbackEffect<Options extends FeedbackEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"FeedbackEffect\";\n\n\t/**\n\t * the gain which controls the feedback\n\t */\n\tprivate _feedbackGain: Gain<\"normalRange\">;\n\n\t/**\n\t * The amount of signal which is fed back into the effect input.\n\t */\n\tfeedback: Param<\"normalRange\">;\n\n\tconstructor(options: FeedbackEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._feedbackGain = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tgain: options.feedback,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\n\t\tthis.feedback = this._feedbackGain.gain;\n\t\treadOnly(this, \"feedback\");\n\n\t\t// the feedback loop\n\t\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t}\n\n\tstatic getDefaults(): FeedbackEffectOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tfeedback: 0.125,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._feedbackGain.dispose();\n\t\tthis.feedback.dispose();\n\t\treturn this;\n\t}\n}\n","import { Delay } from \"../core/context/Delay\";\nimport { Param } from \"../core/context/Param\";\nimport { NormalRange, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect, FeedbackEffectOptions } from \"./FeedbackEffect\";\n\ninterface FeedbackDelayOptions extends FeedbackEffectOptions {\n\tdelayTime: Time;\n\tmaxDelay: Time;\n}\n\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect<FeedbackDelayOptions> {\n\n\treadonly name: string = \"FeedbackDelay\";\n\n\t/**\n\t * the delay node\n\t */\n\tprivate _delayNode: Delay;\n\n\t/**\n\t * The delayTime of the FeedbackDelay.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\tconstructor(delayTime?: Time, feedback?: NormalRange);\n\tconstructor(options?: Partial<FeedbackDelayOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n\t\tconst options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis.delayTime = this._delayNode.delayTime;\n\n\t\t// connect it up\n\t\tthis.connectEffect(this._delayNode);\n\t\treadOnly(this, \"delayTime\");\n\t}\n\n\tstatic getDefaults(): FeedbackDelayOptions {\n\t\treturn Object.assign(FeedbackEffect.getDefaults(), {\n\t\t\tdelayTime: 0.25,\n\t\t\tmaxDelay: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis.delayTime.dispose();\n\t\treturn this;\n\t}\n}\n","import { StereoEffect, StereoEffectOptions } from \"./StereoEffect\";\nimport { Frequency, Hertz, Positive } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n\nexport interface PhaserOptions extends StereoEffectOptions {\n\tfrequency: Frequency;\n\toctaves: Positive;\n\tstages: Positive;\n\tQ: Positive;\n\tbaseFrequency: Frequency;\n}\n\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\nexport class Phaser extends StereoEffect<PhaserOptions> {\n\n\treadonly name: string = \"Phaser\";\n\n\t/**\n\t * the lfo which controls the frequency on the left side\n\t */\n\tprivate _lfoL: LFO;\n\n\t/**\n\t * the lfo which controls the frequency on the right side\n\t */\n\tprivate _lfoR: LFO;\n\n\t/**\n\t * the base modulation frequency\n\t */\n\tprivate _baseFrequency: Hertz;\n\n\t/**\n\t * the octaves of the phasing\n\t */\n\tprivate _octaves: Positive;\n\n\t/**\n\t * The quality factor of the filters\n\t */\n\treadonly Q: Signal<\"positive\">;\n\n\t/**\n\t * the array of filters for the left side\n\t */\n\tprivate _filtersL: BiquadFilterNode[];\n\n\t/**\n\t * the array of filters for the left side\n\t */\n\tprivate _filtersR: BiquadFilterNode[];\n\n\t/**\n\t * the frequency of the effect\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * @param frequency The speed of the phasing.\n\t * @param octaves The octaves of the effect.\n\t * @param baseFrequency The base frequency of the filters.\n\t */\n\tconstructor(frequency?: Frequency, octaves?: Positive, baseFrequency?: Frequency);\n\tconstructor(options?: Partial<PhaserOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]));\n\t\tconst options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n\n\t\tthis._lfoL = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1\n\t\t});\n\t\tthis._lfoR = new LFO({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.frequency,\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tphase: 180,\n\t\t});\n\t\tthis._baseFrequency = this.toFrequency(options.baseFrequency);\n\t\tthis._octaves = options.octaves;\n\t\tthis.Q = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.Q,\n\t\t\tunits: \"positive\",\n\t\t});\n\t\tthis._filtersL = this._makeFilters(options.stages, this._lfoL);\n\t\tthis._filtersR = this._makeFilters(options.stages, this._lfoR);\n\n\t\tthis.frequency = this._lfoL.frequency;\n\t\tthis.frequency.value = options.frequency;\n\n\t\t// connect them up\n\t\tthis.connectEffectLeft(...this._filtersL);\n\t\tthis.connectEffectRight(...this._filtersR);\n\t\t// control the frequency with one LFO\n\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t// set the options\n\t\tthis.baseFrequency = options.baseFrequency;\n\t\tthis.octaves = options.octaves;\n\t\t// start the lfo\n\t\tthis._lfoL.start();\n\t\tthis._lfoR.start();\n\t\treadOnly(this, [\"frequency\", \"Q\"]);\n\t}\n\n\tstatic getDefaults(): PhaserOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\tfrequency: 0.5,\n\t\t\toctaves: 3,\n\t\t\tstages: 10,\n\t\t\tQ: 10,\n\t\t\tbaseFrequency: 350,\n\t\t});\n\t}\n\n\tprivate _makeFilters(stages: number, connectToFreq: LFO): BiquadFilterNode[] {\n\t\tconst filters: BiquadFilterNode[] = [];\n\t\t// make all the filters\n\t\tfor (let i = 0; i < stages; i++) {\n\t\t\tconst filter = this.context.createBiquadFilter();\n\t\t\tfilter.type = \"allpass\";\n\t\t\tthis.Q.connect(filter.Q);\n\t\t\tconnectToFreq.connect(filter.frequency);\n\t\t\tfilters.push(filter);\n\t\t}\n\t\treturn filters;\n\t}\n\n\t/**\n\t * The number of octaves the phase goes above the baseFrequency\n\t */\n\tget octaves() {\n\t\treturn this._octaves;\n\t}\n\tset octaves(octaves) {\n\t\tthis._octaves = octaves;\n\t\tconst max = this._baseFrequency * Math.pow(2, octaves);\n\t\tthis._lfoL.max = max;\n\t\tthis._lfoR.max = max;\n\t}\n\n\t/**\n\t * The the base frequency of the filters.\n\t */\n\tget baseFrequency(): Frequency {\n\t\treturn this._baseFrequency;\n\t}\n\tset baseFrequency(freq) {\n\t\tthis._baseFrequency = this.toFrequency(freq);\n\t\tthis._lfoL.min = this._baseFrequency;\n\t\tthis._lfoR.min = this._baseFrequency;\n\t\tthis.octaves = this._octaves;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.Q.dispose();\n\t\tthis._lfoL.dispose();\n\t\tthis._lfoR.dispose();\n\t\tthis._filtersL.forEach(f => f.disconnect());\n\t\tthis._filtersR.forEach(f => f.disconnect());\n\t\tthis.frequency.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Seconds, Time } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect, EffectOptions } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n\ninterface ReverbOptions extends EffectOptions {\n\tdecay: Seconds;\n\tpreDelay: Seconds;\n}\n\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound. \n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n * \n * @category Effect\n */\nexport class Reverb extends Effect<ReverbOptions> {\n\n\treadonly name: string = \"Reverb\";\n\n\t/**\n\t * Convolver node\n\t */\n\tprivate _convolver: ConvolverNode = this.context.createConvolver();\n\n\t/**\n\t * The duration of the reverb.\n\t */\n\tprivate _decay: Seconds;\n\t\n\t/**\n\t * The amount of time before the reverb is fully ramped in.\n\t */\n\tprivate _preDelay: Seconds;\n\n\t/**\n\t * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n\t * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n\t * before the IR is generated with the latest values. \n\t */\n\tready: Promise<void> = Promise.resolve();\n\n\t/**\n\t * @param decay The amount of time it will reverberate for.\n\t */\n\tconstructor(decay?: Seconds);\n\tconstructor(options?: Partial<ReverbOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n\t\tconst options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n\n\t\tthis._decay = options.decay;\n\t\tthis._preDelay = options.preDelay;\n\t\tthis.generate();\n\n\t\tthis.connectEffect(this._convolver);\n\t}\n\n\tstatic getDefaults(): ReverbOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tdecay: 1.5,\n\t\t\tpreDelay: 0.01,\n\t\t});\n\t}\n\n\t/**\n\t * The duration of the reverb.\n\t */\n\tget decay(): Time {\n\t\treturn this._decay;\n\t}\n\tset decay(time) {\n\t\ttime = this.toSeconds(time);\n\t\tassertRange(time, 0.001);\n\t\tthis._decay = time;\n\t\tthis.generate();\n\t}\n\n\t/**\n\t * The amount of time before the reverb is fully ramped in.\n\t */\n\tget preDelay(): Time {\n\t\treturn this._preDelay;\n\t}\n\tset preDelay(time) {\n\t\ttime = this.toSeconds(time);\n\t\tassertRange(time, 0);\n\t\tthis._preDelay = time;\n\t\tthis.generate();\n\t}\n\n\t/**\n\t * Generate the Impulse Response. Returns a promise while the IR is being generated.\n\t * @return Promise which returns this object.\n\t */\n\tasync generate(): Promise<this> {\n\t\tconst previousReady = this.ready;\n\n\t\t// create a noise burst which decays over the duration in each channel\n\t\tconst context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n\t\tconst noiseL = new Noise({ context });\n\t\tconst noiseR = new Noise({ context });\n\t\tconst merge = new Merge({ context });\n\t\tnoiseL.connect(merge, 0, 0);\n\t\tnoiseR.connect(merge, 0, 1);\n\t\tconst gainNode = new Gain({ context }).toDestination();\n\t\tmerge.connect(gainNode);\n\t\tnoiseL.start(0);\n\t\tnoiseR.start(0);\n\t\t// predelay\n\t\tgainNode.gain.setValueAtTime(0, 0);\n\t\tgainNode.gain.setValueAtTime(1, this._preDelay);\n\t\t// decay\n\t\tgainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n\t\t\n\t\t// render the buffer\n\t\tconst renderPromise = context.render();\n\t\tthis.ready = renderPromise.then(noOp);\n\t\t\n\t\t// wait for the previous `ready` to resolve\n\t\tawait previousReady;\n\t\t// set the buffer\n\t\tthis._convolver.buffer = (await renderPromise).get() as AudioBuffer;\n\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._convolver.disconnect();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport type MidSideSplitOptions = ToneAudioNodeOptions;\n\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideSplit extends ToneAudioNode<MidSideSplitOptions> {\n\t\n\treadonly name: string = \"MidSideSplit\";\n\n\treadonly input: Split;\n\n\t/**\n\t * There is no output node, use either [[mid]] or [[side]] outputs.\n\t */\n\treadonly output: undefined;\n\t/**\n\t * Split the incoming signal into left and right channels\n\t */\n\tprivate _split: Split;\n\n\t/**\n\t * Sums the left and right channels\n\t */\n\tprivate _midAdd: Add;\n\n\t/**\n\t * Subtract left and right channels. \n\t */\n\tprivate _sideSubtract: Subtract;\n\n\t/**\n\t * The \"mid\" output. `(Left+Right)/sqrt(2)`\n\t */\n\treadonly mid: ToneAudioNode;\n\n\t/**\n\t * The \"side\" output. `(Left-Right)/sqrt(2)`\n\t */\n\treadonly side: ToneAudioNode;\n\t\n\tconstructor(options?: Partial<MidSideSplitOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n\n\t\tthis._split = this.input = new Split({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context\n\t\t});\n\t\tthis._midAdd = new Add({ context: this.context });\n\t\tthis.mid = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: Math.SQRT1_2,\n\t\t});\n\t\tthis._sideSubtract = new Subtract({ context: this.context });\n\t\tthis.side = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: Math.SQRT1_2,\n\t\t});\n\n\t\tthis._split.connect(this._midAdd, 0);\n\t\tthis._split.connect(this._midAdd.addend, 1);\n\t\tthis._split.connect(this._sideSubtract, 0);\n\t\tthis._split.connect(this._sideSubtract.subtrahend, 1);\n\t\tthis._midAdd.connect(this.mid);\n\t\tthis._sideSubtract.connect(this.side);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._midAdd.dispose();\n\t\tthis._sideSubtract.dispose();\n\t\tthis._split.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport type MidSideMergeOptions = ToneAudioNodeOptions;\n\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideMerge extends ToneAudioNode<MidSideMergeOptions> {\n\t\n\treadonly name: string = \"MidSideMerge\";\n\n\t/**\n\t * There is no input, connect sources to either [[mid]] or [[side]] inputs.\n\t */\n\treadonly input: undefined;\n\n\t/**\n\t * The merged signal\n\t */\n\treadonly output: Merge;\n\n\t/**\n\t * Merge the incoming signal into left and right channels\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The \"mid\" input.\n\t */\n\treadonly mid: ToneAudioNode;\n\n\t/**\n\t * The \"side\" input.\n\t */\n\treadonly side: ToneAudioNode;\n\n\t/**\n\t * Recombine the mid/side into Left\n\t */\n\tprivate _left: Add;\n\n\t/**\n\t * Recombine the mid/side into Right\n\t */\n\tprivate _right: Subtract;\n\n\t/**\n\t * Multiply the right by sqrt(1/2)\n\t */\n\tprivate _leftMult: Multiply;\n\n\t/**\n\t * Multiply the left by sqrt(1/2)\n\t */\n\tprivate _rightMult: Multiply;\n\t\n\tconstructor(options?: Partial<MidSideMergeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n\t\tthis.mid = new Gain({ context: this.context });\n\t\tthis.side = new Gain({ context: this.context });\n\t\tthis._left = new Add({ context: this.context });\n\t\tthis._leftMult = new Multiply({\n\t\t\tcontext: this.context, \n\t\t\tvalue: Math.SQRT1_2\n\t\t});\n\t\tthis._right = new Subtract({ context: this.context });\n\t\tthis._rightMult = new Multiply({\n\t\t\tcontext: this.context, \n\t\t\tvalue: Math.SQRT1_2\n\t\t});\n\t\tthis._merge = this.output = new Merge({ context: this.context });\n\n\t\tthis.mid.fan(this._left);\n\t\tthis.side.connect(this._left.addend);\n\t\tthis.mid.connect(this._right);\n\t\tthis.side.connect(this._right.subtrahend);\n\t\tthis._left.connect(this._leftMult);\n\t\tthis._right.connect(this._rightMult);\n\t\tthis._leftMult.connect(this._merge, 0, 0);\n\t\tthis._rightMult.connect(this._merge, 0, 1);\n\t}\n\t\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._leftMult.dispose();\n\t\tthis._rightMult.dispose();\n\t\tthis._left.dispose();\n\t\tthis._right.dispose();\n\t\treturn this;\n\t}\n}\n","import { Effect, EffectOptions } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\nimport { OutputNode, ToneAudioNode } from \"../core/context/ToneAudioNode\";\n\nexport type MidSideEffectOptions = EffectOptions;\n\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n * @category Effect\n */\nexport abstract class MidSideEffect<Options extends MidSideEffectOptions> extends Effect<Options> {\n\n\treadonly name: string = \"MidSideEffect\";\n\n\t/**\n\t * The mid/side split\n\t */\n\tprivate _midSideSplit: MidSideSplit;\n\t\n\t/**\n\t * The mid/side merge\n\t */\n\tprivate _midSideMerge: MidSideMerge;\n\t\n\t/**\n\t * The mid send. Connect to mid processing\n\t */\n\tprotected _midSend: ToneAudioNode;\n\t\n\t/**\n\t * The side send. Connect to side processing\n\t */\n\tprotected _sideSend: ToneAudioNode;\n\t\n\t/**\n\t * The mid return connection\n\t */\n\tprotected _midReturn: ToneAudioNode;\n\t\n\t/**\n\t * The side return connection\n\t */\n\tprotected _sideReturn: ToneAudioNode;\n\n\tconstructor(options: MidSideEffectOptions) {\n\n\t\tsuper(options);\n\n\t\tthis._midSideMerge = new MidSideMerge({ context: this.context });\n\t\tthis._midSideSplit = new MidSideSplit({ context: this.context });\n\t\tthis._midSend = this._midSideSplit.mid;\n\t\tthis._sideSend = this._midSideSplit.side;\n\t\tthis._midReturn = this._midSideMerge.mid;\n\t\tthis._sideReturn = this._midSideMerge.side;\n\n\t\t// the connections\n\t\tthis.effectSend.connect(this._midSideSplit);\n\t\tthis._midSideMerge.connect(this.effectReturn);\n\t}\n\n\t/**\n\t * Connect the mid chain of the effect\n\t */\n\tprotected connectEffectMid(...nodes: OutputNode[]): void{\n\t\tthis._midSend.chain(...nodes, this._midReturn);\n\t}\n\t\n\t/**\n\t * Connect the side chain of the effect\n\t */\n\tprotected connectEffectSide(...nodes: OutputNode[]): void{\n\t\tthis._sideSend.chain(...nodes, this._sideReturn);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._midSideSplit.dispose();\n\t\tthis._midSideMerge.dispose();\n\t\tthis._midSend.dispose();\n\t\tthis._sideSend.dispose();\n\t\tthis._midReturn.dispose();\n\t\tthis._sideReturn.dispose();\n\t\treturn this;\n\t}\n}\n\n","import { MidSideEffect, MidSideEffectOptions } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { NormalRange } from \"../core/type/Units\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n\nexport interface StereoWidenerOptions extends MidSideEffectOptions {\n\twidth: NormalRange;\n}\n\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\nexport class StereoWidener extends MidSideEffect<StereoWidenerOptions> {\n\n\treadonly name: string = \"StereoWidener\";\n\n\t/**\n\t * The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.\n\t */\n\treadonly width: Signal<\"normalRange\">;\n\t\n\t/**\n\t * Two times the (1-width) for the mid channel\n\t */\n\tprivate _twoTimesWidthMid: Multiply;\n\t\n\t/**\n\t * Two times the width for the side channel\n\t */\n\tprivate _twoTimesWidthSide: Multiply;\n\t\n\t/**\n\t * Mid multiplier\n\t */\n\tprivate _midMult: Multiply;\n\t\n\t/**\n\t * 1 - width\n\t */\n\tprivate _oneMinusWidth: Subtract;\n\t\n\t/**\n\t * Side multiplier\n\t */\n\tprivate _sideMult: Multiply;\n\n\t/**\n\t * @param width The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t */\n\tconstructor(width?: NormalRange);\n\tconstructor(options?: Partial<StereoWidenerOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n\t\tconst options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n\t\tthis.width = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.width,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\treadOnly(this, [\"width\"]);\n\t\tthis._twoTimesWidthMid = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 2,\n\t\t});\n\t\tthis._twoTimesWidthSide = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 2,\n\t\t});\n\t\tthis._midMult = new Multiply({ context: this.context });\n\t\tthis._twoTimesWidthMid.connect(this._midMult.factor);\n\t\tthis.connectEffectMid(this._midMult);\n\n\t\tthis._oneMinusWidth = new Subtract({ context: this.context });\n\t\tthis._oneMinusWidth.connect(this._twoTimesWidthMid);\n\t\tconnect(this.context.getConstant(1), this._oneMinusWidth);\n\t\tthis.width.connect(this._oneMinusWidth.subtrahend);\n\n\t\tthis._sideMult = new Multiply({ context: this.context });\n\t\tthis.width.connect(this._twoTimesWidthSide);\n\t\tthis._twoTimesWidthSide.connect(this._sideMult.factor);\n\t\tthis.connectEffectSide(this._sideMult);\n\t}\n\n\tstatic getDefaults(): StereoWidenerOptions {\n\t\treturn Object.assign(MidSideEffect.getDefaults(), {\n\t\t\twidth: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.width.dispose();\n\t\tthis._midMult.dispose();\n\t\tthis._sideMult.dispose();\n\t\tthis._twoTimesWidthMid.dispose();\n\t\tthis._twoTimesWidthSide.dispose();\n\t\tthis._oneMinusWidth.dispose();\n\t\treturn this;\n\t}\n}\n","import { BaseContext } from \"../../core/context/BaseContext\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n\nexport interface SoloOptions extends ToneAudioNodeOptions {\n\tsolo: boolean;\n}\n\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode<SoloOptions> {\n\n\treadonly name: string = \"Solo\";\n\n\treadonly input: Gain;\n\treadonly output: Gain;\n\n\t/**\n\t * @param solo If the connection should be initially solo'ed.\n\t */\n\tconstructor(solo?: boolean);\n\tconstructor(options?: Partial<SoloOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n\t\tconst options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n\n\t\tthis.input = this.output = new Gain({\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tif (!Solo._allSolos.has(this.context)) {\n\t\t\tSolo._allSolos.set(this.context, new Set());\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).add(this);\n\n\t\t// set initially\n\t\tthis.solo = options.solo;\n\t}\n\n\tstatic getDefaults(): SoloOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tsolo: false,\n\t\t});\n\t}\n\n\t/**\n\t * Hold all of the solo'ed tracks belonging to a specific context\n\t */\n\tprivate static _allSolos: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Hold the currently solo'ed instance(s)\n\t */\n\tprivate static _soloed: Map<BaseContext, Set<Solo>> = new Map();\n\n\t/**\n\t * Isolates this instance and mutes all other instances of Solo.\n\t * Only one instance can be soloed at a time. A soloed\n\t * instance will report `solo=false` when another instance is soloed.\n\t */\n\tget solo(): boolean {\n\t\treturn this._isSoloed();\n\t}\n\tset solo(solo) {\n\t\tif (solo) {\n\t\t\tthis._addSolo();\n\t\t} else {\n\t\t\tthis._removeSolo();\n\t\t}\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).forEach(instance => instance._updateSolo());\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed\n\t */\n\tget muted(): boolean {\n\t\treturn this.input.gain.value === 0;\n\t}\n\n\t/**\n\t * Add this to the soloed array\n\t */\n\tprivate _addSolo(): void {\n\t\tif (!Solo._soloed.has(this.context)) {\n\t\t\tSolo._soloed.set(this.context, new Set());\n\t\t}\n\t\t(Solo._soloed.get(this.context) as Set<Solo>).add(this);\n\t}\n\n\t/**\n\t * Remove this from the soloed array\n\t */\n\tprivate _removeSolo(): void {\n\t\tif (Solo._soloed.has(this.context)) {\n\t\t\t(Solo._soloed.get(this.context) as Set<Solo>).delete(this);\n\t\t}\n\t}\n\n\t/**\n\t * Is this on the soloed array\n\t */\n\tprivate _isSoloed(): boolean {\n\t\treturn Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).has(this);\n\t}\n\n\t/**\n\t * Returns true if no one is soloed\n\t */\n\tprivate _noSolos(): boolean {\n\t\t// either does not have any soloed added\n\t\treturn !Solo._soloed.has(this.context) ||\n\t\t\t// or has a solo set but doesn't include any items\n\t\t\t(Solo._soloed.has(this.context) && (Solo._soloed.get(this.context) as Set<Solo>).size === 0);\n\t}\n\n\t/**\n\t * Solo the current instance and unsolo all other instances.\n\t */\n\tprivate _updateSolo(): void {\n\t\tif (this._isSoloed()) {\n\t\t\tthis.input.gain.value = 1;\n\t\t} else if (this._noSolos()) {\n\t\t\t// no one is soloed\n\t\t\tthis.input.gain.value = 1;\n\t\t} else {\n\t\t\tthis.input.gain.value = 0;\n\t\t}\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\t(Solo._allSolos.get(this.context) as Set<Solo>).delete(this);\n\t\tthis._removeSolo();\n\t\treturn this;\n\t}\n}\n","import { readOnly } from \"../../core/util/Interface\";\nimport { Param } from \"../../core/context/Param\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n\nexport interface PanVolOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode<PanVolOptions> {\n\n\treadonly name: string = \"PanVol\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The panning node\n\t */\n\tprivate _panner: Panner;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param pan the initial pan\n\t * @param volume The output volume.\n\t */\n\tconstructor(pan?: AudioRange, volume?: Decibels);\n\tconstructor(options?: Partial<PanVolOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n\t\tconst options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n\n\t\tthis._panner = this.input = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tchannelCount: options.channelCount,\n\t\t});\n\t\tthis.pan = this._panner.pan;\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\n\t\t// connections\n\t\tthis._panner.connect(this._volume);\n\t\tthis.mute = options.mute;\n\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): PanVolOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\tthis.pan.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n","import { AudioRange, Decibels } from \"../../core/type/Units\";\nimport { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { Param } from \"../../core/context/Param\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n\nexport interface ChannelOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tsolo: boolean;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls. \n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode<ChannelOptions> {\n\n\treadonly name: string = \"Channel\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The soloing interface\n\t */\n\tprivate _solo: Solo;\n\n\t/**\n\t * The panning and volume node\n\t */\n\tprivate _panVol: PanVol;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param volume The output volume.\n\t * @param pan the initial pan\n\t */\n\tconstructor(volume?: Decibels, pan?: AudioRange);\n\tconstructor(options?: Partial<ChannelOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n\t\tconst options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n\n\t\tthis._solo = this.input = new Solo({\n\t\t\tsolo: options.solo,\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis._panVol = this.output = new PanVol({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tvolume: options.volume,\n\t\t\tmute: options.mute,\n\t\t\tchannelCount: options.channelCount\n\t\t});\n\t\tthis.pan = this._panVol.pan;\n\t\tthis.volume = this._panVol.volume;\n\n\t\tthis._solo.connect(this._panVol);\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): ChannelOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tmute: false,\n\t\t\tsolo: false,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n\t */\n\tget solo(): boolean {\n\t\treturn this._solo.solo;\n\t}\n\tset solo(solo) {\n\t\tthis._solo.solo = solo;\n\t}\n\n\t/**\n\t * If the current instance is muted, i.e. another instance is soloed,\n\t * or the channel is muted\n\t */\n\tget muted(): boolean {\n\t\treturn this._solo.muted || this.mute;\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._panVol.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._panVol.mute = mute;\n\t}\n\n\t/**\n\t * Store the send/receive channels by name. \n\t */\n\tprivate static buses: Map<string, Gain> = new Map();\n\n\t/**\n\t * Get the gain node belonging to the bus name. Create it if\n\t * it doesn't exist\n\t * @param name The bus name\n\t */\n\tprivate _getBus(name: string): Gain {\n\t\tif (!Channel.buses.has(name)) {\n\t\t\tChannel.buses.set(name, new Gain({ context: this.context }));\n\t\t}\n\t\treturn Channel.buses.get(name) as Gain;\n\t}\n\n\t/**\n\t * Send audio to another channel using a string. `send` is a lot like\n\t * [[connect]], except it uses a string instead of an object. This can \n\t * be useful in large applications to decouple sections since [[send]]\n\t * and [[receive]] can be invoked separately in order to connect an object\n\t * @param name The channel name to send the audio\n\t * @param volume The amount of the signal to send. \n\t * \tDefaults to 0db, i.e. send the entire signal\n\t * @returns Returns the gain node of this connection.\n\t */\n\tsend(name: string, volume: Decibels = 0): Gain<\"decibels\"> {\n\t\tconst bus = this._getBus(name);\n\t\tconst sendKnob = new Gain({\n\t\t\tcontext: this.context,\n\t\t\tunits: \"decibels\",\n\t\t\tgain: volume,\n\t\t});\n\t\tthis.connect(sendKnob);\n\t\tsendKnob.connect(bus);\n\t\treturn sendKnob;\n\t}\n\n\t/**\n\t * Receive audio from a channel which was connected with [[send]]. \n\t * @param name The channel name to receive audio from.\n\t */\n\treceive(name: string): this {\n\t\tconst bus = this._getBus(name);\n\t\tbus.connect(this);\n\t\treturn this;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panVol.dispose();\n\t\tthis.pan.dispose();\n\t\tthis.volume.dispose();\n\t\tthis._solo.dispose();\n\t\treturn this;\n\t}\n}\n","import { Gain } from \"../../core/context/Gain\";\nimport { OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Merge } from \"./Merge\";\n\nexport type MonoOptions = ToneAudioNodeOptions;\n\n/**\n * Mono coerces the incoming mono or stereo signal into a mono signal\n * where both left and right channels have the same value. This can be useful\n * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).\n * @category Component\n */\nexport class Mono extends ToneAudioNode<MonoOptions> {\n\n\treadonly name: string = \"Mono\";\n\n\t/**\n\t * merge the signal\n\t */\n\tprivate _merge: Merge;\n\n\t/**\n\t * The summed output of the multiple inputs\n\t */\n\treadonly output: OutputNode;\n\n\t/**\n\t * The stereo signal to sum to mono\n\t */\n\treadonly input: Gain;\n\n\tconstructor(options?: Partial<MonoOptions>);\n\tconstructor() {\n\n\t\tsuper(optionsFromArguments(Mono.getDefaults(), arguments));\n\n\t\tthis.input = new Gain({ context: this.context });\n\n\t\tthis._merge = this.output = new Merge({\n\t\t\tchannels: 2,\n\t\t\tcontext: this.context,\n\t\t});\n\n\t\tthis.input.connect(this._merge, 0, 0);\n\t\tthis.input.connect(this._merge, 0, 1);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._merge.dispose();\n\t\tthis.input.dispose();\n\t\treturn this;\n\t}\n}\n","import { ToneAudioNode, ToneAudioNodeOptions } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n\nexport interface ListenerOptions extends ToneAudioNodeOptions{\n\tpositionX: number;\n\tpositionY: number;\n\tpositionZ: number;\n\tforwardX: number;\n\tforwardY: number;\n\tforwardZ: number;\n\tupX: number;\n\tupY: number;\n\tupZ: number;\n}\n\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you \n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context. \n */\nexport class Listener extends ToneAudioNode<ListenerOptions> {\n\n\treadonly name: string = \"Listener\";\n\n\t/**\n\t * The listener has no inputs or outputs. \n\t */\n\toutput: undefined; \n\tinput: undefined; \n\n\treadonly positionX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionX,\n\t})\n\n\treadonly positionY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionY,\n\t})\n\n\treadonly positionZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.positionZ,\n\t})\n\n\treadonly forwardX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardX,\n\t})\n\n\treadonly forwardY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardY,\n\t})\n\n\treadonly forwardZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.forwardZ,\n\t})\n\n\treadonly upX: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upX,\n\t})\n\n\treadonly upY: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upY,\n\t})\n\n\treadonly upZ: Param = new Param({\n\t\tcontext: this.context,\n\t\tparam: this.context.rawContext.listener.upZ,\n\t})\n\n\tstatic getDefaults(): ListenerOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\tpositionZ: 0,\n\t\t\tforwardX: 0,\n\t\t\tforwardY: 0,\n\t\t\tforwardZ: -1,\n\t\t\tupX: 0,\n\t\t\tupY: 1,\n\t\t\tupZ: 0,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.positionX.dispose();\n\t\tthis.positionY.dispose();\n\t\tthis.positionZ.dispose();\n\t\tthis.forwardX.dispose();\n\t\tthis.forwardY.dispose();\n\t\tthis.forwardZ.dispose();\n\t\tthis.upX.dispose();\n\t\tthis.upY.dispose();\n\t\tthis.upZ.dispose();\n\t\treturn this;\n\t}\n}\n\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(context => {\n\tcontext.listener = new Listener({ context });\n});\n\nonContextClose(context => {\n\tcontext.listener.dispose();\n});\n","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nimport { Seconds } from \"./core/type/Units\";\nexport { supported } from \"./core/context/AudioContext\";\n\n/**\n * The current audio context time of the global [[Context]]. \n * See [[Context.now]]\n * @category Core\n */\nexport function now(): Seconds {\n\treturn getContext().now();\n}\n\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate(): Seconds {\n\treturn getContext().immediate();\n}\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport(): import(\"./core/clock/Transport\").Transport {\n\treturn getContext().transport;\n}\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination(): import(\"./core/context/Destination\").Destination {\n\treturn getContext().destination;\n}\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener(): import(\"./core/context/Listener\").Listener {\n\treturn getContext().listener;\n}\n\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n\n/**\n * Get the singleton attached to the global context. \n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport function getDraw(): import(\"./core/util/Draw\").Draw {\n\treturn getContext().draw;\n}\n\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n\n/**\n * Promise which resolves when all of the loading promises are resolved. \n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n\treturn ToneAudioBuffer.loaded();\n}\n\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer: typeof ToneAudioBuffer = ToneAudioBuffer;\nexport const Buffers: typeof ToneAudioBuffers = ToneAudioBuffers;\nexport const BufferSource: typeof ToneBufferSource = ToneBufferSource;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    clipRule: \"evenodd\",\n    fillRule: \"evenodd\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 2,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m13.789 7.155c.141-.108.3-.157.456-.157.389 0 .755.306.755.749v8.501c0 .445-.367.75-.755.75-.157 0-.316-.05-.457-.159-1.554-1.203-4.199-3.252-5.498-4.258-.184-.142-.29-.36-.29-.592 0-.23.107-.449.291-.591zm-.289 7.563v-5.446l-3.522 2.719z\",\n    fillRule: \"nonzero\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeft);\nexport default __webpack_public_path__ + \"static/media/left.dcb7edeb3502aee914fcab1f913d295a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    clipRule: \"evenodd\",\n    fillRule: \"evenodd\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 2,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m10.211 7.155c-.141-.108-.3-.157-.456-.157-.389 0-.755.306-.755.749v8.501c0 .445.367.75.755.75.157 0 .316-.05.457-.159 1.554-1.203 4.199-3.252 5.498-4.258.184-.142.29-.36.29-.592 0-.23-.107-.449-.291-.591zm.289 7.563v-5.446l3.522 2.719z\",\n    fillRule: \"nonzero\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRight);\nexport default __webpack_public_path__ + \"static/media/right.cea9a3d02893995413ec870df51feff0.svg\";\nexport { ForwardRef as ReactComponent };","import Left from \"../images/left.svg\"\r\nimport Right from \"../images/right.svg\"\r\n\r\nexport default function Octaves(props) {\r\n    return (\r\n        <div className=\"octave-container\">\r\n            <span><img src={Left} onClick={props.left} className=\"left-arrow\" alt=\"left\"></img></span><span className=\"octave-label\">{props.octaveLevel}</span><span><img src={Right} onClick={props.right} className=\"right-arrow\" alt=\"right\"></img></span>\r\n            <label className=\"octave-label\">Octave</label>\r\n        </div>\r\n    )\r\n}","/**\n * @typedef {Object} MicrophonePluginParams\n * @property {MediaStreamConstraints} constraints The constraints parameter is a\n * MediaStreamConstaints object with two members: video and audio, describing\n * the media types requested. Either or both must be specified.\n * @property {number} bufferSize=4096 The buffer size in units of sample-frames.\n * If specified, the bufferSize must be one of the following values: `256`,\n * `512`, `1024`, `2048`, `4096`, `8192`, `16384`\n * @property {number} numberOfInputChannels=1 Integer specifying the number of\n * channels for this node's input. Values of up to 32 are supported.\n * @property {number} numberOfOutputChannels=1 Integer specifying the number of\n * channels for this node's output.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('microphone')`\n */\n\n/**\n * Visualize microphone input in a wavesurfer instance.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import MicrophonePlugin from 'wavesurfer.microphone.js';\n *\n * // commonjs\n * var MicrophonePlugin = require('wavesurfer.microphone.js');\n *\n * // if you are using <script> tags\n * var MicrophonePlugin = window.WaveSurfer.microphone;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MicrophonePlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class MicrophonePlugin {\n    /**\n     * Microphone plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {MicrophonePluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'microphone',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: MicrophonePlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n\n        this.active = false;\n        this.paused = false;\n        this.browser = this.detectBrowser();\n        this.reloadBufferFunction = e => this.reloadBuffer(e);\n\n        // cross-browser getUserMedia\n        const promisifiedOldGUM = (\n            constraints,\n            successCallback,\n            errorCallback\n        ) => {\n            // get a hold of getUserMedia, if present\n            const getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia;\n            // Some browsers just don't implement it - return a rejected\n            // promise with an error to keep a consistent interface\n            if (!getUserMedia) {\n                return Promise.reject(\n                    new Error('getUserMedia is not implemented in this browser')\n                );\n            }\n            // otherwise, wrap the call to the old navigator.getUserMedia with\n            // a Promise\n            return new Promise((successCallback, errorCallback) => {\n                getUserMedia.call(\n                    navigator,\n                    constraints,\n                    successCallback,\n                    errorCallback\n                );\n            });\n        };\n        // Older browsers might not implement mediaDevices at all, so we set an\n        // empty object first\n        if (navigator.mediaDevices === undefined) {\n            navigator.mediaDevices = {};\n        }\n        // Some browsers partially implement mediaDevices. We can't just assign\n        // an object with getUserMedia as it would overwrite existing\n        // properties. Here, we will just add the getUserMedia property if it's\n        // missing.\n        if (navigator.mediaDevices.getUserMedia === undefined) {\n            navigator.mediaDevices.getUserMedia = promisifiedOldGUM;\n        }\n        this.constraints = this.params.constraints || {\n            video: false,\n            audio: true\n        };\n        this.bufferSize = this.params.bufferSize || 4096;\n        this.numberOfInputChannels = this.params.numberOfInputChannels || 1;\n        this.numberOfOutputChannels = this.params.numberOfOutputChannels || 1;\n\n        this._onBackendCreated = () => {\n            // wavesurfer's AudioContext where we'll route the mic signal to\n            this.micContext = this.wavesurfer.backend.getAudioContext();\n        };\n    }\n\n    init() {\n        this.wavesurfer.on('backend-created', this._onBackendCreated);\n        if (this.wavesurfer.backend) {\n            this._onBackendCreated();\n        }\n    }\n\n    /**\n     * Destroy the microphone plugin.\n     */\n    destroy() {\n        // make sure the buffer is not redrawn during\n        // cleanup and demolition of this plugin.\n        this.paused = true;\n\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.stop();\n    }\n\n    /**\n     * Allow user to select audio input device, e.g. microphone, and\n     * start the visualization.\n     */\n    start() {\n        navigator.mediaDevices\n            .getUserMedia(this.constraints)\n            .then(data => this.gotStream(data))\n            .catch(data => this.deviceError(data));\n    }\n\n    /**\n     * Pause/resume visualization.\n     */\n    togglePlay() {\n        if (!this.active) {\n            // start it first\n            this.start();\n        } else {\n            // toggle paused\n            this.paused = !this.paused;\n\n            if (this.paused) {\n                this.pause();\n            } else {\n                this.play();\n            }\n        }\n    }\n\n    /**\n     * Play visualization.\n     */\n    play() {\n        this.paused = false;\n\n        this.connect();\n    }\n\n    /**\n     * Pause visualization.\n     */\n    pause() {\n        this.paused = true;\n\n        // disconnect sources so they can be used elsewhere\n        // (eg. during audio playback)\n        this.disconnect();\n    }\n\n    /**\n     * Stop the device stream and remove any remaining waveform drawing from\n     * the wavesurfer canvas.\n     */\n    stop() {\n        if (this.active) {\n            // stop visualization and device\n            this.stopDevice();\n\n            // empty last frame\n            this.wavesurfer.empty();\n        }\n    }\n\n    /**\n     * Stop the device and the visualization.\n     */\n    stopDevice() {\n        this.active = false;\n\n        // stop visualization\n        this.disconnect();\n\n        // stop stream from device\n        if (this.stream && this.stream.getTracks) {\n            this.stream.getTracks().forEach(stream => stream.stop());\n        }\n    }\n\n    /**\n     * Connect the media sources that feed the visualization.\n     */\n    connect() {\n        if (this.stream !== undefined) {\n            // Create a local buffer for data to be copied to the Wavesurfer buffer for Edge\n            if (this.browser.browser === 'edge') {\n                this.localAudioBuffer = this.micContext.createBuffer(\n                    this.numberOfInputChannels,\n                    this.bufferSize,\n                    this.micContext.sampleRate\n                );\n            }\n\n            // Create an AudioNode from the stream.\n            this.mediaStreamSource = this.micContext.createMediaStreamSource(\n                this.stream\n            );\n\n            this.levelChecker = this.micContext.createScriptProcessor(\n                this.bufferSize,\n                this.numberOfInputChannels,\n                this.numberOfOutputChannels\n            );\n            this.mediaStreamSource.connect(this.levelChecker);\n\n            this.levelChecker.connect(this.micContext.destination);\n            this.levelChecker.onaudioprocess = this.reloadBufferFunction;\n        }\n    }\n\n    /**\n     * Disconnect the media sources that feed the visualization.\n     */\n    disconnect() {\n        if (this.mediaStreamSource !== undefined) {\n            this.mediaStreamSource.disconnect();\n        }\n\n        if (this.levelChecker !== undefined) {\n            this.levelChecker.disconnect();\n            this.levelChecker.onaudioprocess = undefined;\n        }\n\n        if (this.localAudioBuffer !== undefined) {\n            this.localAudioBuffer = undefined;\n        }\n    }\n\n    /**\n     * Redraw the waveform.\n     *\n     * @param {object} event Audioprocess event\n     */\n    reloadBuffer(event) {\n        if (!this.paused) {\n            this.wavesurfer.empty();\n\n            if (this.browser.browser === 'edge') {\n                // copy audio data to a local audio buffer,\n                // from https://github.com/audiojs/audio-buffer-utils\n                let channel, l;\n                for (\n                    channel = 0,\n                    l = Math.min(\n                        this.localAudioBuffer.numberOfChannels,\n                        event.inputBuffer.numberOfChannels\n                    );\n                    channel < l;\n                    channel++\n                ) {\n                    this.localAudioBuffer\n                        .getChannelData(channel)\n                        .set(event.inputBuffer.getChannelData(channel));\n                }\n\n                this.wavesurfer.loadDecodedBuffer(this.localAudioBuffer);\n            } else {\n                this.wavesurfer.loadDecodedBuffer(event.inputBuffer);\n            }\n        }\n    }\n\n    /**\n     * Audio input device is ready.\n     *\n     * @param {MediaStream} stream The microphone's media stream.\n     */\n    gotStream(stream) {\n        this.stream = stream;\n        this.active = true;\n\n        // start visualization\n        this.play();\n\n        // notify listeners\n        this.fireEvent('deviceReady', stream);\n    }\n\n    /**\n     * Device error callback.\n     *\n     * @param {string} code Error message\n     */\n    deviceError(code) {\n        // notify listeners\n        this.fireEvent('deviceError', code);\n    }\n\n    /**\n     * Extract browser version out of the provided user agent string.\n     * @param {!string} uastring userAgent string.\n     * @param {!string} expr Regular expression used as match criteria.\n     * @param {!number} pos position in the version string to be returned.\n     * @return {!number} browser version.\n     */\n    extractVersion(uastring, expr, pos) {\n        const match = uastring.match(expr);\n        return match && match.length >= pos && parseInt(match[pos], 10);\n    }\n\n    /**\n     * Browser detector.\n     * @return {object} result containing browser, version and minVersion\n     *     properties.\n     */\n    detectBrowser() {\n        // Returned result object.\n        const result = {};\n        result.browser = null;\n        result.version = null;\n        result.minVersion = null;\n\n        // Non supported browser.\n        if (typeof window === 'undefined' || !window.navigator) {\n            result.browser = 'Not a supported browser.';\n            return result;\n        }\n\n        if (navigator.mozGetUserMedia) {\n            // Firefox\n            result.browser = 'firefox';\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /Firefox\\/(\\d+)\\./,\n                1\n            );\n            result.minVersion = 31;\n            return result;\n        } else if (navigator.webkitGetUserMedia) {\n            // Chrome/Chromium/Webview/Opera\n            result.browser = 'chrome';\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /Chrom(e|ium)\\/(\\d+)\\./,\n                2\n            );\n            result.minVersion = 38;\n            return result;\n        } else if (\n            navigator.mediaDevices &&\n            navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)\n        ) {\n            // Edge\n            result.browser = 'edge';\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /Edge\\/(\\d+).(\\d+)$/,\n                2\n            );\n            result.minVersion = 10547;\n            return result;\n        } else if (\n            window.RTCPeerConnection &&\n            navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)\n        ) {\n            // Safari\n            result.browser = 'safari';\n            result.minVersion = 11;\n            result.version = this.extractVersion(\n                navigator.userAgent,\n                /AppleWebKit\\/(\\d+)\\./,\n                1\n            );\n            return result;\n        }\n\n        // Non supported browser default.\n        result.browser = 'Not a supported browser.';\n        return result;\n    }\n}\n","export default function LoadButton(props) {\r\n\r\n    const { loadSound, mediaBlobUrl } = props\r\n\r\n    return (\r\n        <div className=\"load-container\">\r\n            <label name=\"sound-file\">\r\n                {/* <img className=\"open-logo\" src={OpenLogo} alt=\"open\"></img> */}\r\n                <span className=\"load-sound\">LOAD SOUND</span>\r\n                <input type=\"file\" id=\"sound-file\" hidden accept=\"audio/mp3\" onChange={(e) => loadSound(e)}></input>\r\n            </label>\r\n            {mediaBlobUrl ? <a download=\"Sample\" href={mediaBlobUrl} className=\"load-sound\">D/L SAMPLE</a> : \"\"}\r\n        </div>\r\n    )\r\n}","export default function MicButton(props) {\r\n\r\n    const { micState, toggleMic, MicLogo, StopLogo } = props\r\n\r\n    return (\r\n        <>\r\n            {micState === false ? <img className=\"mic-logo\" onClick={toggleMic} src={MicLogo} alt=\"mic\"></img> : <img className=\"stop-logo\" onClick={toggleMic} src={StopLogo} alt=\"stop\"></img>}\r\n        </>\r\n    )\r\n}","import React, { useRef } from 'react'\r\nimport Buttons from \"./buttons\"\r\nimport MicLogo from \"../images/mic.svg\"\r\nimport StopLogo from \"../images/stop.png\"\r\nimport WaveSurfer from \"wavesurfer.js\"\r\nimport * as Tone from \"tone\"\r\nimport Kick from \"../audio/808.wav\"\r\nimport Song from \"../audio/song.wav\"\r\nimport Octaves from \"./octaves\"\r\nimport RegionsPlugin from 'wavesurfer.js/src/plugin/regions'\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\nimport MicrophonePlugin from 'wavesurfer.js/src/plugin/microphone/index.js'\r\nimport LoadButton from './loadbutton'\r\nimport MicButton from './micbutton'\r\n//import { effArr } from './effects2'\r\n//import { effectParams } from './effects2'\r\n\r\nexport default function Display(props) {\r\n\r\n    console.log(\"display render\")\r\n\r\n    const { effectsToggle, setEffectsToggle, effArr, effectParams, setEffectsParams } = props\r\n\r\n\r\n    let sampler;\r\n\r\n    const wavesurfer = useRef()\r\n\r\n    const [octave, setOctave] = React.useState(4)\r\n\r\n    const [buttonState, setButtonState] = React.useState(getButtons())\r\n\r\n    const [micState, setMicState] = React.useState(false)\r\n\r\n\r\n\r\n    const [defaultSound, setDefaultSound] = React.useState(Kick)\r\n\r\n\r\n\r\n    const { status,\r\n        startRecording,\r\n        stopRecording,\r\n        mediaBlobUrl } =\r\n        useReactMediaRecorder({ audio: true });\r\n\r\n    //Updating the defaultsound state when mediablob/sound is changed\r\n    React.useEffect(() => {\r\n\r\n        if (mediaBlobUrl) {\r\n            setDefaultSound(prev => {\r\n                return mediaBlobUrl\r\n            })\r\n        }\r\n\r\n    }, [mediaBlobUrl])\r\n\r\n    //Renders wavesurfer and updates when defaultsound changes and/or mic turns on/off\r\n    React.useEffect(() => {\r\n        // Create a wavesurfer object\r\n        // More info about options here https://wavesurfer-js.org/docs/options.html\r\n        wavesurfer.current = WaveSurfer.create({\r\n            container: \"#waveform\",\r\n            waveColor: \"#567FFF\",\r\n            height: 146,\r\n            barGap: 1,\r\n            barWidth: 1,\r\n            barRadius: 1,\r\n            cursorWidth: 3,\r\n            cursorColor: \"#56w7FFF\",\r\n            plugins: [\r\n\r\n                MicrophonePlugin.create()\r\n                // RegionsPlugin.create({\r\n                //     regionsMinLength: 1,\r\n                //     maxRegions: 1,\r\n                //     regions: [\r\n                //         {\r\n                //             start: 1,\r\n                //             end: 3,\r\n                //             loop: false,\r\n                //             color: 'hsla(400, 100%, 30%, 0.5)'\r\n                //         },\r\n                //     ],\r\n                //     dragSelection: {\r\n                //         slop: 5\r\n                //     }\r\n                // })\r\n\r\n            ]\r\n        });\r\n\r\n        //load sound\r\n        wavesurfer.current.load(defaultSound)\r\n\r\n        // start/stop mic recording visual\r\n        if (micState) {\r\n            wavesurfer.current.microphone.start()\r\n        }\r\n\r\n        if (!micState) {\r\n            wavesurfer.current.microphone.stop()\r\n        }\r\n\r\n\r\n\r\n        console.log(\"running wavesurfer useffect\")\r\n        console.log(wavesurfer)\r\n\r\n        return function () {\r\n            wavesurfer.current.destroy()\r\n            //wavesurfer.current.backend.destroy()\r\n            // wavesurfer.current.backend = null\r\n            console.log('Still alive surfer?', wavesurfer)\r\n        }\r\n\r\n    }, [defaultSound, micState]);\r\n\r\n\r\n    //renders tone sampler and updates when defaultsound changes or octave of sample changes\r\n    React.useEffect(() => {\r\n\r\n        sampler = new Tone.Sampler({\r\n            urls: {\r\n                \"C4\": defaultSound\r\n            },\r\n            release: 1,\r\n\r\n        }).toDestination();\r\n\r\n\r\n        console.log(\"running tone sample useffect\")\r\n\r\n        return function () {\r\n            sampler.dispose('sampler')\r\n        }\r\n\r\n    }, [octave, defaultSound, effectsToggle, effectParams])\r\n\r\n\r\n\r\n    //connect and disconnect effect when effect turned on/off\r\n    function connectEffect() {\r\n\r\n        let selected = []\r\n\r\n        //loop through effectsToggle and connect effect if toggle switched on (true)\r\n        effectsToggle.forEach((effect, index, arr) => {\r\n            if (effect.state === true) {\r\n                sampler.connect(effArr[index].toDestination())\r\n                selected.push(index)\r\n                console.log(selected)\r\n            }\r\n        })\r\n\r\n        //loop through effectsToggle and connect effect if toggle switched of (false)\r\n        if (selected) {\r\n            selected.forEach((effectposition) => {\r\n                if (effectsToggle[effectposition].state === false) {\r\n                    sampler.disconnect(effArr[effectposition])\r\n\r\n                    // add something to removeeffect nodes - nodes increase when parameter changes\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //calls function to turn on/off effects\r\n    React.useEffect(() => {\r\n\r\n        connectEffect()\r\n        console.log('Running connect effect')\r\n\r\n    }, [effectsToggle, octave, effectParams])\r\n\r\n\r\n    //load sound for wavesurfer and tone sampler\r\n    function loadSound(e) {\r\n\r\n        const file = e.target.files[0];\r\n        const fileList = e.target.files\r\n        console.log(file, fileList);\r\n\r\n        // if (file) {\r\n\r\n        //     let reader = new FileReader();\r\n\r\n        //     // Read File as an ArrayBuffer\r\n        //     reader.readAsArrayBuffer(file);\r\n        //     reader.onload = function (evt) {\r\n        //         // Create a Blob providing as first argument a typed array with the file buffer\r\n        //         const result = evt.target.result\r\n        //         console.log(result)\r\n        //         let blob = new Blob([new Uint8Array(evt.target.result)]);\r\n        //         console.log(blob)\r\n        //         // Load the blob into Wavesurfer\r\n        //         wavesurfer.loadBlob(blob);\r\n\r\n        //     };\r\n\r\n        //     reader.onerror = function (evt) {\r\n        //         console.error(\"An error ocurred reading the file: \", evt);\r\n        //     };\r\n\r\n\r\n        // }\r\n\r\n        if (file) {\r\n\r\n            let reader2 = new FileReader();\r\n\r\n            // Read File as an ArrayBuffer\r\n            reader2.readAsDataURL(file);\r\n            reader2.onload = function (evt) {\r\n                // Create a Blob providing as first argument a typed array with the file buffer\r\n                const result = evt.target.result\r\n                console.log(result)\r\n                let blob2 = new Blob([new Uint8Array(evt.target.result)]);\r\n                console.log(result)\r\n\r\n                setDefaultSound(prev => {\r\n                    return result\r\n                })\r\n\r\n\r\n            };\r\n\r\n            reader2.onerror = function (evt) {\r\n                console.error(\"An error ocurred reading the file: \", evt);\r\n            };\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //left octave button functionality\r\n    function toggleLeft() {\r\n        setOctave(prev => {\r\n            let newOct = prev\r\n            newOct = newOct - 1\r\n            if (newOct <= 0) {\r\n                newOct = 0\r\n            }\r\n            return newOct\r\n        })\r\n    }\r\n\r\n    //right octave button functionality\r\n    function toggleRight() {\r\n        setOctave(prev => {\r\n            let newOct = prev\r\n            newOct = newOct + 1\r\n            if (newOct >= 8) {\r\n                newOct = 8\r\n            }\r\n            return newOct\r\n        })\r\n    }\r\n\r\n    //activates toggleRecording based on micState\r\n    React.useEffect(() => {\r\n        toggleRecording()\r\n\r\n    }, [micState])\r\n\r\n    // toggles micState ( used for mic img logo on UI )\r\n    function toggleMic() {\r\n        setMicState(prev => {\r\n            return !prev\r\n        })\r\n    }\r\n\r\n    console.log(`mic state is ${micState}`)\r\n\r\n\r\n    // starts and stop audio recording based on micState\r\n    function toggleRecording() {\r\n        if (micState === true) {\r\n            // micImg.setAttribute(\"style\", \"background-color:red\")\r\n            startRecording()\r\n\r\n        } else {\r\n            stopRecording()\r\n            // micImg.setAttribute(\"style\", \"background-color:initial\")\r\n        }\r\n    }\r\n\r\n    // sample pads connected to the tone sampler\r\n    function padClick(pad) {\r\n\r\n        console.log(pad, \"was clicked\")\r\n\r\n        switch (pad) {\r\n            case \"1\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttack([`C${octave}`], Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"2\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`C#${octave}`], 1, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"3\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`D${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"4\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`D#${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"5\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`E${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"6\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`F${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"7\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`F#${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"8\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`G${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"9\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`G#${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"10\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`A${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"11\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`A#${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n            case \"12\": Tone.loaded().then(() => {\r\n                sampler.releaseAll(Tone.context.currentTime);\r\n                sampler.triggerAttackRelease([`B${octave}`], 4, Tone.context.currentTime);\r\n            }).catch(() => console.log('Tone not loaded'))\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    // buttons created for mapping \r\n    function getButtons() {\r\n\r\n        let sampleElements = []\r\n        let notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\r\n        for (let i = 0; i < 12; i++) {\r\n            sampleElements.push({\r\n                name: `${i + 1}`,\r\n                note: notes[i]\r\n            })\r\n        }\r\n        return sampleElements\r\n    }\r\n\r\n    //map buttons to UI\r\n    let samples = buttonState.map((item, index) => {\r\n        return <Buttons handleClick={() => padClick(item.name)} key={index} padName={item.name} padNote={item.note}></Buttons>\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"ui-container\">\r\n            <div id=\"waveform\" className=\"wave-display\"></div>\r\n            <LoadButton mediaBlobUrl={mediaBlobUrl} loadSound={loadSound} />\r\n            <MicButton micState={micState} toggleMic={toggleMic} MicLogo={MicLogo} StopLogo={StopLogo} />\r\n            <Octaves left={toggleLeft} right={toggleRight} octaveLevel={octave} />\r\n            <div className=\"transport\">\r\n                {samples}\r\n            </div>\r\n        </div>\r\n    )\r\n}","let effectObj =\r\n    [\r\n        {\r\n            name: \"reverb\",\r\n            state: false,\r\n            key: \"0\"\r\n        },\r\n        {\r\n            name: \"delay\",\r\n            state: false,\r\n            key: \"1\"\r\n        },\r\n        {\r\n            name: \"stereo\",\r\n            state: false,\r\n            key: \"2\"\r\n        },\r\n        {\r\n            name: \"distortion\",\r\n            state: false,\r\n            key: \"3\"\r\n        },\r\n        {\r\n            name: \"phaser\",\r\n            state: false,\r\n            key: \"4\"\r\n        },\r\n        {\r\n            name: \"chorus\",\r\n            state: false,\r\n            key: \"5\"\r\n        },\r\n        {\r\n            name: \"crusher\",\r\n            state: false,\r\n            key: \"6\"\r\n        }\r\n    ]\r\n\r\n\r\nexport default effectObj","import React, { useEffect, useRef, useState } from 'react'\r\nimport Header from \"./components/header\"\r\nimport Display from \"./components/display\"\r\n//import Buttons from \"./components/buttons\"\r\n//import Media from \"./components/Media\"\r\n//import { Effects } from \"./components/Effects\"\r\nimport EffectsData from \"./components/EffectsData\"\r\nimport { FeedbackDelay, Reverb, StereoWidener, Distortion, BitCrusher, Phaser, Chorus } from 'tone'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  console.log(\"app render\")\r\n  // new array to convert object to booleans \r\n  //const effArr = new Array(EffectsData.length).fill(false)\r\n\r\n  // state of effect toggles\r\n  const [effectsToggle, setEffectsToggle] = React.useState(EffectsData)\r\n\r\n  // effect parameters\r\n  const [effectParams, setEffectParams] = useState({\r\n    verbDecay: 1,\r\n    delayTime: 0.5,\r\n    delayFeedback: 0.1,\r\n    stereoWidth: 1,\r\n    distort: 0.5,\r\n    phaserFreq: 15,\r\n    phaserOctaves: 5,\r\n    phaserBaseFreq: 1000,\r\n    chorusFreq: 4,\r\n    chorusDelayTime: 2.5,\r\n    chorusDepth: 0.5,\r\n    crusherBits: 9\r\n  })\r\n\r\n  // instances of effects created\r\n  let reverb = new Reverb(effectParams.verbDecay)\r\n  let delay = new FeedbackDelay(effectParams.delayTime, effectParams.delayFeedback)\r\n  let stereo = new StereoWidener(effectParams.stereoWidth)\r\n  let distortion = new Distortion(effectParams.distort)\r\n  let phaser = new Phaser({\r\n    frequency: effectParams.phaserFreq,\r\n    octaves: effectParams.phaserOctaves,\r\n    baseFrequency: effectParams.phaserBaseFreq\r\n  })\r\n  let chorus = new Chorus(effectParams.chorusFreq, effectParams.chorusDelayTime, effectParams.chorusDepth)\r\n  let crusher = new BitCrusher(effectParams.crusherBits)\r\n\r\n  // array of created effects\r\n  let effArr = [reverb, delay, stereo, distortion, phaser, chorus, crusher]\r\n\r\n  useEffect(() => {\r\n\r\n    return function () {\r\n      reverb = null\r\n      delay = null\r\n      stereo = null\r\n      distortion = null\r\n      phaser = null\r\n      chorus = null\r\n      crusher = null\r\n      effArr = null\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"main-app-body\">\r\n\r\n      <Header\r\n        effArr={effArr}\r\n        effectParams={effectParams}\r\n        setEffectParams={setEffectParams}\r\n        effectsToggle={effectsToggle}\r\n        setEffectsToggle={setEffectsToggle}\r\n      />\r\n\r\n      <div className=\"app\">\r\n        <Display\r\n          effArr={effArr}\r\n          effectParams={effectParams}\r\n          setEffectParams={setEffectParams}\r\n          effectsToggle={effectsToggle}\r\n          setEffectsToggle={setEffectsToggle}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './App.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <>\r\n    <App />\r\n  </>\r\n);\r\n\r\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","iter","Symbol","iterator","from","_i","_s","_e","_arr","_n","_d","call","next","done","push","value","err","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","undefined","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_Symbol$iterator","this","_automationEvents","_currenTime","_defaultValue","eventTime","findIndex","removedAutomationEvent","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","factory","require","PORT_MAP","WeakMap","ONGOING_REQUESTS","createBroker","brokerImplementation","partialBrokerImplementation","fullBrokerImplementation","connect","MessageChannel","port1","port2","port","portId","set","disconnect","get","isSupported","sender","ongoingRequests","has","Map","createOrGetOngoingRequests","addEventListener","message","data","id","reject","resolve","delete","error","result","start","isMessagePort","method","params","transferables","Promise","generateUniqueNumber","postMessage","notify","functions","entries","handler","_toConsumableArray","dashify","indefiniteArticle","_toConsumableArray__default","dashify__default","indefiniteArticle__default","applyModifiers","modifiers","reduce","modifiedName","modifier","head","charAt","toUpperCase","tail","concat","buildRegex","variable","expression","map","join","RegExp","preRenderString","string","parameters","expressionRegex","variables","expressionResult","exec","modifiersRegex","modifiersRegexResult","preRenderedParts","parts","part","split","prts","prt","prmtrs","missingParameters","renderedParts","preRenderedPart","compile","template","knownParameters","arguments","renderCode","code","renderMessage","render","causeOrMissingParameters","optionalCause","cause","status","str","options","trim","replace","m","condense","toLowerCase","wrap","characterize","encode","recordingId","timeslice","record","sampleRate","typedArrays","buffer","blob","Blob","url","URL","createObjectURL","extendableMediaRecorderWavEncoder","worker","Worker","load","revokeObjectURL","encoderIds","Set","encoderId","arrayBuffers","instantiate","mimeType","addUniqueNumber","register","mediaEncoderHost","loadWorker","createInvalidModificationError","DOMException","createNotSupportedError","observable","noop","rethrow","emitNotSupportedError","observer","window","wrapSubscribeFunction","patch","toObserver","emptyFunction","isNextFunction","args","innerSubscribe","subscribe","unsubscribe","createWrapSubscribeFunction","arg","complete","bind","mutations","createAnimationFrame","htmlElement","MutationObserver","mutationObserver","records","observe","createMutations","mapSubscribableThing","subscribableThing","createMapSubscribableThing","prependSubscribableThing","prependedValue","createPrependSubscribableThing","on","createAttribute","createGeolocation","createIntersections","createMediaDevices","createMediaQueryMatch","createMetrics","createMidiInputs","createMidiOutputs","listener","event","removeEventListener","createOn","createOnline","createPermissionState","createReports","createResizes","createUnhandledRejection","createVideoFrame","createWakeLock","JSON_RPC_ERROR_CODES","addRecorderAudioWorkletModule","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createAddRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createListener","createPostMessage","validateState","audioWorkletNodeConstructor","context","audioWorkletNode","channelCountMode","numberOfInputs","numberOfOutputs","state","defineProperties","pause","encoderPort","resume","stop","createRecorderAudioWorkletNodeFactory","ongoingRequest","createPostMessageFactory","expectedStates","currentState","includes","expectedState","ERROR_MESSAGE","createPromisedAudioNodesEncoderIdAndPort","audioBuffer","audioContext","channelCount","mediaStream","AudioWorkletNode","audioBufferSourceNode","AudioBufferSourceNode","mediaStreamAudioSourceNode","MediaStreamAudioSourceNode","recorderAudioWorkletNode","encoderRegexes","createBlobEvent","nativeBlobEventConstructor","blobEventInit","eventInit","fakeBlobEvent","Event","createBlobEventFactory","BlobEvent","createNativeBlobEventConstructor","createWebAudioMediaRecorder","createInvalidStateError","eventTarget","getAudioTracks","_a","getSettings","MinimalAudioContext","latencyHint","max","baseLatency","AudioBuffer","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","intervalId","promisedAudioNodesAndEncoderId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","dispatchEvent","requestNextPartialRecording","clearTimeout","then","catch","suspend","getVideoTracks","audioTracks","all","onended","currentTime","tracks","getTracks","ErrorEvent","setInterval","currentTracks","some","track","createWebAudioMediaRecorderFactory","readVariableSizeInteger","readVariableSizeIntegerLength","dataView","offset","firstDataByteOffset","byteLength","getUint8","createReadVariableSizeInteger","byte","readElementContent","lengthAndValue","content","numberOfSamples","BYTES_PER_ELEMENT","elementOffset","j","getFloat32","createReadElementContent","readElementType","createReadElementType","decodeWebMChunk","elementType","contents","currentElementType","lengthAndType","contentAndLength","createDecodeWebMChunk","createWebmPcmMediaRecorder","nativeMediaRecorderConstructor","nativeMediaRecorder","stopRecording","isRecording","isStopped","pendingInvocations","promisedDataViewElementTypeEncoderIdAndPort","arrayBuffer","currentDataView","MultiBufferDataView","buffers","byteOffset","remainingDataView","forEach","close","createWebmPcmMediaRecorderFactory","createEventTarget","document","createElement","createEventTargetFactory","MediaRecorder","createNativeMediaRecorderConstructor","createNativeMediaRecorder","stream","mediaRecorderOptions","bufferedBlobs","dataAvailableListeners","errorListeners","stopListeners","isActive","patchedEventListener","setTimeout","wasActive","returnValue","dataAvailableListener","errorListener","stopListener","startsWith","createNativeMediaRecorderFactory","mediaRecorderConstructor","eventTargetConstructor","isTypeSupported","internalMediaRecorder","_internalMediaRecorder","regex","_ondataavailable","_onerror","_onpause","_onresume","_onstart","_onstop","boundListener","createMediaRecorderConstructor","wrapEventListener","nativeEventTarget","_listeners","_nativeEventTarget","wrappedEventListener","createEventTargetConstructor","eventListener","currentTarget","handleEvent","MediaStream","canvasElement","getContext","captureStream","mediaRecorder","createIsSupportedPromise","rgstr","createAddUniqueNumber","number","add","createCache","lastNumberWeakMap","collection","nextNumber","MAX_SAFE_INTEGER","Number","TWO_TO_THE_POWER_OF_TWENTY_NINE","TWO_TO_THE_POWER_OF_THIRTY","createGenerateUniqueNumber","cache","lastNumber","size","random","LAST_NUMBER_WEAK_MAP","phrase","word","match","l_word","alt_cases","indexOf","regexes","_createForOfIteratorHelper","allowArrayLike","it","_unsupportedIterableToArray","F","s","f","normalCompletion","didErr","step","_e2","_arrayLikeToArray","RangeError","availableBytes","_step","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","_iterator","byteLengthOfDataView","DataView","_byteLengthOfDataView","_buffers","_byteLength","_byteOffset","_dataViews","_internalBuffer","ArrayBuffer","littleEndian","setUint8","getFloat64","getInt16","getInt32","_this$_findDataViewWi","_findDataViewWithOffset","_this$_findDataViewWi2","byteOffsetOfDataView","getInt8","getUint16","getUint32","_this$_findDataViewWi3","_this$_findDataViewWi4","setFloat32","setFloat64","setInt16","setInt32","_this$_findDataViewWi5","_this$_findDataViewWi6","setInt8","setUint16","setUint32","_this$_findDataViewWi7","_this$_findDataViewWi8","_step2","_iterator2","byteOffsetOfNextDataView","aa","ca","p","a","b","c","encodeURIComponent","da","ea","fa","ha","ia","ja","hasOwnProperty","ka","la","ma","v","d","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","A","assign","Ma","stack","Na","Oa","prepareStackTrace","Reflect","construct","l","h","k","displayName","Pa","tag","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","keys","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","apply","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","isDefaultPrevented","defaultPrevented","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","String","fromCharCode","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","week","me","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","pf","qf","rf","sf","capture","passive","t","J","x","u","w","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Jf","queueMicrotask","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","console","Ni","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__awaiter","thisArg","_arguments","generator","fulfilled","rejected","__generator","_","label","sent","trys","ops","verb","op","pop","ReactMediaRecorder","useReactMediaRecorder","RecorderErrors","extendable_media_recorder_1","react_1","extendable_media_recorder_wav_encoder_1","_this","_b","audio","_c","video","onStop","onStart","blobPropertyBag","_f","screen","_g","_h","customMediaStream","_j","stopStreamsOnStop","_k","askPermissionOnMount","mediaChunks","_l","setStatus","_m","isAudioMuted","setIsAudioMuted","_o","mediaBlobUrl","setMediaBlobUrl","_p","setError","getMediaStream","requiredMedia","stream_1","error_1","navigator","mediaDevices","getDisplayMedia","getUserMedia","audioTrack","addTrack","checkConstraints","mediaType","supportedMediaConstraints","getSupportedConstraints","unSupportedConstraints","filter","constraint","clone","onRecordingActive","onRecordingStart","onRecordingStop","chunk","blobProperty","muteAudio","mute","enabled","unMuteAudio","startRecording","readyState","active","ondataavailable","onstop","onstart","onerror","pauseRecording","resumeRecording","previewStream","previewAudioStream","clearBlobUrl","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","expirationTime","priorityLevel","scheduling","isInputPending","onmessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","getValueForKey","pickElementFromSet","predicate","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","output","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","DEFAULT_OPTIONS","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","wrapAudioBufferGetChannelDataMethod","getChannelData","channel","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","loop","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","trace","audioParams","isAudioBufferSourceNode","isBiquadFilterNode","detune","frequency","gain","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","pan","audioParamConnections","deactivateAudioGraph","destination","isValidLatencyHint","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","ignoreDuplicates","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","nativeAudioWorkletNodeConstructor","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","chnnlDt","inputBuffer","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","connectionsToDestination","connection","destinationOrOutput","clear","filteredConnections","addConnectionToAudioParamOfAudioContext","isOffline","outputs","eventListeners","nativeAudioParam","partialConnection","deleteActiveInputConnectionToAudioParam","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","_map","parameterData","processorOptions","copyFromChannel","parent","channelNumber","bufferOffset","slicedInput","createNestedArrays","arrays","array","getAudioWorkletProcessor","nativeOfflineAudioContext","proxy","nodeToProcessorMap","nativeAudioWorkletNode","processBuffer","renderedBuffer","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","colno","filename","lineno","disableNormalization","detachArrayBuffer","closeAndResolve","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","ratio","release","threshold","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","convertedFeedback","Float64Array","convertedFeedforward","filteredBuffer","fill","testPromiseSupport","uint32Array","Uint32Array","promise","decodeAudioData","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","round","log2","cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","onmessageerror","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","wrapChannelSplitterNode","interceptConnections","original","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","denominator","evaluatePolynomial","coefficient","ongoingTests","testResults","contextStore","audioNodeConnectionsStore","unit32Array","audioParamConnectionsStore","createNativeScriptProcessorNode","bufferSize","periodicWave","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createUnknownError","curve","oversample","getFirstSample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","getPrototypeOf","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","setValueAtTime","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","createGetAudioNodeTailTime","cacheTestResult","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","audioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","createAnalyserNode","renderedNativeAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","createNativeAudioWorkletNodeConstructor","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","_nativeAudioNode","isPassive","isNewConnectionToAudioNode","maxValue","isNewConnectionToAudioParam","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","tailTimeTimeoutIds","tailTime","tailTimeTimeoutId","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","analyserNodeRenderer","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","createNativeAudioBufferSourceNodeFactory","clampedOffset","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","minValue","automationEventList","audioParamRenderer","cancelAndHoldAtTime","flush","previousLastEvent","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","isFinite","setTargetAtTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","wrappedListener","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","biquadFilterNodeRenderer","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","channelMergerNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","createChannelMergerNodeRenderer","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelMergerNodeConstructor","channelMergerNodeRenderer","createChannelMergerNodeConstructor","createChannelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","channelSplitterNodeConstructor","sanitizeChannelSplitterOptions","channelSplitterNodeRenderer","createChannelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","createConstantSourceNodeRenderer","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConstantSourceNodeRendererFactory","constantSourceNodeConstructor","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","createNativeConvolverNode","nativeConvolverNode","createConvolver","normalize","createNativeConvolverNodeFactory","createConvolverNodeRenderer","renderedNativeConvolverNodes","createConvolverNode","renderedNativeConvolverNode","createConvolverNodeRendererFactory","convolverNodeConstructor","convolverNodeRenderer","_nativeConvolverNode","createConvolverNodeConstructor","createDelayNodeRenderer","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDelayNodeRendererFactory","delayNodeConstructor","delayNodeRenderer","_delayTime","createDelayNodeConstructor","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressorNodeRenderer","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","dynamicsCompressorNodeConstructor","dynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","createGainNodeRenderer","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGainNodeRendererFactory","gainNodeConstructor","gainNodeRenderer","createGainNodeConstructor","createNativeIIRFilterNodeFaker","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","outputBuffer","nyquist","nativeIIRFilterNodeFaker","omega","PI","cos","sin","response","sqrt","atan2","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","createIIRFilterNodeRendererFactory","createNativeIIRFilterNode","createNativeIIRFilterNodeFactory","iIRFilterNodeConstructor","iirFilterNodeRenderer","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createAudioListener","nativeListener","forwardX","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","orientation","setOrientation","positon","setPosition","createSetOrientation","createSetPosition","createFakeAudioParam","constantSourceNode","forwardY","forwardZ","upX","upY","upZ","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","createNativePannerNode","nativePannerNode","createNativePannerNodeFactory","createPannerNodeRenderer","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","pannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","createNativePeriodicWave","imag","real","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","periodicWaveConstructor","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createPeriodicWaveConstructor","nativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","createNativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","stereoPannerNodeRenderer","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","createWaveShaperNode","renderedNativeWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","waveShaperNodeRenderer","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","fn","currentFrame","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","evaluateSource","fetchSource","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","audioWorklet","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","patchedAudioWorkletProcessor","memberDefinition","bufferRegistration","addModule","nativeContextOrBackupOfflineAudioContext","finally","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","createAddAudioWorkletModule","script","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","onload","createEvaluateSource","createAbortError","fetch","createFetchSource","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","audioData","fail","createDecodeAudioData","baseAudioContextConstructor","_audioWorklet","constraints","successCallback","errorCallback","createBaseAudioContextConstructor","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_nativeMediaElementAudioSourceNode","mediaElement","createMediaElementAudioSourceNodeConstructor","createMediaElementSource","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","createMediaStreamAudioDestinationNodeConstructor","createMediaStreamDestination","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","createMediaStreamAudioSourceNodeConstructor","audioStreamTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrack","createMediaStreamTrackSource","kind","createNativeMediaStreamTrackAudioSourceNodeFactory","mediaStreamTrackAudioSourceNodeConstructor","nativeMediaStreamTrackAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","audioContextConstructor","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","resolvePromise","createAudioContextConstructor","getUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","patchedEventListeners","unpatchedEventListener","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","renderedNativeAudioWorkletNodeOrGainNode","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","sanitizeAudioWorkletNodeOptions","testAudioWorkletNodeOptionsClonability","audioWorkletNodeRenderer","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","minimalAudioContextConstructor","createMinimalAudioContextConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","offlineAudioContextConstructor","createMinimalOfflineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createOfflineAudioContextConstructor","isAnyAudioContext","createIsAnyAudioContext","isAnyAudioNode","audioNodeStore","createIsAnyAudioNode","isAnyAudioParam","createIsAnyAudioParam","isAnyOfflineAudioContext","createIsAnyOfflineAudioContext","self","CanvasEntry","wave","waveCtx","progress","progressCtx","canvasContextAttributes","elementWidth","totalWidth","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","getFillStyle","ctx","CanvasGradient","waveGradient","createLinearGradient","addColorStop","vertical","setTransform","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","peaks","absmax","halfH","offsetY","drawLineToContext","peak","first","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","halfPixel","format","quality","toBlob","toDataURL","Drawer","container","util","withOrientation","pixelRatio","lastPos","wrapper","styles","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","noPrevent","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollWidth","clamp","wrapperBbox","rtl","right","orientedEvent","_this2","scrollbarHeight","offsetHeight","clientHeight","bottom","interact","fireEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","rate","autoCenterRate","newWidth","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","domElement","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","barRadius","createWrapper","createElements","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","updateDimensions","leftOffset","initWave","initProgress","lastEntry","parentElement","frame","_this3","prepareDraw","hasMinVals","peakIndexScale","bar","_this4","barGap","peakIndex","peakIndexRange","peakIndexEnd","newPeak","abs","barMinHeight","reflectedPeaks","_this5","drawLine","splitChannelsOptions","channelColors","_this6","setFillStyles","applyCanvasTransforms","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","drawIndex","normalizedMax","channels","_this7","overallAbsMax","filteredChannels","hideChannel","overlay","setHeight","relativeNormalization","channelPeaks","absMax","barHeight","val","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","media","preload","_get","analyser","resumeAudioContext","destroyWebAudio","MediaElement","paused","play","volume","elementPosition","isMuted","onPlayEnd","mediaListeners","canplay","ended","seeked","volumechange","muted","onAudioProcess","isPaused","getCurrentTime","controls","mediaControls","autoplay","prevMedia","querySelector","_load","elt","HTMLMediaElement","_setupMediaListeners","setVolume","explicitDuration","seekable","getDuration","clearPlayEnd","seekTo","setPlayEnd","_onPlayEnd","un","deviceId","setSinkId","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","uncachedRangePairs","peakCacheRangePairs","fetchHeaders","Headers","fetchRequest","Request","controller","AbortController","requestHeaders","header","append","responseType","fetchOptions","headers","redirect","referrer","signal","progressAvailable","contentLength","onProgress","Response","ReadableStream","ProgressHandler","errMsg","json","_reader","getReader","total","parseInt","loaded","read","lengthComputable","enqueue","func","prefix","largest","smallest","_disabledEventEmissions","handlers","eventNames","_isDisabledEventEmission","isProxy","obj","prop","receiver","mapProp","verticalPropMap","offsetTop","offsetWidth","preventClickHandler","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","tmp","audioSilentMode","disableRemotePlayback","remove","WaveSurfer","_defineProperty","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","ignoreSilenceMode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","deviceXDPI","logicalXDPI","plugins","responsive","skipLength","xhr","defaultParams","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","backends","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","pluginStaticProp","Instance","getOwnPropertyNames","destroyPlugin","init","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","_this8","isWebAudioBackend","oldScrollParent","getPlaybackRate","setMute","filters","channelIdx","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","_this9","loadDecodedBuffer","reader","FileReader","_this10","loadArrayBuffer","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","warn","loadBuffer","loadMediaElement","_this11","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","_this12","_this13","request","fetchFile","_this14","percentComplete","accuracy","noWindow","blobJSON","objURL","open","cancel","abort","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","__VERSION__","PLAYING","PAUSED","FINISHED","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","stateBehaviors","mergedPeaks","offlineAc","scriptNode","splitPeaks","sinkStreamDestination","sinkAudioElement","WaveSurferAudioContext","WaveSurferOfflineAudioContext","setLength","setFilters","disconnectFilters","prev","curr","scriptBufferSize","createJavaScriptNode","Audio","srcObject","errback","getOfflineAudioContext","newBuffer","sampleSize","sampleStep","chan","closeAudioContext","createSource","noteGrainOn","noteOff","adjustedTime","wait","timeout","timestamp","debounced","__webpack_module_cache__","__webpack_exports__","moduleId","__webpack_modules__","_assertThisInitialized","ReferenceError","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","_createSuper","Derived","hasNativeReflectConstruct","sham","Boolean","Super","NewTarget","possibleConstructorReturn","_getPrototypeOf","setPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","_possibleConstructorReturn","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","_typeof","__webpack_require__","cachedModule","getter","definition","effectsToggle","onChange","effectParams","effArr","setEffectParams","reverbRangeInput","setEffArr","reverbRangeDiv","className","htmlFor","later","newValue","newPosition","verbDecay","Header","setEffectsToggle","modalShow","setModalShow","modalStyle","PacLogo","alt","effectPosition","updatedCheckedState","effect","Buttons","handleClick","padNote","assert","statement","assertRange","gte","lte","assertContextRunning","defaultLogger","isUndef","isDefined","isFunction","isNumber","isObject","isString","isNote","createAudioContext","stdAudioContext","createOfflineAudioContext","stdOfflineAudioContext","theWindow","hasAudioContext","_superPropBase","desc","__decorate","decorators","decorate","Ticker","updateInterval","_callback","_type","_updateInterval","_createClock","toFixed","blobUrl","_worker","_timeout","_createTimeout","_createWorker","terminate","interval","_disposeClock","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","deepMerge","sources","optionsFromArguments","defaults","argsArray","objKey","opts","partOfDefaults","defaultArg","given","omitFromObject","omit","Tone","debug","_wasDisposed","EPSILON","GT","GTE","EQ","LT","Timeline","_timeline","getDefaults","memory","increasing","lastValue","_search","diff","after","beginning","midPoint","nextEvent","testEvent","lowerBound","upperBound","_iterate","notifyNewContext","onContextInit","notifyCloseContext","onContextClose","closeContext","Emitter","eventName","_events","boundCallback","off","eventList","constr","BaseContext","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","_ticker","emit","clockSource","_timeoutLoop","_setLatencyHint","lookAhead","feedForward","initialize","_transport","_draw","stdAudioWorkletNode","createAudioWorkletNode","rawContext","promises","_latencyHint","hint","lookAheadValue","constant","dispose","firstEvent","peek","intervalFn","DummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_element","_audioData","_name","_options","_url","_fn","_id","_interval","_val","readOnly","noOp","ToneAudioBuffer","_buffer","_reversed","_reverse","doneLoading","downloads","isMultidimensional","multiChannelArray","chanNum","fromArray","outputArray","numChannels","channelArray","ret","startSamples","endSamples","retBuffer","subarray","rev","matches","extensions","extension","ext","supportsType","baseUrl","endsWith","canPlayType","OfflineContext","_currentTime","_duration","asynchronous","yieldEvery","workletsAreReady","_renderClock","dummyContext","globalContext","setContext","printString","intervalToFrequencyRatio","A4","ftom","ftomf","TimeBaseClass","units","defaultUnits","_units","_expressions","_getExpressions","hz","_frequencyToUnits","parseFloat","regexp","_ticksToUnits","_beatsToUnits","_getTimeSignature","dot","numericValue","scalar","_secondsToUnits","samples","tr","fromType","_noArg","typeName","quantity","expr","matching","freq","beats","_getBpm","ticks","_getPPQ","_now","transport","bpm","timeSignature","PPQ","toSeconds","toTicks","toFrequency","toMidi","TimeClass","quantize","quantTo","nextSubdivision","subdiv","subdivision","ideal","testNotations","power","closest","closestSeconds","notation","notationSeconds","quarterTime","quarters","measures","sixteenths","sixteenthString","FrequencyClass","midi","mtof","note","pitch","octave","noteNumber","noteToScaleIndex","intervals","transpose","scaleIndexToNote","setA4","cbb","cx","dbb","dx","ebb","ex","fbb","fx","gbb","gx","abb","ax","bbb","bx","TransportTimeClass","ToneWithContext","defaultContext","attribute","member","_getPartialProperties","StateTimeline","initial","_initial","setStateAtTime","Param","overridden","_minOutput","_param","_swappable","swappable","_initialValue","convert","_minValue","_maxValue","_toType","getValueAtTime","_fromType","_is","LN10","computedTime","_assertRange","getAfter","before","beforeValue","previous","getBefore","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","currentVal","rampTime","setRampPoint","exponentialApproachValueAtTime","scaling","startingValue","segTime","valueAtTime","sampleTime","exponentialRampTo","linearRampTo","previousEvent","subdivisions","forEachAfter","t0","v0","v1","t1","ToneAudioNode","_internalChannels","nodeList","_isAudioNode","_getInternalNodes","_getChannelProperties","_setChannelProperties","outputNum","inputNum","toDestination","nodes","connectSeries","srcNode","dstNode","outputNumber","inputNumber","Gain","_gainNode","OneShotSource","_stopTime","getStateAtTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","fadeInTime","_stopGain","cancelStop","fadeOutTime","targetRampTo","additionalTail","_stopSource","disposeCallback","requestIdleCallback","ToneConstantSource","_startGain","Signal","override","_constantSource","connectSignal","rampTo","TickParam","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","currentTick","getTicksAtTime","getTimeOfTick","tick","delta","sol1","getDurationOfTicks","computedDuration","startTicks","TickSignal","ticksToTime","timeToTicks","TickSource","_tickOffset","setTicksAtTime","stopEvent","getLastState","tmpEvent","lastState","elapsedTicks","forEachBetween","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","absoluteTicks","lastStateEvent","forEachTickBetween","maxStartTime","nextTickTime","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","mixin","Delay","maxDelayInSeconds","maxDelay","_maxDelay","_delayNode","ToneAudioBuffers","_loadingCount","urls","_bufferLoaded","TicksClass","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","cancelAnimationFrame","draw","IntervalTimeline","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","results","_removeNode","forEachFrom","replacement","isLeftChild","_setRoot","_replaceNodeInParent","temp","getBalance","pivotNode","balance","_rotateLeft","_rotateRight","low","allNodes","traverse","searchAfter","high","_left","_right","point","Volume","_unmutedVolume","Destination","TimelineValue","TransportEvent","_eventId","_once","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_createEvents","scheduleOnce","Transport","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","tickTime","amount","forEachAtTime","_addEvent","eventId","timeline","computedAfter","offsetTicks","timeSig","endPosition","toNotation","toBarsBeatsSixteenths","remainingTicks","computedFreq","ratioSignal","syncedSignal","swing","swingSubdivision","Source","_synced","_scheduled","_syncedStart","_syncedStop","_volume","_clampToCurrentTime","sched","schedule","_start","restart","getNextState","_stop","stateEvent","startOffset","unsync","ToneBufferSource","_sourceStarted","_sourceStopped","computedOffset","loopDuration","computedDur","Noise","_noiseBuffers","BUFFER_LENGTH","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","generateWaveform","ToneOscillatorNode","_oscillator","Oscillator","_partials","partials","_partialCount","partialCount","baseType","phase","_wave","syncSignal","unsyncSignal","_periodicWaveCache","find","description","_phase","arrayA","arrayB","oscProps","isBasicType","_getCachedPeriodicWave","_getRealImaginary","partial","fullPartials","periodicWaveSize","piFactor","twoPi","_inverseFFT","SignalOperator","WaveShaper","_shaper","mapping","setMap","normalized","oversampling","AudioToGain","_norm","Multiply","_mult","factor","AMOscillator","_modulationScale","_modulationNode","_carrier","_modulator","modulationType","harmonicity","FMOscillator","modulationIndex","PulseOscillator","_widthGate","_thresh","_triangle","FatOscillator","_oscillators","_spread","spread","_forEach","osc","PWMOscillator","sourceType","_scale","_pulse","modulationFrequency","carrierType","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","_sourceType","substr","_createNewOscillator","_getOscType","oscType","OscConstructor","oldOsc","blockTime","sType","mType","Add","_sum","addend","Scale","_add","_min","_max","_setRange","Zero","getConstant","LFO","_stoppedValue","_clampValue","_amplitudeGain","amplitude","_stoppedSignal","_zeros","_a2g","_scaler","sync","syncFrequency","unsyncFrequency","getInitialValue","_setStoppedValue","currentMin","currentMax","valueMap","propertyKey","timeRange","Player","_activeSources","_onload","autostart","origDuration","_onSourceEnd","implicitEnd","GainToAudio","Negate","_multiply","Subtract","_neg","subtrahend","Envelope","_sig","decay","sustain","attackCurve","releaseCurve","decayCurve","direction","curveName","EnvelopeCurves","curveDef","_getCurve","_attackCurve","_setCurve","_releaseCurve","_decayCurve","velocity","originalAttack","currentValue","attackRate","remainingDistance","decayValue","decayStart","triggerAttack","triggerRelease","attackPortion","envelopeDuration","totalDuration","sustainTime","triggerAttackRelease","curveLen","cosineCurve","rippleCurve","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","out","bounce","In","Out","cosine","exponential","linear","ripple","sine","Instrument","_original_triggerAttack","_original_triggerRelease","_syncState","_syncMethod","changed","timePosition","originalMethod","Monophonic","portamento","onsilence","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","computedFrequency","getLevelAtTime","portTime","AmplitudeEnvelope","Synth","envelope","computedAttack","computedDecay","MembraneSynth","pitchDecay","octaves","hertz","maxNote","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","ToneAudioWorklet","workletOptions","_audioWorkletName","_dummyGain","_dummyParam","disposed","_worklet","onReady","Sampler","urlMap","mid","notes","midiFloat","remainder","difference","_findClosest","closestNote","CrossFade","_panner","_split","_g2a","fade","Effect","_dryWet","wet","effectSend","effectReturn","fan","Panner","workletName","BitCrusher","_bitCrusherWorklet","BitCrusherWorklet","bits","connectEffect","setParam","Split","_splitter","Merge","_merger","StereoEffect","_merge","StereoFeedbackEffect","_feedbackL","_feedbackR","_feedbackSplit","_feedbackMerge","Chorus","_depth","depth","_lfoL","_lfoR","_delayNodeL","_delayNodeR","connectEffectLeft","connectEffectRight","deviation","Distortion","_distortion","distortion","deg","FeedbackEffect","_feedbackGain","FeedbackDelay","Phaser","_baseFrequency","baseFrequency","_octaves","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","Reverb","_convolver","ready","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","merge","renderPromise","MidSideSplit","_midAdd","SQRT1_2","_sideSubtract","side","MidSideMerge","_leftMult","_rightMult","MidSideEffect","_midSideMerge","_midSideSplit","_midSend","_sideSend","_midReturn","_sideReturn","StereoWidener","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","connectEffectMid","_oneMinusWidth","_sideMult","connectEffectSide","Solo","_allSolos","solo","_isSoloed","_addSolo","_removeSolo","_updateSolo","_soloed","_noSolos","PanVol","Channel","_solo","_panVol","buses","bus","_getBus","sendKnob","Listener","Octaves","octaveLevel","MicrophonePlugin","ws","wavesurfer","browser","detectBrowser","reloadBufferFunction","reloadBuffer","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","_onBackendCreated","micContext","gotStream","deviceError","stopDevice","localAudioBuffer","mediaStreamSource","levelChecker","uastring","extractVersion","userAgent","minVersion","RTCPeerConnection","LoadButton","loadSound","hidden","accept","download","MicButton","micState","toggleMic","MicLogo","StopLogo","Display","sampler","setEffectsParams","React","setOctave","sampleElements","getButtons","buttonState","setMicState","Kick","defaultSound","setDefaultSound","microphone","effectposition","pad","releaseAll","padClick","padName","file","files","fileList","reader2","readAsDataURL","evt","newOct","EffectsData","delayFeedback","stereoWidth","distort","phaserFreq","phaserOctaves","phaserBaseFreq","chorusFreq","chorusDelayTime","chorusDepth","crusherBits","reverb","stereo","phaser","chorus","crusher","ReactDOM","getElementById"],"sourceRoot":""}